IDENTIFICATION DIVISION.
ENVIRONMENT DIVISION.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  SQLCODE           PIC S9(9) COMP.
01  SQLCODE-C1        PIC S9(9) COMP.

01  MSG               PIC X(80).

01  NAME              PIC X(20).
01  RATING            PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  SALARY            PIC S9(6)V99 DISPLAY SIGN LEADING SEPARATE.
01  CITY              PIC X(20).
01  CITY-INDIC        PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  BONUS             PIC S9(6)V99 DISPLAY SIGN LEADING SEPARATE.
01  BONUS-INDIC       PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  PROJ-TITLE        PIC X(20).
01  PNUM              PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  DEPT-NO           PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  MGR-ID            PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  ZIPCODE           PIC S9(9) DISPLAY SIGN LEADING SEPARATE.
01  MIN-SALARY        PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  EMSG.
   03  EMSG-LINE1     PIC X(80).
   03  EMSG-LINE2     PIC X(64).
01  SP                PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  TRANSACTION-NO    PIC 9(11) COMP.
01  TOT-SAL           PIC S9(8)V99 DISPLAY SIGN LEADING SEPARATE.
COMMUNICATION SECTION.

INPUT HEADER COMS-IN;
 PROGRAMDESG           IS COMS-IN-PROGRAM;
 FUNCTIONSTATUS        IS COMS-IN-FUNCTION-STATUS;
 FUNCTIONINDEX         IS COMS-IN-FUNCTION-INDEX;
 USERCODE              IS COMS-IN-USERCODE;
 SECURITYDESG          IS COMS-IN-SECURITY-DESG;
 TRANSPARENT           IS COMS-IN-TRANSPARENT;
 VTFLAG                IS COMS-IN-VT-FLAG;
 TIMESTAMP             IS COMS-IN-TIMESTAMP;
 STATION               IS COMS-IN-STATION;
 TEXTLENGTH            IS COMS-IN-TEXT-LENGTH;
 STATUSVALUE           IS COMS-IN-STATUS-KEY;
 MESSAGECOUNT          IS COMS-IN-MSG-COUNT;
 RESTART               IS COMS-IN-RST-LOC;
 AGENDA                IS COMS-IN-AGENDA;
 SDFINFO               IS COMS-IN-SDF-INFO;
 CONVERSATION AREA     IS COMS-IN-CONVERSATION SIZE 60.

OUTPUT HEADER COMS-OUT;
 DESTCOUNT             IS COMS-OUT-COUNT;
 TEXTLENGTH            IS COMS-OUT-TEXT-LENGTH;
 STATUSVALUE           IS COMS-OUT-STATUS-KEY;
 TRANSPARENT           IS COMS-OUT-TRANSPARENT;
 VTFLAG                IS COMS-OUT-VT-FLAG;
 CONFIRMFLAG           IS COMS-OUT-CONFIRM-FLAG;
 CONFIRMKEY            IS COMS-OUT-CONFIRM-KEY;
 DESTINATIONDESG       IS COMS-OUT-DESTINATION;
 NEXTINPUTAGENDA       IS COMS-OUT-NEXT-INPUT-AGENDA;
 SETNEXTINPUTAGENDA    IS COMS-OUT-SET-NEXT-INPUT-AGENDA;
 RETAINTRANSACTIONMODE IS COMS-OUT-SAVE-TRANS-MODE;
 AGENDA                IS COMS-OUT-AGENDA;
 SDFINFO               IS COMS-OUT-SDF-INFO.

PROCEDURE DIVISION.

 005-MAIN SECTION.
 005-MAIN-SN.
   CHANGE ATTRIBUTE LIBACCESS OF "DCILIBRARY" TO BYFUNCTION.
   CHANGE ATTRIBUTE FUNCTIONNAME OF "DCILIBRARY" TO "COMSSUPPORT".
   ENABLE INPUT COMS-IN KEY "ONLINE".

   PERFORM 007-PROCESS-COMS-INPUT
     UNTIL COMS-IN-STATUS-KEY = 99.
 005-MAIN-EXIT.
   STOP RUN.

 007-PROCESS-COMS-INPUT SECTION.
 007-PROCESS-COMS-INPUT-SN.
   MOVE SPACES TO MSG.
   RECEIVE COMS-IN MESSAGE INTO MSG.
   IF COMS-IN-STATUS-KEY NOT = 99
     IF (COMS-IN-STATUS-KEY = 0 OR 92) AND
        COMS-IN-FUNCTION-INDEX NOT < 0 THEN
       PERFORM 100-PROCESS-TRANSACTION.
 007-PROCESS-COMS-INPUT-EXIT.
   EXIT.

 100-PROCESS-TRANSACTION SECTION.
 100-PROCESS-TRANSACTION-SN.
   EVALUATE TRANSACTION-NO
     WHEN 0      PERFORM 200-UPDATE-SALARY
     WHEN 1      PERFORM 210-RETRIEVE-RATING
     WHEN 2      PERFORM 220-RETRIEVE-CITY-BONUS
     WHEN 3      PERFORM 230-RETRIEVE-WITH-INDIC
     WHEN 4      PERFORM 240-UPDATE-PROJECT
     WHEN 5      PERFORM 250-INSERT-ASSIGNMENT
     WHEN 6      PERFORM 260-UPDATE-CITY
     WHEN OTHER  MOVE "Invalid transaction number" TO MSG
                 PERFORM 900-SEND-MSG
   END-EVALUATE.
   ADD 1 TO TRANSACTION-NO.
 100-PROCESS-TRANSACTION-EXIT.
   EXIT.

 200-UPDATE-SALARY SECTION.
 200-UPDATE-SALARY-SN.
   MOVE "Update salary" TO MSG.
   PERFORM 900-SEND-MSG.
   MOVE 100000 TO MIN-SALARY.
   MOVE "Jones" TO NAME.
   CALL "OPEN_C1 IN OBJECT/MODLIB/EXDB/ML/C85"
                 USING COMS-IN, NAME, SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     MOVE "Cursor C1 open" TO MSG
     PERFORM 900-SEND-MSG
     PERFORM 300-GET-C1 UNTIL SQLCODE NOT = 0
     IF SQLCODE < 0 THEN
       PERFORM 910-SEND-ERROR-MSG
     CALL "CLOSE_C1 IN OBJECT/MODLIB/EXDB/ML/C85"
                 USING COMS-IN, SQLCODE.
 200-UPDATE-SALARY-EXIT.
   EXIT.

 210-RETRIEVE-RATING SECTION.
 210-RETRIEVE-RATING-SN.
   MOVE 2 TO RATING.
   CALL "OPEN_C2 IN OBJECT/MODLIB/EXDB/ML/C85"
          USING COMS-IN, RATING, SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     MOVE "Cursor C2 open" TO MSG
     PERFORM 900-SEND-MSG
     PERFORM 310-GET-C2 UNTIL SQLCODE NOT = 0
     IF SQLCODE < 0 THEN
       PERFORM 910-SEND-ERROR-MSG
     CALL "CLOSE_C2 IN OBJECT/MODLIB/EXDB/ML/C85"
            USING COMS-IN, SQLCODE
   END-IF.
 210-RETRIEVE-RATING-EXIT.
   EXIT.

 220-RETRIEVE-CITY-BONUS SECTION.
 220-RETRIEVE-CITY-BONUS-SN.
   MOVE 44000 TO SALARY.
   CALL "SELECT-INTO IN OBJECT/MODLIB/EXDB/ML/C85"
          USING COMS-IN, SQLCODE, CITY, BONUS, SALARY.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     MOVE "City and bonus details retrieved" TO MSG
     PERFORM 900-SEND-MSG
   END-IF.
 220-RETRIEVE-CITY-BONUS-EXIT.
   EXIT.

 230-RETRIEVE-WITH-INDIC SECTION.
 230-RETRIEVE-WITH-INDIC-SN.
   MOVE 44000 TO SALARY.
   CALL "SELECT-INTO-INDIC IN OBJECT/MODLIB/EXDB/ML/C85" USING
        COMS-IN,CITY,BONUS,SALARY,BONUS-INDIC,CITY-INDIC,SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     IF BONUS-INDIC >= 0 THEN
       MOVE "Bonus retrieved" TO MSG
       PERFORM 900-SEND-MSG
      ELSE
       MOVE "Bonus = <null>" TO MSG
       PERFORM 900-SEND-MSG
     END-IF
     IF CITY-INDIC >= 0 THEN
       MOVE "City retrieved" TO MSG
       PERFORM 900-SEND-MSG
      ELSE
       MOVE "City = <null>" TO MSG
       PERFORM 900-SEND-MSG
     END-IF
   END-IF.
 230-RETRIEVE-WITH-INDIC-EXIT.
   EXIT.

 240-UPDATE-PROJECT SECTION.
 240-UPDATE-PROJECT-SN.
   MOVE "Quality Assessment" TO PROJ-TITLE.
   CALL "DELETE_FORM IN OBJECT/MODLIB/EXDB/ML/C85"
          USING COMS-IN, PROJ-TITLE, SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     IF SQLCODE=100 THEN
       MOVE "No PROJECT found for DELETE" TO MSG
       PERFORM 900-SEND-MSG
     END-IF
   END-IF.

   MOVE 11 TO PNUM.
   MOVE "Quality Assessment" to PROJ-TITLE.
   MOVE 5 TO DEPT-NO.
   MOVE 45873 TO MGR-ID.
   CALL "INSERT-INTO IN OBJECT/MODLIB/EXDB/ML/C85"
      USING COMS-IN, PNUM, PROJ-TITLE, DEPT-NO, MGR-ID, SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
     MOVE "Rolling back transaction" TO MSG
     PERFORM 900-SEND-MSG
     CALL "ABORT IN OBJECT/MODLIB/EXDB/ML/C85"
              USING COMS-OUT, SQLCODE
     IF SQLCODE < 0 THEN
       PERFORM 910-SEND-ERROR-MSG
     END-IF
    ELSE
     MOVE "PROJECT row added" TO MSG
     PERFORM 900-SEND-MSG
   END-IF.

 240-UPDATE-PROJECT-EXIT.
   EXIT.
 250-INSERT-ASSIGNMENT SECTION.
 250-INSERT-ASSIGNMENT-SN.
   MOVE "Granger" TO NAME.
   CALL "INSERT_FROM_SELECT IN OBJECT/MODLIB/EXDB/ML/C85"
          USING COMS-IN, NAME, SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     IF SQLCODE = 100 THEN
       MOVE "No SELECTed ASSIGNMENTs for INSERT" TO MSG
       PERFORM 900-SEND-MSG
      ELSE
       MOVE "SELECTed ASSIGNMENT INSERTed" to MSG
       PERFORM 900-SEND-MSG
     END-IF
   END-IF.

 250-INSERT-ASSIGNMENT-EXIT.
   EXIT.
 260-UPDATE-CITY SECTION.
 260-UPDATE-CITY-SN.
   MOVE "Irvine" TO CITY.
   MOVE 927182005 TO ZIPCODE.
   MOVE "Jones" TO NAME.
   CALL "UPDATE_SEARCHED IN OBJECT/MODLIB/EXDB/ML/C85"
          USING COMS-IN, ZIPCODE, CITY, NAME, SQLCODE.
   IF SQLCODE < 0 THEN
     PERFORM 910-SEND-ERROR-MSG
    ELSE
     MOVE "PERSON updated - committing transaction" TO MSG
     PERFORM 900-SEND-MSG
     CALL "ENDTRAN IN OBJECT/MODLIB/MDB/ML/C85" USING
            COMS-OUT, SQLCODE
     IF SQLCODE < 0 THEN
       PERFORM 910-SEND-ERROR-MSG
     END-IF
   END-IF.
 260-UPDATE-CITY-EXIT.
   EXIT.

 300-GET-C1 SECTION.
 300-GET-C1-SN.
   CALL "FETCH_C1 IN OBJECT/MODLIB/EXDB/ML/C85"
                 USING COMS-IN, SALARY, SQLCODE.
   IF SQLCODE = 0 THEN
     MOVE "Salary retrieved" TO MSG
     PERFORM 900-SEND-MSG
     IF SALARY < MIN-SALARY
       CALL "SET_SAVEPOINT IN OBJECT/MODLIB/EXDB/ML/C85"
                 USING COMS-IN, SQLCODE, SP
       CALL "UPDATE_POSITIONED IN OBJECT/MODLIB/EXDB/ML/C85"
                 USING COMS-IN, SQLCODE-C1, MIN-SALARY
       IF SQLCODE-C1 < 0 THEN
         PERFORM 910-SEND-ERROR-MSG
        ELSE
         CALL "FIND_TOTAL_SALARY IN OBJECT/MODLIB/EXDB/ML/C85"
                USING COMS-IN, SQLCODE, TOT-SAL
         IF TOT-SAL > 1000000
           CALL "CANCEL_TO_SAVEPT IN OBJECT/MODLIB/EXDB/ML/C85"
                USING COMS-IN, SQLCODE, SP
         END-IF
       END-IF
     END-IF
    ELSE
     IF SQLCODE = 100 THEN
       MOVE "No more data for FETCH: Cursor C1" TO MSG
       PERFORM 900-SEND-MSG
      ELSE
       PERFORM 910-SEND-ERROR-MSG
     END-IF.
 300-GET-C1-EXIT.
   EXIT.

 310-GET-C2 SECTION.
 310-GET-C2-SN.
   CALL "FETCH_C2 IN OBJECT/MODLIB/EXDB/ML/C85"
             USING COMS-IN, RATING, SQLCODE.
   IF SQLCODE = 0 THEN
     MOVE "Rating retrieved" to MSG
     PERFORM 900-SEND-MSG
    ELSE
     IF SQLCODE = 100
       MOVE "No more data for FETCH: Cursor C2" TO MSG
       PERFORM 900-SEND-MSG
      ELSE
       PERFORM 910-SEND-ERROR-MSG
     END-IF
   END-IF.
 310-GET-C2-EXIT.
   EXIT.

 900-SEND-MSG SECTION.
 900-SEND-MSG-SN.
   MOVE 80 TO COMS-OUT-TEXT-LENGTH.
   SEND COMS-OUT FROM MSG.
   IF COMS-OUT-STATUS-KEY = 0
     NEXT SENTENCE
    ELSE
     DISPLAY "SQL: SEND error: " COMS-OUT-STATUS-KEY.
 900-SEND-MSG-EXIT.
   EXIT.

 910-SEND-ERROR-MSG SECTION.
 910-SEND-ERROR-MSG-SN.
   CALL "RETURN_ERROR_MESSAGE IN OBJECT/MODLIB/EXDB/ML/C85" USING
     EMSG.
   MOVE EMSG-LINE1 TO MSG.
   PERFORM 900-SEND-MSG.
   IF EMSG-LINE2 NOT = SPACES
     MOVE EMSG-LINE2 TO MSG
     PERFORM 900-SEND-MSG.
 910-SEND-ERROR-MSG-EXIT.
   EXIT.
