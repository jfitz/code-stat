/* THIS PROGRAM READS IN A TEXT AND COUNTS THE NUMBER OF TIMES 
 THAT EACH ALPHABETIC DIGRAM OCCURS. A DIGRAM IS A SEQUENCE 
 OF TWO ADJACENT CHARACTERS. FOR INSTANCE, THE DIGRAMS IN 
 'GRUNGE" ARE GR, RU, UN, NG, AND GE. 
*/
DIGRAMS: PROCEDURE OPTIONS (MAIN) ;
    DECLARE COUNT(26,26) FIXED(4);
    /* COUNT (I, J) GIVES THE CURRENT COUNT OF OCCURRENCES
       OF THE DIGRAM FORMED FROM THE I­TH LETTER AND 
       THE J­TH LETTER. 
    */
    DECLARE ALPH CHARACTER (26) INITIAL
          ( 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' );
    DECLARE (P1,P2) FIXED; /* ALPHABETIC POSITION OF LETTER */
    DECLARE (L1,L2) CHARACTER(1) ;
    /* FIRST AND SECOND LETTERS OF DIGRAM */
    DECLARE DONE BIT(l) INITIAL ('0'B);
    /* COMPLETION FLAG */
/* SET ALL ELEMENTS OF THE COUNT ARRAY TO ZERO */

COUNT = 0;

/* READ AND PROCESS DIGRAMS */
RDLOOP: DO WHILE ('1'B); /* DO FOREVER */
     CALL GET_DIGRAM(L1,L2,D0NE);
     IF DONE THEN
        GO TO PRINT;
     P1 = INDEX (ALPH, L1 );
     P2 = INDEX (ALPH, L2);

/* N.B. ­­INDEX RETURNS ZERO IF LETTER NOT IN ALPHABET */

    IF PI * P2 > 0 THEN /* DIGRAM IS ALPHABETIC */
        C0UNT(P1,P2) =C0UNT(P1,P2)+1;
    END RDLOOP;

/* PRINT THE RESULTS */
PRINT: DO P1 = 1 TO 26;
         DO P2 = 1 TO 26;
           IF COUNT(P1, P2) > 0 THEN /* DIGRAM APPEARED */
             PUT EDIT(SUBSTR(ALPH,P1,1) ,
              SUBSTR(ALPH,P2,1), COUNT (P1,P2))
              (SKIP,2 A(l), X(2), F(4));
             END;
       END;

    STOP; /* END EXECUTION OF PROGRAM */
/* INTERNAL PROCEDURE TO EXTRACT THE NEXT PAIR FROM THE INPUT TEXT
*/
GET_DIGRAM: PROCEDURE (L1,L2,FLAG);
    DECLARE (L1,L2) CHARACTER(1); /* LETTER PAIR */
    DECLARE FLAG BIT(l);  /* END­OF­DATA INDICATOR */
    DECLARE CARD CHARACTER(80); /* INPUT LINE IMAGE */
    DECLARE POSN FIXED STATIC INITIAL(80);
      /* CHARACTER POSITION IN INPUT
                                 CARD */
    DECLARE SYSIN RECORD INPUT FILE;
        /* INPUT READ FROM FILE SYSIN */
    ON ENDFILE (SYSIN) /* WHEN INPUT EXHAUSTED */
        GO TO INPUT_FINISHED;
    IF POSN > 79 THEN DO;
        READ FILE(SYSIN) INTO(CARD); /* READ A CARD */
        POSN =1; /* PROCESS FROM START OF CARD */
    END;
    L1 = SUBSTR(CARD, POSN, 1);
    L2 = SUBSTR(CARD, POSN+1,1);
    POSN = POSN+1;  /* MOVE TO NEXT PAIR */
    RETURN; /* EXIT FROM THIS PROCEDURE */

/* COME HERE IF THE READ STATEMENT ENCOUNTERED AN END OF FILE  */

INPUT_FINISHED:
    FLAG = '1'B; /* SIGNAL COMPLETION TO CALLER */
    RETURN ;
    END GET_DIGRAM;
END DIGRAMS;
