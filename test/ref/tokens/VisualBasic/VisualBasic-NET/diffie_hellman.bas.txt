[
    {
        "type":"comment",
        "value":"'  Create two separate instances of the DH object."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"New"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ChilkatDh"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhAlice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"New"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ChilkatDh"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"Long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Unlock the component once at program startup..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"UnlockComponent"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\"Anything for 30-day trial\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"If"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"Then"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"LastErrorText"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Exit"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"Sub"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"End"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"If"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The DH algorithm begins with a large prime, P, and a generator, G."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  These don't have to be secret, and they may be transmitted over an insecure channel."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The generator is a small integer and typically has the value 2 or 5."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The Chilkat DH component provides the ability to use known"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  \"safe\" primes, as well as a method to generate new safe primes."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  This example will use a known safe prime.  Generating"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  new safe primes is a time-consuming CPU intensive task"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  and is normally done offline."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Bob will choose to use the 2nd of our 8 pre-chosen safe primes."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  It is the Prime for the 2nd Oakley Group (RFC 2409) --"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  1024-bit MODP Group.  Generator is 2."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The prime is: 2^1024 - 2^960 - 1 + 2^64 * { [2^894 pi] + 129093 }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"UseKnownPrime"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The computed shared secret will be equal to the size of the prime (in bits)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  However, the result is returned as an SSH1-encoded bignum in hex string format."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  per byte for the hex encoding)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"p"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"g"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"Long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Bob will now send P and G to Alice."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"p"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"P"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"g"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Alice calls SetPG to set P and G.  SetPG checks"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  the values to make sure it's a safe prime and will"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  return 0 if not."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhAlice"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"SetPG"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"p"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"g"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"If"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"Then"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"P is not a safe prime\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Exit"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"Sub"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"End"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"If"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Each side begins by generating an \"E\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  value.  The CreateE method has one argument: numBits."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  It should be set to twice the size of the number of bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  in the session key."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Let's say we want to generate a 128-bit session key"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  for AES encryption.  The shared secret generated by the Diffie-Hellman"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  algorithm will be longer, so we'll hash the result to arrive at the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  desired session key length.  However, the length of the session"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  key we'll utlimately produce determines the value that should be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  passed to the CreateE method."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  In this case, we'll be creating a 128-bit session key, so pass 256 to CreateE."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  This setting is for security purposes only -- the value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  passed to CreateE does not change the length of the shared secret"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  that is produced by Diffie-Hellman."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Also, there is no need to pass in a value larger"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  than 2 times the expected session key length.  It suffices to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  pass exactly 2 times the session key length."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Bob generates a random E (which has the mathematical"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  properties required for DH)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"eBob"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"eBob"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CreateE"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"256"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Alice does the same:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"eAlice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"eAlice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhAlice"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CreateE"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"256"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  The \"E\" values are sent over the insecure channel."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Bob sends his \"E\" to Alice, and Alice sends her \"E\" to Bob."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Each side computes the shared secret by calling FindK."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  \"K\" is the shared-secret."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"kBob"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"kAlice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Bob computes the shared secret from Alice's \"E\":"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"kBob"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhBob"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"FindK"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"eAlice"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Alice computes the shared secret from Bob's \"E\":"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"kAlice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"dhAlice"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"FindK"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"eBob"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Amazingly, kBob and kAlice are identical and the expected"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  length (260 characters).  The strings contain the hex encoded bytes of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  our shared secret:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Bob's shared secret:\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"kBob"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Alice's shared secret (should be equal to Bob's)\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"kAlice"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  To arrive at a 128-bit session key for AES encryption, Bob and Alice should"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  both transform the raw shared secret using a hash algorithm that produces"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  the size of session key desired.   MD5 produces a 16-byte (128-bit) result, so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  this is a good choice for 128-bit AES."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Here's how you would use Chilkat Crypt (a separate Chilkat component) to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  produce the session key:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"New"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ChilkatCrypt2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"UnlockComponent"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\"Anything for 30-day trial.\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"If"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"success"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"Then"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"LastErrorText"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Exit"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"Sub"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"End"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"If"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"EncodingMode"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"hex\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"HashAlgorithm"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"md5\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"sessionKey"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"sessionKey"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"HashStringENC"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"kBob"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"128-bit Session Key:\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"sessionKey"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Encrypt something..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CryptAlgorithm"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"aes\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"KeyLength"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"128"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CipherMode"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"cbc\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Use an IV that is the MD5 hash of the session key..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"iv"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"iv"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"HashStringENC"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"sessionKey"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  AES uses a 16-byte IV:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Initialization Vector:\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"iv"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"SetEncodedKey"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"sessionKey"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"hex\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"SetEncodedIV"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"iv"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"hex\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"'  Encrypt some text:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"cipherText64"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"EncodingMode"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"base64\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"cipherText64"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"EncryptStringENC"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\"The quick brown fox jumps over the lazy dog\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"cipherText64"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"Dim"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"plainText"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"As"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"type",
        "value":"String"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"plainText"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"crypt"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"DecryptStringENC"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"cipherText64"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"Debug"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"plainText"
    }
]
