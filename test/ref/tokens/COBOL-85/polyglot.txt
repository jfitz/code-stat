[
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"                                                                       "
    },
    {
        "type":"line identification",
        "value":" (*O/*_/"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"Cu  #%"
    },
    {
        "type":"comment",
        "value":"* )pop mark/CuG 4 def/# 2 def%%%%@@P[TX---P\\P_SXPY!Ex(mx2ex(\"SX!Ex4P)Ex="
    },
    {
        "type":"line identification",
        "value":"4P)Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*------------------------------------------------------------------*+Ex="
    },
    {
        "type":"line identification",
        "value":"-*+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   POLYGLOT - a program in eight languages      15 February 1991  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   10th Anniversary Edition                      1 December 2001  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   Written by Kevin Bungard, Peter Lisle, and Chris Tham          *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   Polyglot suports the following languages:                      *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     1. COBOL (ANSI)                                              *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     2. Pascal (ISO)                                              *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     3. Fortran (ANSI, f77)                                       *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     4. C (ANSI-ish)                                              *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     5. PostScript                                                *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     6. Linux/Unix shell script (bash, sh, csh)                   *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     7. x86 machine language (MS-DOS, Win32, Linux)               *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     8. Perl (version 5)                                          *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   Usage:                                                         *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     1. Rename this file to polyglot.[cob|pas|f77|c|ps|sh|com|pl] *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     2. Compile and run with your favorite compiler and operating *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*        system.                                                   *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   Notes:                                                         *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     1. We have attempted to use only standard language features. *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     2. Without the -traditional flag gcc will issue a warning.   *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     3. When transferring from Unix to DOS make sure that a LF    *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*        is correctly translated into a CR/LF.                     *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     4. Keep the blank lines at the start of the program. They    *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*        are important.                                            *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*     5. This text is a comment block in all eight languages.      *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   Please mail any comments, corrections or additions to          *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*   polyglot@ideology.com.au                                       *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*------------------------------------------------------------------*QuZ="
    },
    {
        "type":"line identification",
        "value":"-*QuZ="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*                                                                  *+Ex="
    },
    {
        "type":"line identification",
        "value":" *+Ex="
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #%"
    },
    {
        "type":"comment",
        "value":"*!Mx)ExQX5ZZ5SSP5n*5X!)Ex+ExPQXH,B+ExP[-9A-9B(g?(gA'UTTER_XYZZXX!X *+"
    },
    {
        "type":"line identification",
        "value":" *+"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"CuG #("
    },
    {
        "type":"comment",
        "value":"*                                                                  *("
    },
    {
        "type":"line identification",
        "value":" *("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"comment",
        "value":"*/);                                                              /*("
    },
    {
        "type":"line identification",
        "value":"/*("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"comment",
        "value":"*)  program        polyglot (output);                             (*+"
    },
    {
        "type":"line identification",
        "value":"(*+"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"identification"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"division"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"program-id"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"polyglot"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   #"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"data"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"keyword",
        "value":"division"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"division"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   #"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"comment",
        "value":"* ))cleartomark   /Bookman-Demi findfont 36 scalefont setfont     ("
    },
    {
        "type":"line identification",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"comment",
        "value":"*                                                                 ("
    },
    {
        "type":"line identification",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   #"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"comment",
        "value":"*                  hello polyglots$"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"main"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"perform"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C  /# "
    },
    {
        "type":"comment",
        "value":"* ) 2>_$$; echo   \"hello polyglots\"; rm _$$; exit;"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   # "
    },
    {
        "type":"comment",
        "value":"* ("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C   #"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*0 ) unless print \"hello polyglots\\n\"; __END__"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"print"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"stop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"run"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"     -"
    },
    {
        "type":"comment",
        "value":"*,                'hello polyglots'"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"print"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"display"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"string",
        "value":"\"hello polyglots\""
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"line identification",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*/  int i;                                                        /*"
    },
    {
        "type":"line identification",
        "value":"/*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*/  main () {                                                     /*"
    },
    {
        "type":"line identification",
        "value":"/*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*/      i=printf (\"hello polyglots\\n\"); O= &i; return *O;         /*"
    },
    {
        "type":"line identification",
        "value":"/*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*)                                                                (*"
    },
    {
        "type":"line identification",
        "value":"(*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*)  begin                                                         (*"
    },
    {
        "type":"line identification",
        "value":"(*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*)      writeln  ('hello polyglots');                             (*"
    },
    {
        "type":"line identification",
        "value":"(*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*)                                                                (* )"
    },
    {
        "type":"line identification",
        "value":"(* )"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"* ) pop 60 360                                                    ("
    },
    {
        "type":"line identification",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"* ) pop moveto    (hello polyglots) show                          ("
    },
    {
        "type":"line identification",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"* ) pop showpage                                                  (("
    },
    {
        "type":"line identification",
        "value":"(("
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C     "
    },
    {
        "type":"comment",
        "value":"*)"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":"                                                         "
    },
    {
        "type":"line identification",
        "value":".(* )"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"line identification",
        "value":"C)pop%"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"keyword",
        "value":"program"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"identifier",
        "value":"polyglot"
    },
    {
        "type":"statement terminator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":"                                     "
    },
    {
        "type":"line identification",
        "value":"*){*/}"
    },
    {
        "type":"newline",
        "value":"\n"
    }
]
