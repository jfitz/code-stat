[
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "HTML"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "head"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "script",
        "value": "<script type=\"text/javascript\">\r\n    function keysInObject(o) {\r\n      var keys = [];\r\n    \r\n      for (var key in o) {\r\n        keys.push(key);\r\n      }\r\n    \r\n      return keys;\r\n    }\r\n    \r\n    function sortedKeysInObject(o) {\r\n      var keys = keysInObject(o);\r\n      var sorted_keys = [];\r\n    \r\n      while (keys.length > 0) {\r\n        var max_value = -1.0;\r\n        var max_index = -1;\r\n        for (var i = 0; i < keys.length; i++) {\r\n          if (o[keys[i]] > max_value) {\r\n            max_value = o[keys[i]];\r\n            max_index = i;\r\n          }\r\n        }\r\n        sorted_keys.push(keys[max_index]);\r\n        keys.splice(max_index, 1);\r\n      }\r\n    \r\n      return sorted_keys;\r\n    }\r\n    \r\n    function longestString(ss) {\r\n      var longest = '';\r\n    \r\n      for (var i = 0; i < ss.length; i++) {\r\n        if (ss[i].length > longest.length) {\r\n          longest = ss[i];\r\n        }\r\n      }\r\n    \r\n      return longest;\r\n    }\r\n    \r\n    function buildConfidenceLine(name, confidence, width, decimals, nameLength) {\r\n        // format the name with trailing spaces\r\n        var numSpaces = nameLength - name.length + 1;\r\n        var spaces = ' '.repeat(numSpaces);\r\n        var nameBar = name + spaces;\r\n        // format the chart (stars) with trailing spaces\r\n        var gridConfidence = Math.round(confidence * width);\r\n        var gridStars = '*'.repeat(gridConfidence);\r\n        var gridSpaces = ' '.repeat(width - gridConfidence);\r\n        var gridBar = '  [' + gridStars + gridSpaces + ']';\r\n        var line = nameBar + confidence.toFixed(decimals) + gridBar;\r\n    \r\n        return line;\r\n    }\r\n    \r\n    function buildConfidenceGrid(confidences) {\r\n      var width = 20;\r\n      var decimals = 5;\r\n      var names = sortedKeysInObject(confidences);\r\n      var nameLength = longestString(names).length;\r\n    \r\n      var confidenceGridHtml = '<code><pre>';\r\n    \r\n        // format the name with trailing spaces\r\n        for (var i = 0; i < names.length; i++) {\r\n          var name = names[i];\r\n          var confidence = confidences[name];\r\n          var line = buildConfidenceLine(name, confidence, width, decimals, nameLength);\r\n          var htmlLine = line + '<br/>';\r\n    \r\n          confidenceGridHtml += htmlLine;\r\n        }\r\n    \r\n      confidenceGridHtml += '</pre></code>';\r\n    \r\n      return confidenceGridHtml;\r\n    }\r\n    \r\n    function keyWithGreatestValue(o) {\r\n      var greatestValueKey = o[0];\r\n      var greatestValue = 0.0;\r\n    \r\n      for (var key in o) {\r\n        if (o[key] > greatestValue) {\r\n          greatestValueKey = key;\r\n          greatestValue = o[key];\r\n        }\r\n      }\r\n    \r\n      return greatestValueKey;\r\n    }\r\n    \r\n    function buildLanguageSelectOptions(languageSelect, names) {\r\n      while (languageSelect.firstChild) {\r\n        languageSelect.removeChild(languageSelect.firstChild);\r\n      }\r\n    \r\n      for (var i = 0; i < names.length; i++) {\r\n        var option = document.createElement('option');\r\n        option.value = names[i];\r\n        option.textContent = names[i];\r\n        languageSelect.appendChild(option);\r\n      }\r\n    }\r\n    \r\n    function loadLanguageNames() {\r\n      var code = document.getElementById('code').value;\r\n      var req = new XMLHttpRequest();\r\n      req.open('GET', '/languages', true);\r\n    \r\n      req.onload = function (e) {\r\n        if (req.readyState === 4) {\r\n          if (req.status === 200) {\r\n            var results = req.responseText;\r\n            var codesAndNames = JSON.parse(results);\r\n    \r\n            names = []\r\n            for (var code in codesAndNames) {\r\n              if (codesAndNames.hasOwnProperty(code) ) {\r\n                names.push(codesAndNames[code]);\r\n              }\r\n            }\r\n    \r\n            names.sort();\r\n    \r\n            // checkboxes for detect list\r\n            HTML = '';\r\n    \r\n            for (i = 0; i < names.length; i++) {\r\n              HTML += '<input type=\"checkbox\">' + names[i] + '</input><br/>'\r\n            }\r\n    \r\n            list_div = document.getElementById('detect_list');\r\n            list_div.innerHTML = HTML;\r\n    \r\n            // names for tokenize drop-down\r\n            var tokenizeLanguageSelect = document.getElementById('token_language');\r\n            buildLanguageSelectOptions(tokenizeLanguageSelect, names);\r\n    \r\n            // names for confidence drop-down\r\n            var confidenceLanguageSelect = document.getElementById('confidence_language');\r\n            buildLanguageSelectOptions(confidenceLanguageSelect, names);\r\n          }\r\n        }\r\n      }\r\n    \r\n      req.send()\r\n    }\r\n    \r\n    function detectLanguage() {\r\n        var results = '';\r\n        var code = document.getElementById('code').value;\r\n        var req = new XMLHttpRequest();\r\n        req.open('POST', '/detect', true);\r\n        req.setRequestHeader('Content-type', 'text/plain');\r\n    \r\n        req.onload = function (e) {\r\n          if (req.readyState === 4) {\r\n            if (req.status === 200) {\r\n              results = req.responseText;\r\n              var confidences = JSON.parse(results);\r\n              var names = keysInObject(confidences).sort();\r\n    \r\n              // build list of names\r\n              var tokenizeLanguageSelect = document.getElementById('token_language');\r\n              buildLanguageSelectOptions(tokenizeLanguageSelect, names)\r\n    \r\n              var confidenceLanguageSelect = document.getElementById('confidence_language');\r\n              buildLanguageSelectOptions(confidenceLanguageSelect, names)\r\n    \r\n              // build list of names and confidence values\r\n              var detectDiv = document.getElementById('detect_result');\r\n              var confidenceGridHtml = buildConfidenceGrid(confidences);\r\n              detectDiv.innerHTML = confidenceGridHtml;\r\n    \r\n              if (names.length > 0) {\r\n                // find the most likely language\r\n                tokenizeLanguageSelect.value = keyWithGreatestValue(confidences)\r\n                confidenceLanguageSelect.value = keyWithGreatestValue(confidences)\r\n              }\r\n            } else {\r\n              console.error(req.statusText);\r\n            }\r\n          }\r\n        };\r\n    \r\n        req.onerror = function (e) {\r\n          console.error(req.statusText);\r\n        };\r\n    \r\n        req.send(code);\r\n    }\r\n    \r\n    function textToSafeHtml(str) {\r\n      var s1 = str.replace(/&/g, '&amp;');\r\n      var s2 = s1.replace(/</g, '&lt;');\r\n      var s3 = s2.replace(/>/g, '&gt;');\r\n      var s4 = s3.replace(/\"/g, '&quot;');\r\n      return s4;\r\n    }\r\n    \r\n    function colorize(token, htmlColors) {\r\n      var tokenType = token['type'];\r\n      var tokenValue = token['value'];\r\n      var tokenSafe = textToSafeHtml(tokenValue);\r\n      var tokenHtml = 'empty';\r\n    \r\n      if (tokenType == 'newline') {\r\n        tokenHtml = '<br/>'; \r\n      } else if (tokenType.startsWith('invalid')) {\r\n        var frontHtml = '<font color=red>';\r\n        var backHtml = '</font>';\r\n        tokenHtml = frontHtml + tokenSafe + backHtml;\r\n      } else if (tokenType in htmlColors) {\r\n        var frontHtml = '<font color=' + htmlColors[tokenType] + '>';\r\n        var backHtml = '</font>';\r\n        tokenHtml = frontHtml + tokenSafe + backHtml;\r\n      } else {\r\n        tokenHtml = tokenSafe;\r\n      }\r\n    \r\n      return tokenHtml;\r\n    }\r\n    \r\n    function formatCounts(counts) {\r\n      var html = ''\r\n    \r\n      var keys = [];\r\n      for (var key in counts) {\r\n        if (counts.hasOwnProperty(key)) {\r\n          keys.push(key);\r\n        }\r\n      }\r\n      var length = keys.length\r\n    \r\n      var total = 0\r\n      for (var i = 0; i < length; i++) {\r\n        var key = keys[i];\r\n        var count = counts[key];\r\n        total += count\r\n        html += key + '|' + count + '<br/>';\r\n      }\r\n      html += 'TOTAL' + '|' + total + '<br/>';\r\n    \r\n      return html;\r\n    }\r\n    \r\n    function formatConfidence(confidences) {\r\n      var html = ''\r\n    \r\n      var keys = [];\r\n      for (var key in confidences) {\r\n        if (confidences.hasOwnProperty(key)) {\r\n          keys.push(key);\r\n        }\r\n      }\r\n      var length = keys.length\r\n    \r\n      for (var i = 0; i < length; i++) {\r\n        var key = keys[i];\r\n        var count = confidences[key];\r\n        html += key + '|' + count + '<br/>';\r\n      }\r\n    \r\n      return html;\r\n    }\r\n    \r\n    function showConfidence() {\r\n      var results = '';\r\n      var code = document.getElementById('code').value;\r\n      var language = document.getElementById('confidence_language').value;\r\n      // change 'C++' because the '+' character causes problems for requests\r\n      // TODO: escape the request to allow '+'\r\n      if (language == 'C++') {\r\n        language = 'Cpp';\r\n      }\r\n      if (language == 'C#') {\r\n        language = 'Csharp';\r\n      }\r\n    \r\n      var query = '/confidence?language=' + language;\r\n      var req = new XMLHttpRequest();\r\n      req.open('POST', query, true);\r\n      req.setRequestHeader('Content-type', 'text/plain');\r\n      req.onload = function (e) {\r\n        if (req.readyState === 4) {\r\n          if (req.status === 200) {\r\n            var results = req.responseText;\r\n            var confidences = JSON.parse(results);\r\n            var length = confidences.length;\r\n    \r\n            var formattedConfidence = formatConfidence(confidences);\r\n    \r\n            var div_confidence = document.getElementById('confidence_result');\r\n            div_confidence.innerHTML = formattedConfidence;\r\n          } else {\r\n            // TODO: build a response\r\n            console.error(req.statusText);\r\n          }\r\n        }\r\n      };\r\n    \r\n      req.onerror = function (e) {\r\n        // TODO: build a response\r\n        console.error(req.statusText);\r\n      };\r\n    \r\n      req.send(code);\r\n    };\r\n    \r\n    function tokenize() {\r\n      var htmlColors = {\r\n        keyword: 'orchid',\r\n        number: 'blue',\r\n        string: 'salmon',\r\n        variable: 'steelblue',\r\n        symbol: 'purple',\r\n        operator: 'green',\r\n        group: 'green',\r\n        format: 'orange',\r\n        regex: 'orange',\r\n        comment: 'yellowgreen',\r\n        remark: 'yellowgreen',\r\n        picture: 'hotpink',\r\n        invalid: 'red',\r\n        directive: 'lightgreen',\r\n        preprocessor: 'lightgreen',\r\n        attribute: 'lightgreen',\r\n        'line number': 'skyblue',\r\n        'line identification': 'royalblue',\r\n        'line continuation': 'goldenrod',\r\n        'statement terminator': 'goldenrod',\r\n        'statement separator': 'goldenrod',\r\n        'doc marker': 'orchid',\r\n        'here doc': 'hotpink',\r\n        'exec block': 'crimson'\r\n      };\r\n    \r\n      var results = '';\r\n      var code = document.getElementById('code').value;\r\n      var language = document.getElementById('token_language').value;\r\n      // change 'C++' because the '+' character causes problems for requests\r\n      // TODO: escape the request to allow '+'\r\n      if (language == 'C++') {\r\n        language = 'Cpp';\r\n      }\r\n      if (language == 'C#') {\r\n        language = 'Csharp';\r\n      }\r\n    \r\n      var query = '/tokens?language=' + language;\r\n      var req = new XMLHttpRequest();\r\n      req.open('POST', query, true);\r\n      req.setRequestHeader('Content-type', 'text/plain');\r\n      req.onload = function (e) {\r\n        if (req.readyState === 4) {\r\n          if (req.status === 200) {\r\n            var results = req.responseText;\r\n            var tokens = JSON.parse(results);\r\n            var length = tokens.length;\r\n    \r\n            var counts = {};\r\n    \r\n            for (var i = 0; i < length; i++) {\r\n              var token = tokens[i];\r\n              var ctype = token['type'];\r\n              if (ctype in counts) {\r\n                counts[ctype] += 1;\r\n              } else {\r\n                counts[ctype] = 1;\r\n              }\r\n            }\r\n    \r\n            var formattedDetails = formatCounts(counts);\r\n    \r\n            var div_details = document.getElementById('tokens_details');\r\n            div_details.innerHTML = formattedDetails;\r\n    \r\n            var formattedResults = '<code><pre>';\r\n    \r\n            for (var i = 0; i < length; i++) {\r\n              var token = tokens[i];\r\n              formattedResults += colorize(token, htmlColors);\r\n            }\r\n    \r\n            formattedResults += '</pre></code>';\r\n    \r\n            var div_tokens = document.getElementById('tokens_result');\r\n            div_tokens.innerHTML = formattedResults;\r\n          } else {\r\n            // TODO: build a response\r\n            console.error(req.statusText);\r\n          }\r\n        }\r\n      };\r\n    \r\n      req.onerror = function (e) {\r\n        // TODO: build a response\r\n        console.error(req.statusText);\r\n      };\r\n    \r\n      req.send(code);\r\n    }\r\n    </script>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "head"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "body"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "onload"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"loadLanguageNames()\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "Welcome"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "to"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "the"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "CodeStat"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "page"
    },
    {
        "type": "punctuation",
        "value": "!"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"code_input\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "textarea"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"width:100%;\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "rows"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"20\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"code\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "textarea"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"detect_input\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"detect_list\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "input"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "type"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"button\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "OnClick"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"detectLanguage();\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "value"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"Detect language\""
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"tokenize_input\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "select"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "name"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"token_language\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"token_language\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "option"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "identifier",
        "value": "BASIC"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "option"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "select"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "input"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "type"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"button\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "OnClick"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"tokenize();\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "value"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"Tokenize\""
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"confidence_input\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "select"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "name"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"confidence_language\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"confidence_language\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "option"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "identifier",
        "value": "BASIC"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "option"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "select"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "input"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "type"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"button\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "OnClick"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"showConfidence();\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "value"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"Confidence\""
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"detect_result\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"confidence_result\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"tokens_details\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "br"
    },
    {
        "type": "group",
        "value": "/>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "<"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"tokens_result\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "style"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "string",
        "value": "\"border:1px solid black\""
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "div"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "body"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "</"
    },
    {
        "type": "keyword",
        "value": "HTML"
    },
    {
        "type": "group",
        "value": ">"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    }
]
