[
    {
        "type":"keyword",
        "value":"package"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perligata"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"our"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$VERSION"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'0.601'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"use"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Filter"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Util"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Call"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"use"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"IO"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Handle"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"use"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Data"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Dumper"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Dumper'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$offset"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"import"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"filter_add"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$offset"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"caller"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"grep"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^converte?$/i"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"identifier",
        "value":"$#_"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"grep"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^investiga?$/i"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"identifier",
        "value":"$#_"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"grep"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^discribe?$/i"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"identifier",
        "value":"$#_"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$translator"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"q{\r\nBEGIN {\r\n    $SIG{__DIE__} = sub { die Lingua::Romana::Perligata::readversum($_[0]) };\r\n    $SIG{__WARN__} = sub { return if $_[0] =~ /(...) interpreted as function/;\r\n                   warn Lingua::Romana::Perligata::readversum($_[0]) };\r\n}\r\n}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"unimport"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"filter_del"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"filter"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$status"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$status"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"filter_read"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"100_000"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$status"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$status"
    },
    {
        "type":"operator",
        "value":"<"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"regex",
        "value":"s/\\A#!.*\\n//"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"tokenize"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@commands"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@commands"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"conn_command"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'END'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$tokens"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\";\\n\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@commands"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$translate"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"and"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"exit"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/\\S/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"=\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"72"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"string",
        "value":"\"\\nTranslated to:\\n\\n$_\\n\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"string",
        "value":"\"=\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"72"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"$translator\\n#line $offset\\n;$_\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$status"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"#==========TOKENIZER============"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"adversum"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" ad versum \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"to_rn"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"line"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\n\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"readversum"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"m{(.*)at\\s+(\\S+)\\s+line\\s+(\\d+)(.*)}s"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"or"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" ad $2 versum \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"to_rn"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"make_range"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$five"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ten"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$two"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$three"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$two"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$three"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"$five"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$five"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"identifier",
        "value":"$five"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$five"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"$two"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$five"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"$three"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$unit"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"$ten"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@order"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{         I         V                  X          }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{         X         L                  C          }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{         C         D                  M          }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{         M         I))              ((I))        }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{       ((I))       I)))            (((I)))       }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{      (((I)))      I))))          ((((I))))      }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{     ((((I))))     I)))))        (((((I)))))     }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{    (((((I)))))    I))))))      ((((((I))))))    }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{   ((((((I))))))   I)))))))    (((((((I)))))))   }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"function",
        "value":"make_range"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw{  (((((((I)))))))  I))))))))  ((((((((I))))))))  }"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%val"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"$power"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"identifier",
        "value":"$#order"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"@val"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$order"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"identifier",
        "value":"$power"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"number",
        "value":"10"
    },
    {
        "type":"operator",
        "value":"**"
    },
    {
        "type":"identifier",
        "value":"$power"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"number",
        "value":"9"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$roman"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'('"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\")(\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\"|\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"quotemeta"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"reverse"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@$_"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"reverse"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@order"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'|)'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"from_rn"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$val"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"@numerals"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$val"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/(?:$roman)/ix"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"@numerals"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$val"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"or"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$val"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$an"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$an"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"+="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$val"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@numerals"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$an"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"__beautify__"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\b(\\d+)\\b/to_rn($1)/ge"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"to_rn"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"nullum\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"@digits"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"split"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"''"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"grep"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"regex",
        "value":"/\\D/"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@digits"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$power"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rn"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$rn"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$order"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"identifier",
        "value":"$power"
    },
    {
        "type":"operator",
        "value":"++"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rn"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"reverse"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@digits"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rn"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"getline"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$fh"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"wantarray"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lines"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"IO"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Handle"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"function",
        "value":"getlines"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$fh"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"regex",
        "value":"s/\\b($roman)\\b/$1 ? from_rn($1) : $1/ge"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"for"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lines"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lines"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"IO"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Handle"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"function",
        "value":"getline"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$fh"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\b($roman)\\b/$1 ? from_rn($1) : $1/ge"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"multibless"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"prototype",
        "value":"\\%$$"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$lextype"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"$key"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%$hash"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lextype"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"addres"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"prototype",
        "value":"\\%$$"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$lextype"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"%acc"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%dat"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"$key"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%$hash"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$acc"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"string",
        "value":"'mentum'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$acc"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"string",
        "value":"'menta'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$dat"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"string",
        "value":"'mento'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$dat"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"string",
        "value":"'mentis'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%acc"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lextype"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"string",
        "value":"'_ACCUSATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%dat"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lextype"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"string",
        "value":"'_DATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%$hash"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%$hash"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%acc"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%dat"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"add_genitives"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"prototype",
        "value":"\\%$$$"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$from"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$to"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"$key"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%$hash"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$genkey"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$genkey"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/$from$/$to/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"or"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"next"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$genkey"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$hash"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%literals"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'novumversum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\"\\n\"'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'biguttam'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\":\"'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'lacunam'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\" \"'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'stadium'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\"\\t\"'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parprimum'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$1'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'pardecimum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$10'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parsecundum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$2'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'partertium'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$3'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parquartum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$4'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parquintum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$5'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parsextum'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$6'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parseptimum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$7'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'paroctavum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$8'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'parnonum'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$9'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nomen'"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$<'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%literals"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"add_genitives"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%literals"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'um'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'i'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%numerals"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nullum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'0'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'unum'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'1'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'unam'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'1'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'duo'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'2'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'duas'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'2'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'tres'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'3'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quattuor'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'4'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quinque'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'5'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'sex'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'6'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'septem'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'7'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'octo'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'8'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'novem'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'9'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decem'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'10'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%numerals"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'NUMERAL'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_a"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nullimum'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'0'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'primum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'1'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'secundum'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'2'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'tertium'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'3'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quartum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'4'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quintum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'5'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'sextum'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'6'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'septimum'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'7'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'octavum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'8'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nonum'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'9'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decimum'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'10'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"substr"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_a"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$ordinals_a"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}os\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ordinals_a"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}um\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"# MASC. PLURALS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$ordinals_a"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}am\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ordinals_a"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}um\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"# FEMININE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$ordinals_a"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}as\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ordinals_a"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}um\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"# FEM. PLURALS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Ordinal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ORDINAL'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"add_genitives"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Ordinal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'um'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'i'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"add_genitives"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Ordinal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'am'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ae'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# add_genitives %ordinals_a, 'Ordinal', 'os' => 'orum';"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_d"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nullimo'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'0'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'primo'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'1'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'secundo'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'2'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'tertio'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'3'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quarto'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'4'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quinto'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'5'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'sexto'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'6'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'septimo'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'7'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'octavo'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'8'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nono'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'9'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decimo'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'10'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_d"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Ordinal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ORDINAL_DATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%underscores"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'hoc'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$_'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'huius'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$_'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'huic'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$_'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'haec'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@_'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'horum'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@_'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'his'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@_'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ianitorem'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$/'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ianitoris'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$/'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ianitori'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'$/'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"for"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"$key"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%underscores"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$underscores"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%varmods"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'loco'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'local'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"string",
        "value":"'ScalarMod'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'locis'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'local'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"string",
        "value":"'ArrMod'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'meo'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'my'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"string",
        "value":"'ScalarMod'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'meis'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'my'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"string",
        "value":"'ArrMod'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nostro'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'our'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"string",
        "value":"'ScalarMod'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nostris'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'our'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"string",
        "value":"'ArrMod'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%streams"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'vestibulo'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'*STDIN'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'egresso'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'STDOUT'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'oraculo'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'STDERR'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nuntio'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'*Lingua::Romana::Perligata::DATA'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%streams"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%matchops"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'compara'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'m'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'substitue'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'s'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'converte'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'tr'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%matchops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'MatchOperator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%matchops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'MatchOperator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ops"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'adde'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'+'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'deme'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'-'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'multiplica'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'*'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'itera'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'x'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'divide'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'/'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'recide'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'%'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'eleva'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'**'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'consocia'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'&'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'interseca'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'|'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'discerne'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'^'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'depone'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"''"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$ops"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ops"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%lops"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'da'"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'='"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%lops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_AD'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%lops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_AD'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%invarops"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'atque'"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'&&'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'vel'"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'||'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'praestantiam'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'<'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non praestantiam'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'>='"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'praestantias'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'lt'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non praestantias'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ge'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'aequalitam'"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'=='"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non aequalitam'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'!='"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'aequalitas'"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'eq'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non aequalitas'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ne'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'comparitiam'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'<=>'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'comparitias'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'cmp'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non comparitiam'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'!<=>'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non comparitias'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'!cmp'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'non'"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'!'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nega'"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'-'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$invarops"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%invarops"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%invarops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_ACCUSATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%connectives"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'que'"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'and'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ve'"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'or'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'raw'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%connectives"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%connectives"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Operator'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONNECTIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_td"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'excerpe'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'substr'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"# SPECIAL: SEE BELOW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'cumula'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'push'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'capita'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'unshift'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'iunge'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'splice'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'digere'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sort'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'retexe'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'reverse'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'evolute'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'open'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'lege'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'read'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'scribe'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'print'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'describe'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'printf'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'subscribe'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'write'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'conquire'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'seek'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'benedice'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'bless'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'liga'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'tie'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'modera'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'fcntl'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'conflue'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'flock'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'impera'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ioctl'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'trunca'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'truncate'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_td"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_AD'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_td"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_AD'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# \"bless\" HAS A COMMON LATIN CONTRACTION..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_td"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"benedictum"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$funcs_td"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"benedicementum"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_td"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"benedicto"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$funcs_td"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"benedicemento"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# THE FOLLOWING IS LVALUABLE, SO ARG MUST AGREE IN CASE WITH FUNCTION'S CASE..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"for"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw( excerpe )"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$funcs_td"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}mentum\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_ACCUSATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_bd"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'vanne'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'grep'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'applica'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'map'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'digere'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sort'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_bd"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_AB'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_bd"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_AB'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"string",
        "value":"'factorem'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sub'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"string",
        "value":"'factori'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sub'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_b"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_B_ACCUSATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_b"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'factori'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_B_DATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_t"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'morde'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'chomp'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'praecide'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'chop'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'stude'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'study'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'iani'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'undef'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'lusta'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'reset'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decumula'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'pop'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decapita'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'shift'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'claude'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'close'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'perlege'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::getline'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'sublege'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'getc'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'enunta'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'tell'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'dele'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'delete'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'quisque'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'each'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'adfirma'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'exists'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'solvere'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'untie'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'preincresce'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'++'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'postincresce'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'++'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'predecresce'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'--'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'postdecresce'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'--'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'reperi'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'pos'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"# SPECIAL: SEE BELOW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nomina'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'keys'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"# SPECIAL: SEE BELOW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_t"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_D'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_t"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_D'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# THE FOLLOWING ARE LVALUABLE, SO ARG MUST AGREE IN CASE WITH FUNCTION'S CASE..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"for"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"qw( reperi nomina )"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$funcs_t"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"\"${_}mentum\""
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_ACCUSATIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_d"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'admeta'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::__lastelem__'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'inque'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::__enquote__'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'conscribe'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::__enlist__'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'come'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::__beautify__'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'priva'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'abs'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'angula'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'atan2'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'oppone'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sin'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'accuba'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'cos'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decolla'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'int'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'succide'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'log'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'fode'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sqrt'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'conice'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'rand'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'prosemina'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'srand'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'inde'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'chr'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'senidemi'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'hex'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'octoni'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'oct'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'numera'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ord'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'deminue'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'lc'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'minue'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'lcfirst'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'amplifica'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'uc'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'amplia'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ucfirst'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'excipe'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'quotemeta'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'huma'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'crypt'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'meta'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'length'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'convasa'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'pack'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'deconvasa'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'unpack'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'scinde'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'split'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'scruta'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'index'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'coniunge'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'join'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'confirma'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'defined'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'secerna'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'scalar'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'argue'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'values'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'extremus'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'eof'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'deside'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'wantarray'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'aestima'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'eval'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'exi'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'exit'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'redde'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'return'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'mori'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'die'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'mone'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'warn'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'coaxa'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Carp::croak'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'carpe'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Carp::carp'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'memora'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'caller'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'agnosce'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ref'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'exhibere'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'tied'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'require'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'require'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'demigrare'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'chdir'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'permitte'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'chmod'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'vende'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'chown'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'inveni'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'glob'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'copula'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'link'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'decopula'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'unlink'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'aedifica'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'mkdir'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'renomina'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'rename'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'excide'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'rmdir'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'exprime'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'stat'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'terre'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'alarm'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'mitte'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'dump'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'commuta'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'exec'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'furca'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'fork'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'interfice'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'kill'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'dormi'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'sleep'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'obsecra'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'system'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'dissimula'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'umask'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'manta'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'wait'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'inscribe'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"':'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"# SPECIAL: SEE BELOW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'arcesse'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'${'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"# SPECIAL: SEE BELOW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'sere'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::__encatenate__'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_d"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_d"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# 'inscribe' IS SPECIAL: ONLY IMPERATIVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"common function",
        "value":"delete"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"grep"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^inscribement/"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_d"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# 'arcesse' IS SPECIAL: NO IMPERATIVE AND EXTRA (PSEUDO-)RESULTATIVES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"common function",
        "value":"delete"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcesse'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# SCALAR AS NON-TERMINAL INDEX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementi'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementum'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# ARRAY DEREFERENCE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementa'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@{'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementis'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@{'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementorum'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementa'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementus'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementa'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'%{'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementibus'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementis'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'%{'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementuum'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$funcs_d"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'arcessementus'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_GENITIVE'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'adi'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'goto'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'confectus'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'continue'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'domus'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'package'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ute'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'use'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function_Lit'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"addres"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function_Lit'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dlo"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ultimus'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'last'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'posterus'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'next'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'reconnatus'"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'redo'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"multibless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dlo"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Function_Lit'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_OA'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# addres %funcs_dl, 'Function_Lit', 'SUBNAME_OA';"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%misc"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'fac'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DO'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'do'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'per'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'FOR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'for'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'per quisque'"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'FOR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'foreach'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'si'"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONTROL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'if'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'nisi'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONTROL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'unless'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'donec'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONTROL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'until'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'dum'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONTROL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'while'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'cum'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'WITH'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"''"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'intra'"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'WITHIN'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'::'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'apud'"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ARROW'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'->'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'tum'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'COMMA'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"','"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'in'"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'IN'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"''"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'sic'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'BEGIN'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'{'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'cis'"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'END'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'}'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'princeps'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'NAME'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"string",
        "value":"'main'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'main'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ad'"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ADDRESS'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\\\\'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%tokens"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%literals"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%numerals"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%underscores"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%numerals"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ordinals_d"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%varmods"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%matchops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%ops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%lops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%invarops"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%funcs_td"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_bd"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_b"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_t"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%funcs_d"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%funcs_dlo"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"%misc"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%streams"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"# Handle likely captialization variations..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"ucfirst"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%tokens"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"values"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%tokens"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"$key"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%tokens"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$key"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$distokens"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'|'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"reverse"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"sort"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"keys"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%tokens"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\\\A\\\\s*($distokens)\\\\b\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokensque"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\\\A\\\\s*($distokens)que\\\\b\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokensve"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\\\A\\\\s*($distokens)ve\\\\b\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"prototype",
        "value":"$$$$"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$raw"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lex"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$raw"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lex"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$blesstype"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$archetype"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%$archetype"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$archetype"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokenize"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lines"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"tr/\\n/\\n/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"common function",
        "value":"length"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A\\s+//"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lines"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"tr/\\n/\\n/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$offset"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(adnota.*)//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# ignore comments"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(nuntius|finis)[ \\t]*[.]?[ \\t]*\\n(.*)//smi"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# set up DATA stream"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"use"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vars"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'*DATA'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"local"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"identifier",
        "value":"Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perlidata"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"DATASRC"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$pipe"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pipe"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"identifier",
        "value":"Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perligata"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"DATA"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"identifier",
        "value":"Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perlidata"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"DATASRC"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perlidata"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"DATASRC"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\Adic(?:emen)?tum(que|ve|)\\s+sic\\s+\\b(.*?)\\s+cis\\b//si"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'NAME'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Name'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\Asic(que|ve|)\\s+(.*?)\\s+cis\\s+dic(?:emen)?tum\\b//si"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'NAME'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Name'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(atque|vel)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$misc"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'tum'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$invarops"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(($roman)im(?:o|ae)(que|ve|))\\b//ix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"length"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$+"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$+"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ORDINAL_DATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"function",
        "value":"from_rn"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ORDINAL_DATIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(($roman)im(?:um|os|am|as)(que|ve|))\\b//ix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"length"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$+"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$+"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ORDINAL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"function",
        "value":"from_rn"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ORDINAL'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(($roman)(que|ve|))\\b//ix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"length"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$+"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$+"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'NUMERAL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"function",
        "value":"from_rn"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'NUMERAL'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/$tokensque//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'que'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/$tokensve//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'ve'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/$tokens//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+?)(um|)ementum)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\$$2->\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'SUBNAME_OA_ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+?)(um|)ementa)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\$$2->\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'SUBNAME_OA_ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+?)(um|)emento)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\$$2->\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'SUBNAME_OA_DATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+?)(um|)ementis)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"'-mentis' illicitum: '$1'\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"line"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# One day this may be:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# push @tokens, tokdup $connectives{lc $4} if $4;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# my $perl = $3 ? \"\\$$2->\" : $2;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# push @tokens, token($1,'SUBNAME_OA_DATIVE',$perl,'Literal');"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)orum)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\@$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)uum)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\%$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)um)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\$$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)a)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\@$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)ibus)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\%$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)us)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\%$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)o)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\$$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)is)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\@$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)tori)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\\\&$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)i)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\$$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)ere)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'INFINITIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+?)(um|)e)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$4"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\$$2->\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'SUBNAME'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(([a-z]+)torem)(que|ve|)\\b//i"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$3"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"\\\\&$2\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Literal'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A([.])//"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'PERIOD'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\";\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Separator'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(\\S+)(que|ve|)\\b//"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connectives"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"common function",
        "value":"lc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"token"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'NAME'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"\"$1\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Name'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$text"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/\\A(\\S+)//"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"or"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"next"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$error"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Aliquod barbarum inveni: '$error'\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"line"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"line"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$line"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$lex"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$format"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"%-20s     %-10s     %-20s\\n\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"printf"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$format"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"qw(Word Role Meaning)"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"printf"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$format"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"qw(==== ==== =======)"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"foreach"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"printf"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$format"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"qw(raw lex perl)"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\n\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"=\""
    },
    {
        "type":"identifier",
        "value":"x72"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\n\\n\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\n\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lex"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"identifier",
        "value":"@tokens"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"use"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Carp"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"conn_command"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$eatend"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$noeatend"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&"
    },
    {
        "type":"identifier",
        "value":"command"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONNECTIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"local"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perligata"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"connective"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$connective"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"L"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$connective"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&"
    },
    {
        "type":"identifier",
        "value":"command"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$connective"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"command"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$eatend"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$noeatend"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"#SENTINEL ACCUSATIVE FRAME"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$empty"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack_push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$lookahead"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Dstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^SUBNAME_?A?D?$/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lookahead"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/PERIOD|DO|END|CONNECTIVE/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ref"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"STATEMENT\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$needA"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needD"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/_(O?A?)([BD])?/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$needA"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"OA\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$needD"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needA"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needA"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"ne"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"OA\""
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"operator",
        "value":"<="
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needD"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needD"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'B'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dat"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needD"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needD"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'B'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"undef"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$acc"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$needA"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"undef"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"identifier",
        "value":"$acc"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"D"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"identifier",
        "value":"$dat"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"STATEMENT\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/SUBNAME_.*_ACCUSATIVE/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/SUBNAME_.*_DATIVE|OWNER_D/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/SUBNAME_.*_DATIVE|OWNER_D/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$Astack_push"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/SUBNAME_.*_DATIVE|OWNER_D/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/SUBNAME_.*_GENITIVE/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastsubstantive"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Genitivum non junctum: '$ord->{raw}'\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastsubstantive"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastsubstantive"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Index '$ord->{raw}' ordinalis non est\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'NUMERAL'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"reduced: \""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Data"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Dumper"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"function",
        "value":"Dump"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"identifier",
        "value":"$statement"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Next: '$toks->[0]{raw}' ($toks->[0]{lex}):\\n\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(NUMERAL|ORDINAL)$/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ORDINAL_DATIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'NUMERAL'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ORDINAL'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"/="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ORDINAL_DATIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Astack_push"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ORDINAL_DATIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'WITH'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(?:ACCUSATIVE|NAME)$/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Astack_push"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ARROW'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$owner"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$owner"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^\\W/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$owner"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"$owner->{raw}::\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s{^}{$perl->}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"splice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'WITHIN'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$owner"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s{^(\\W*)}{$1$owner->{raw}::}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s{^(\\W*)}{$1$owner->{raw}::}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"splice"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Genitivum indominum: '$ord->{raw}'\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastsubstantive"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Index '$ord->{raw}' ordinalis non est\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'NUMERAL'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$ord"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'INFINITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"subdefn"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONTROL'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"control"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'FOR'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"for_control"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'BEGIN'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"block"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'COMMA'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"'$tok->{raw}' immaturum est \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ADDRESS'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Dindir"
    },
    {
        "type":"operator",
        "value":"++"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'DATIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^SUBNAME/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"# WAS: /SUBNAME_"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"complete"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(and|or|[&|]{2})$/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"# elsif ( $tok->{lex} =~ /^SUBNAME$/ )"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# { if ($Astack[-1]{complete}) {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"# $reduce->($tok)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"# }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"# elsif ($tok->{perl} !~ /^[&|]{2}$/ {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"# push @Astack, { data=>[] };"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"# }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"# push @Vstack, $tok; shift @$toks;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"# $lastownable = \\@Vstack;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"# }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/PERIOD/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Lingua"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Romana"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Perligata"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"connective"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/CONNECTIVE/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$eatend"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/$eatend/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"or"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$noeatend"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/$noeatend/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$reduce"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"or"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"keyword",
        "value":"last"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Non intellexi: '$tok->{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"continue"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$empty"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$debug"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"After '$tok->{raw}' ($tok->{lex}):\\n\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"common function",
        "value":"print"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Data"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"Dumper"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"function",
        "value":"Dump"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Bstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@lastsubstantive"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"$lastownable"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"string",
        "value":"qw{Vstack Astack Bstack Dstack LastS LastO Vdone}"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Iussum nefastum: '$Vstack[-1]{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Vstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/(ACCUSATIVE|DATIVE)$/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"(Vellesne '$Vstack[-1]{raw}mentum' unumve ceteri)\\n\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Accusativum non junctum: '\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\" tum \""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"'\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Astack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"data"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Astack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Dativum non junctum: '$Dstack[-1]{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$Dstack"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@Dstack"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"@Vstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Sententia imperfecta prope '$tok->{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$empty"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$empty"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tok"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ref"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ARRAY'"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"identifier",
        "value":"$Vdone"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"block"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@self"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Exspectavi 'sic' sed inveni '$next->{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'BEGIN'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"ne"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'END'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"conn_command"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'PERIOD'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'END'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"push"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@self"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$command"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Exspectavi 'cis' sed inveni '$next->{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'END'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"bless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"line continuation",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"@self"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'BLOCK'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"subdefn"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"block"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"for_control"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Bstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$var"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$var"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'ACCUSATIVE'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"ne"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'IN'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Exspectavi accusativum post 'per' sed inveni '$toks->[0]{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"tokdup"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$tokens"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"string",
        "value":"'huic'"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"'in' pro 'per' afuit\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$in"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$in"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'IN'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"D"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$var"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"conn_command"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'DO'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'PERIOD'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/DATIVE|OWNER_D/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$badraw"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"'$badraw' dativus non est in 'per'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$bad"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/PERIOD|CONNECTIVE/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Iussa absentia per '$self->{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$Bstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$Bstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONNECTIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"block"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"control"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Bstack"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"conn_command"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'DO'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'while'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'Lingua::Romana::Perligata::getline'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"diamond"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/PERIOD|CONNECTIVE/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"die"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"Iussa absentia per '$self->{raw}'\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"adversum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$Bstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$Bstack"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@$toks"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'CONNECTIVE'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"block"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$toks"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"__enlist__"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"__enquote__"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" \""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"__encatenate__"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"__lastelem__"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"prototype",
        "value":"\\@"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$#"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%lb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@'"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"string",
        "value":"'['"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'%'"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"string",
        "value":"'{'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"%rb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'@'"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"string",
        "value":"']'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'%'"
    },
    {
        "type":"operator",
        "value":"=>"
    },
    {
        "type":"string",
        "value":"'}'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STATEMENT"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"prefix"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$hasblock"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"m{^(grep|map)$}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$noparen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'OWNER_D'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/o$/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(finis|nuntius|factor(em|i))$/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$hasblock"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"defined"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"D"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"D"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dref"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(bless)$/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^[%@]/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\\\\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dref"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dcomma"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"defined"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"identifier",
        "value":"$hasblock"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(print|printf)$/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\",\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^(package|use)$/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"$verb $_[0]{A}[0]{raw} \""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"':'"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"# LABEL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $_[0]{A}[0]{raw}: \""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"diamond"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"<\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"substr"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\">\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^[\\$%@]\\{$/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'}'"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"operator",
        "value":"!"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"operator"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"$verb \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$noparen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"(\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Dcomma"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"common function",
        "value":"defined"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\", \""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"function",
        "value":"translate"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"V"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$noparen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\")\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$prefix"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $verb $dative \""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$prefix"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $verb (\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\")\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'='"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $verb \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":">"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"(\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\",\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"string",
        "value":"\")\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Acount"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$neg"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$verb"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/^!(<=>|cmp)/$1/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"!\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $neg(\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$dative"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Acount"
    },
    {
        "type":"operator",
        "value":"--"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"shift"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $verb \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$Acount"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"?"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"A"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\""
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\")\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"# LAST GENITIVE IS THE VARIABLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/^([\\%\\@])/\\$/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\\\\'"
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$result"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"BLOCK"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"{\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"join"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"string",
        "value":"\";\\n\""
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"map"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"}\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CONNECTIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"L"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" $_[0]{perl} \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Separator"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_OA"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_A"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_D"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_AD"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_AB"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_A_ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_D_ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_AD_ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_AB_ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_B_ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_A_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_D_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_AD_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_AB_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_B_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"# LAST GENITIVE IS THE VARIABLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/^([\\%\\@])/\\$/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"OWNER_D"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ACCUSATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"# LAST GENITIVE IS THE VARIABLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/^([\\%\\@])/\\$/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\\\\'"
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CONTROL"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" (\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\") \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\n\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FOR"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"D"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\" (\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"C"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\") \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"\\n\""
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"NUMERAL"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"# if ($self->{G}) {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"# return $self->{G}->index($self->{perl});"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"# }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ORDINAL"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"unless"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"# LAST GENITIVE IS THE VARIABLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/^([\\%\\@])/\\$/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"identifier",
        "value":"ORDINAL_DATIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"identifier",
        "value":"ORDINAL"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"DISJUNCTION"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CONJUNCTION"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Literal"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$context"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@_"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$context"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"&&"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$context"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"raw"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"/^inque/"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"qq{'$_[0]{raw}'}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"GENITIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SUBNAME_A_GENITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"SUBNAME_A_GENITIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"elsif"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"lex"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"eq"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'INFINITIVE'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"sub $_[0]{perl}\\n\""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"B"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"else"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'\\\\'"
    },
    {
        "type":"operator",
        "value":"x"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"R"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"||"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"if"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"# LAST GENITIVE IS THE VARIABLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"operator",
        "value":"~"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"regex",
        "value":"s/^([\\%\\@])/\\$/"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"while"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"keyword",
        "value":"my"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"common function",
        "value":"pop"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$self"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"G"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$next"
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$gen"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$lb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$rb"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"$type"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$perl"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENITIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SUBNAME_A_GENITIVE"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"$_"
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"identifier",
        "value":"perl"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"sub"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Name"
    },
    {
        "type":"group",
        "value":"::"
    },
    {
        "type":"identifier",
        "value":"translate"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"qq{'$_[0]{raw}'}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"__END__"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 NOMEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Lingua::Romana::Perligata -- Perl in Latin"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 EDITIO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"This document describes version 0.601 of Lingua::Romana::Perligata"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"released May  3, 2001."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 SUMMARIUM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    use Lingua::Romana::Perligata;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    adnota Illud Cribrum Eratothenis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    maximum tum val inquementum tum biguttam tum stadium egresso scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    da meo maximo vestibulo perlegementum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    maximum comementum tum novumversum egresso scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    meis listis conscribementa II tum maximum da."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    dum damentum nexto listis decapitamentum fac"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            lista sic hoc tum nextum recidementum cis vannementa listis da."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            dictum sic deinde cis tum biguttam tum stadium tum cum nextum"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            comementum tum novumversum scribe egresso."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 DESCRIPTIO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The Lingua::Romana::Perligata makes it makes it possible to write Perl"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"programs in Latin. (If you have to ask \"Why?\", then the answer probably"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"won't make any sense to you either.)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The linguistic principles behind Perligata are described in:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The module is C<use>d at the start of the program, and installs a filter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"which allows the rest of the program to be written in (modified) Latin,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"as described in the following sections."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 GRAMMATICA PERLIGATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"To simplify the mind-numbingly complex rules of declension and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"conjugation that govern inflexions in Latin, Perligata treats all"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"user-defined scalar and array variables as neuter nouns of the second"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"declension -- singular for scalars, plural for arrays."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Hashes represent something of a difficulty in Perligata, as Latin lacks an"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"obvious way of distinguishing these \"plural\" variables from arrays. The"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"solution that has been adopted is to depart from the second declension"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and represent hashes as masculine plural nouns of the fourth declension."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Hence, the type and role of all types variables are specified by their"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"number and case."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"When elements of arrays and hashes are referred to directly in Perl, the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"prefix of the container changes from C<@> or C<%> to C<$>. So it should"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"not be surprising that Perligata also makes use of a different inflexion"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"to distinguish these cases."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Indexing operations such as C<$array[$elem]> or C<$hash{$key}> might be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"translated as \"elem of array\" or \"key of hash\". This suggests that when"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"arrays or hashes are indexed, their names should be rendered in the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"genitive (or possessive) case. Multi-level indexing operations"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(C<$array[$row][$column]>) mean \"column of row of array\", and hence the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"first indexing variable must also be rendered in the genitive."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the current release of Perligata only supports homogeneous"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"multi-level indexing. That is: C<$lol[$row][$column]> or"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<$hoh{key}{subkey}{subsubkey}>, but not C<$lohol[$index1]{key}[$index2]>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The rules for specifying variables may be summarized as follows:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    Perligata    Number, Case, and Declension    Perl         Role"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    =========    ============================    ====         ===="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextum       accusative singular 2nd         $next        scalar rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nexta        accusative plural 2nd           @next        array rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextus       accusative plural 4th           %next        hash rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nexto        dative singular 2nd             $next        scalar lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextis       dative plural 2nd               @next        array lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextibus     dative plural 4th               %next        hash lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nexti        genitive singular 2nd           [$next]...   scalar index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextorum     genitive plural 2nd             $next[...]   array element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextuum      genitive plural 4th             $next{...}   hash entry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In other words, scalars are always singular nouns, arrays and hashes are"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"always plural (but of different declensions), and the case of the noun"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"specifies its syntactic role in a statement : accusative for an rvalue,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"dative for an lvalue, genitive when being index. Of course, because the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"inflection determines the syntactic role, the various components of a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"statement can be given in any order. For example, the Perl statement:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $last = $next;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"could be expressed in Perligata as any of the following (C<da> is the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata assignment operator -- see L<\"Built-in functions and operators\">):"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    lasto da nextum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    lasto nextum da."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextum da lasto."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nextum lasto da."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    da lasto nextum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    da nextum lasto."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The special form C<$#array> is rendered via the Perligata verb I<admeta>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(\"measure out\"). See L<\"Subroutines, operators, and functions\">."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The common punctuation variables C<$_> and C<@_> are special cases."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<$_> is often the value under implicit consideration (e.g. in pattern"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"matches, or C<for> loops) and so it is rendered as \"this thing\": I<hoc>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"as an rvalue, I<huic> as an lvalue, I<huius> used as an intermediate index."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Similarly, C<@_> is implicitly the list of things passed into a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"subroutine, and so is rendered as \"these things\": I<haec> as an rvalue,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<his> as an lvalue, I<horum> when indexed."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Other punctuation variables take the Latin forms of their English.pm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"equivalents (see L<\"THESAURUS PERLIGATUS\">), often with a large measure"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"of poetic licence. For example, in Perligata, C<$/> is rendered as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<ianitorem> or \"gatekeeper\"."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The \"numeral\" variables -- C<$1>, C<$2>, etc. -- are rendered as synthetic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"compounds: I<parprimum> (\"the equal of the first\"),"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<parsecundum> (\"the equal of the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"second\"), etc. When used as interim indices, they take their genitive forms:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<parprimi>, I<parsecundi>, etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Since they cannot be used as an lvalue, they have no dative forms."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 C<my>, C<our>, and C<local>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In Perligata, the C<my> modifier is rendered -- not surprisingly -- by"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the first person possessive pronouns: I<meo> (conferring a scalar context)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and I<meis> (for a list context). Note that the modifier is always applied to a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"dative (lvalue), and hence is itself declined in that case. Thus:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        meo varo haec da.                # my $var = @_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        meis varo haec da.               # my ($var) = @_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        meis varis haec da.              # my @var = @_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Similarly the C<our> modifier is rendered as I<nostro> or I<nostris>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"depending on the desired context."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The Perl C<local> modifier is I<loco> or I<locis> in Perligata:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        loco varo haec da.               # local $var = @_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        locis varo haec da.              # local ($var) = @_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        locis varis haec da.             # local @var = @_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"This is particularly felicitous: not only is I<loco> the Latin term from"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"which the word \"local\" derives, it also means \"in place of\" (as in:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<in loco parentis>). This meaning is much closer to the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"actual behaviour of the C<local> modifier, namely to temporarily install a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"new symbol table entry in place of the current one."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Subroutines, operators, and functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Functions, operators, and user-defined subroutines are represented as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"verbs or, in some situations, verbal nouns. The inflexion of the verb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"determines not only its syntactic role, but also its call context."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"User-defined subroutines are the simplest group. To avoid ambiguities, they"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"are all treated as verbs of the third conjugation. For example, here"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"are the various conjugations for different"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"usages for a user-defined subroutine C<count()>:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    Perligata       Number, Mood, etc       Perl        Role    Context"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    =========       =================       ====        ====    ======="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    countere        infinitive              sub count   defn    -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    counte          imperative sing.        count()     call    void"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    countementum    acc. sing. resultant    count()     call    scalar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    countementa     acc. plur. resultant    count()     call    list"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    countemento     dat. sing. resultant    count()     call    scalar lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    countementis    dat. plur. resultant    count()     call    list lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The use of the infinitive as a subroutine definition is obvious:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<accipere> would tell Perligata how \"to accept\"; I<spernere>, how \"to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"reject\". So I<countere> specifies how \"to count\"."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The use of the imperative for void context is also straightforward:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<accipe> commands Perligata to \"accept!\", I<sperne> tells it to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"\"reject!\", and I<counte> bids it \"count!\". In each case, an instruction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"is being given (and in a void context too, so no backchat is expected)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Handling scalar and list contexts is a little more challenging. The"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"corresponding Latin must still have verbal properties, since an action"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"is being performed upon objects. But it must also have the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"characteristics of a noun, since the result of the call will itself be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"used as the object (i.e. target or data) of some other verb. Fortunately,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Latin has a rich assortment of verbal nouns -- far more than English --"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"that could fill this role."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Since it is the result of the subroutine call that is of interest here,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the chosen solution was to use the I<-ementum> suffix, which specifies the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(singular, accusative) outcome of an action. This corresponds to the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"result of a subroutine called in a scalar context and used as data. For"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"a list data context, the plural suffix I<-ementa> is used, and for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"targets, the dative forms are used: I<-emento> and I<-ementis>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Of course, Perl does not (yet) support lvalue subroutines that return a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"list/array, so the I<-mentis> suffix currently triggers an error."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that these resultative endings are completely consistent with those"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"for variables."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Built-in functions and operators"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Built-in operators and functions could have followed the same"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"\"dog-latin\" pattern as subroutines. For example C<shift> might have"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"been I<shifte> in a void context, I<shiftementa> when used as data in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"an array context, I<shiftemento> when used as a target in a scalar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"context, etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"However, Latin already has a perfectly good verb with the same meaning as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<shift>: I<decapitare> (\"to behead\"). Unfortunately, this verb is of the first"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"conjugation, not the second, and hence has the imperative form I<decapita>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"which makes it look like a Perligata array in a data role."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Orthogonality has never been Perl's highest design criterion, so Perligata"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"follows suit by eschewing bland consistency in favour of aesthetics. All"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata keywords -- including function and operator names -- are therefore"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"specified as correct Latin verbs, of whatever conjugation is required."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    Operator/  Literal        In void     When used as      When used as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    function   meaning        context     scalar rvalue     list rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ========   =======        =======     =============     ============"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    +          \"add\"          adde        addementum        addementa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    =          \"give\"         da          damentum          damenta"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    .          \"conjoin\"      sere        serementum        serementa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ..         \"enlist\"       conscribe   conscribementum   conscribementa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    shift      \"behead\"       decapita    decapitamentum    decapitamenta"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    push       \"stack\"        cumula      cumulamentum      cumulamenta"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    pop        \"unstack\"      decumula    decumulamentum    decumulamenta"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    grep       \"winnow\"       vanne       vannementum       vannementa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    print      \"write\"        scribe      scribementum      scribementa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    write      \"write below\"  subscribe   subscribementum   subscribementa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    die        \"die\"          mori        morimentum        morimenta"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The full list of Perligata keywords is provided in L<THESAURUS PERLIGATUS>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note, however, that consistency has not been entirely forsaken. The"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"back-formations of inflexions for scalar and list context are entirely"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"regular, and consistent with those for user-defined subroutines (described"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"above)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"A few Perl built-in functions -- C<pos>, C<substr>, C<keys> -- can be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"used as lvalues. That is, they can be the target of some other action"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(typically of an assignment). In Perligata such cases are written in the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"dative singular (since the lvalues are always scalar). Note too that,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"because an assignment to an lvalue function modifies its first"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"argument, that argument must be a target too, and hence must be written"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"in the dative as well."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Thus:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        nexto stringum reperimentum da.     # $next = pos $string;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        nextum stringo reperimento da.      # pos $string = $next;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        inserto stringum tum unum tum duo excerpementum da."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                                            # $insert = substr($string,1,2);"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        insertum stringo unum tum duo excerpemento da."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                                            # substr($string,1,2) = $insert;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        clavis hashus nominamentum da.      # @keys = keys %hash;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        clava hashibus nominamento da.      # keys %hash = @keys;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"An interesting special case is the C<$#array> construction, which in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata is rendered via the verb I<admeta>:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    counto da arraya admetamentum.      # $count = $#array;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Comments"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In Perligata, comments are rendered by the verb I<adnota>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(\"annotate\") and extend until the end of the line. For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nexto da prevum.    adnota mensuram antiquam reserva"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"means:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $next = $prev;      # remember old amount"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Imposing precedence on argument lists"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The order-independence of argument lists and subroutine calls largely"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"makes up for the lack of bracketing in Perligata. For example, the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perl statement:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $res = foo(bar($xray,$yell),$zip);"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"can be written:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"     reso da xrayum tum yellum barmentum tum zipum foomentum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the lack of argument list brackets in Perligata"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"means that if it were written:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    reso da foomentum barmentum xrayum tum yellum tum zipum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"it would be equivalent to:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $res = foo(bar($xray,$yell,$zip));"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"instead."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Likewise, it is possible to translate:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $res = foo($xray,bar($yell,$zip));"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"like so:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    reso da xrayum tum barmentum yellum tum zipum foomentum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"But translating:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $res = foo($weld,bar($xray,$yell),$zip);"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"presents a difficulty."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In the first example above"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(I<xrayum tum yellum barmentum tum zipum foomentum>), the verb I<barmentum> was"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"used as a suffix on I<xrayum tum yellum> -- to keep the variable I<zipum> out of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the argument list of the call to C<bar>. In the second example"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(I<xrayum tum barmentum yellum tum zipum foomentum>), the verb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<barmentum> was used as a prefix on I<yellum tum zipum> -- to keep the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"variable I<xrayum> out of the argument list."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"But in this third example, it's necessary to keep both I<weldum> and I<zipum>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"out of C<bar>'s argument list. Unfortunately, I<barmentum> can't be both"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"a prefix (to isolate I<weldum>) and a suffix (to isolate I<zipum>)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"simultaneously."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The solution is to use the preposition I<cum> (meaning \"with...\") at the start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"of C<bar>'s argument list, with I<barmentum> as a suffix at the end of the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"list:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reso da foomentum weldum tum cum xrayum tum yellum barmentum tum zipum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"It is always permissible to specify the start of a nested argument list with"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"a I<cum>, so long as the governing verb is used as a suffix."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Blocks and control structures"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Natural languages generally use some parenthetical device -- such as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"parentheses, commas, or (as here) dashes -- to group and separate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"collections of phrases or statements."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Some such mechanism would be an obvious choice for denoting Perligata"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"code blocks, but there is a more aesthetically pleasing solution."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perl's block delimiters (C<{>..C<}>) have two particularly desirable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"properties: they are individually short, and collectively symmetrical."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"It was considered important to retain those characteristics in Perligata."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In Latin, the word I<sic> has a sense that means \"as follows\"."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Happily, its contranym, I<cis>, has the meaning (among others)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"\"to here\". The allure of this kind of wordplay being impossible to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"resist, Perligata delimits blocks of statements with these two words. For"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sic                                     # {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            loco ianitori.                      #   local $/;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            dato nuntio perlegementum da.       #   $data = <DATA>;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis                                     # }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Control structures in Perligata are rendered as conditional clauses, as they"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"are in Latin, English, and Perl. And as in those other languages, they"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"may precede or follow the code blocks they control."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata provides the following control structures:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    Perligata                        Perl"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    =========                        ===="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    si ... fac                       if ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    nisi ... fac                     unless ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    dum ... fac                      while ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    donec ... fac                    until ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    per (quisque) ... in ... fac     for(each) ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    posterus                         next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ultimus                          last"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    reconatus                        redo"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    confectus                        continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The trailing I<fac> is the imperative form of I<facere> (\"to do\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and is used as a delimiter on the control statement's condition."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"It is required, regardless of whether the control statement precedes or"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"follows its block."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The choice of I<dum> and I<donec> is completely arbitrary, since Latin"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"does not distinguish \"while\" and \"until\" as abstractions in the way"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"English does. I<Dum> and I<donec> each mean both \"while\" and \"until\","
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and Latin relies on context (i.e. semantics) to distinguish them. This"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"is impractical for Perligata, so it always treats I<dum> as C<while> and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<donec> as C<until>. This choice was made in order to favour the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"shorter term for the more common type of loop."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The choice of I<confectus> for C<continue> seeks to convey the function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"of the control structure, not the literal meaning of the English word."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"That is, a C<continue> block specifies how to complete (I<conficere>)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"an iteration."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata only supports the pure iterative form of C<for(each)>, not the C-like"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"three-part syntax."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Because:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        foreach $var (@list) {...}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"means \"for each variable in the list...\", the scalar variable must be in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the accusative (as it is governed by the preposition \"for\"), and the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"list must be in the ablative (denoting inclusion). Fortunately, in the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"second declension, the inflexion for ablatives is exactly the same as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"for datives, giving:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        per quisque varum in listis sic ... cis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"This means that no extra inflexions have to be learned just to use the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<per> loop. Better still, the list (I<listis>) looks like a Perligata"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"array variable in a target role, which it clearly is, since its contents may"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"be modified within the loop."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that you can also omit the accusative variable completely:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        per quisque in listis sic ... cis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and leave I<hoc> (C<$_>) implied, as in regular Perl."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The C<__END__> and C<__DATA__> markers in Perligata are I<finis>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(\"boundary\") and I<nuntius> (\"information\") respectively. Data specified"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"after either of these markers is available via the input stream"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<nuntio>. For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        dum perlege nuntio fac sic              # while (<DATA>) {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                scribe egresso hoc.             #       print $_;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis                                     # }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                                                #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        finis                                   # __END__"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        post                                    # post"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        hoc                                     # hoc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ergo                                    # ergo"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        propter                                 # propter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        hoc                                     # hoc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Numbers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Numeric literals in Perligata are rendered by Roman numerals -- I<I>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<II>, I<III>, I<IV>...I<XV>...I<XLII>, etc, up to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<(((((((I)))))))((((((((I))))))))((((((I))))))(((((((I)))))))(((((I)))))((((((I))))))((((I))))(((((I)))))(((I)))((((I))))((I))(((I)))M((I))CMXCIX>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(that is: 9,999,999,999)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The digits are:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"           Roman            Arabic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"           =====            ======"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         I                   1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         V                   5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         X                  10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         L                      50"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         C                 100"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         D                 500"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             M                   1,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             I))                     5,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"           ((I))                    10,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             I)))                   50,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"          (((I)))              100,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             I))))             500,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"         ((((I))))           1,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             I)))))          5,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        (((((I)))))         10,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             I))))))       500,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"       ((((((I))))))     1,000,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"             I)))))))    5,000,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"      (((((((I)))))))   10,000,000,000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The value I<((I))> is 10,000 and every additional pair of I<apostrophi>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(rendered as parentheses in ASCII) multiply that value by 10."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Notice that those wacky Romans literally used \"half\" of each big number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(e.g. I<I))>, I<I)))>, etc.) to represent half of each big numbers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(i.e. 5000, 50000, etc.)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The first 10 numbers may also be referred to by name:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<unum>/I<unam>, I<duo>/I<duas>, I<tres>, I<quattuor>, I<quinque>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<sex>, I<septem>, I<octo>, I<novem>, I<decem>. Zero, for which there is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"no Latin numeral, is rendered by I<nullum> (\"no-one\"). I<Nihil>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(\"nothing\") might have been a closer rendering, but it is indeclinable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and hence indistinguishable in the accusative and genitive."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"When a numeric literal is used in an indexing operation, it must be an"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"ordinal: \"zeroth (element)\", \"first (element)\", \"second (element)\", etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The first ten ordinals are named (in the accusative): I<primum>/I<primam>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<secundum>/I<secundam>, I<tertium>/I<tertiam>, I<quartum>/I<quartam>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<quintum>/I<quintam>, I<sextum>/I<sextam>, I<septimum>/I<septimam>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<octavum>/I<octavam>, I<nonum>/I<nonam>, I<decimum>/I<decimam>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Ordinals greater than ten are represented by their corresponding numeral"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"with the suffix I<-imum>: I<XVimum> (\"15th\"), I<XLIIimum> (\"42nd\"), etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"By analogy, ordinal zero is rendered by the invented form I<nullimum>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"If the element being indexed is used as an lvalue, then the ordinal must"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"of course be in the dative instead: I<nullimo>, I<primo>, I<secundo>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<tertio>, I<quarto>, I<quinto>, I<sexto>, I<septimo>, I<octavo>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<nono>, I<decimo>, I<XIimo>, etc. Note that the feminine dative forms"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"are I<not> available in Perligata, as they are ambiguous with the feminine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"genitive singular forms."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In a multi-level indexing operation, ordinals may need to be specified"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"in the genitive: I<nulli>/I<nullae>, I<primi>/I<primae>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<secundi>/I<secundae>, I<tertii>/I<tertiae>...I<XVimi>/I<XVimae>, etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $unimatrix[1][3][9][7];"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"would be:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        septimum noni tertii primi unimatrixorum"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"which is literally:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        seventh of ninth of third of first of unimatrix"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the order of the genitives is significant here, and is the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"reverse of that required in Perl."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"As mentioned in L<\"Variables\">, Perligata currently only supports homogeneous"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"multi-level indexing. If the final genitive indicates"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"an array (e.g. I<unimatrixorum> in the previous example), then preceding index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"is assumed to be an array index. If the final genitive indicates a hash,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"every preceding genitive, and the original ordinal are presumed to be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"keys.  For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        septimum noni tertii primi unimatrixorum   # $unimatrix[1][3][9][7];"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        septimum noni tertii primi unimatrixuum    # $unimatrix{1}{3}{9}{7};"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Floating point numbers are expressed in Perligata as Latin fractions:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        unum quartum                  # 0.25"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        MMMCXLI Mimos                 # 3.141"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the numerator is always a cardinal and the denominator a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(singular or plural) ordinal (\"one fourth\", \"3141 1000ths\"). The plural"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"of a Latin accusative ordinal is formed by replacing the I<-um> suffix by"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<-os>.  This nicety can be ignored, as Perligata will accept fractions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"in the form I<MMMCXLI Mimum> (\"3141 1000th\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Technically, both numerator and denominator should also be in the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"feminine gender -- I<una quartam>, I<MMMCXLI Mimas>. This Latin rule is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"not enforced in Perligata (to help minimize the number of suffixes that"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"must be remembered), but Perligata I<does> accept the feminine forms."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata outputs numbers in Arabic, but the verb I<come> (\"beautify\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"may be used to convert numbers to proper Roman numerals:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        per quisque in I tum C conscribementum sic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                hoc tum duos multiplicamentum comementum egresso scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Classical Latin does not use punctuation to denote direct quotation."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Instead the verb I<inquit> (\"said\") is used to report a direct"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"utterance. Hence in Perligata, a literal character string is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"constructed, not with quotation marks, but by invoking the verbal noun"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<inquementum> (\"the result of saying\"), with a data list of literals to be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"interpolated. For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        print STDOUT 'Enter next word:';"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"becomes:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        Enter tum next tum word inquementum tum biguttam egresso scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the arguments to I<inquementum> are special, in that they are"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"treated as literals. Punctuation strings have special names, such as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<lacunam> (\"a hole\") for space, I<stadium> (\"a stride\") for tabspace,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<novumversum> (\"new verse\") for newline, or I<biguttam> (\"two spots\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"for colon."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"It is also possible to directly quote a series of characters (as if they"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"were inside a C<q{...}>. The Perligata equivalent is a I<dictum sic...cis>:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sic Enter next word : cis dictum egresso scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"or:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        dictum sic Enter next word : cis egresso scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<dictum> is, of course, a contraction of C<dicementum> (\"the result of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"saying\"), and Perligata allows this older form as well."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata does not provide an interpolated quotation mechanism. Instead,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"variables must be concatenated into a string. So:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        print STDERR \"You entered $word\\n\";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $mesg = \"You entered $word\";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"becomes:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        You tum entered inquementum tum wordum tum novumversum oraculo scribe."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        mesgo da You tum entered inquementum tum wordum serementum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Regular expressions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"B<I<[Perligata's regular expression mechanism is not yet implemented. This section"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"outlines how it will work in a future release.]>>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In Perligata, patterns will be specified in a constructive syntax (as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"opposed to Perl's declarative approach). Literals will regular"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"strings and other components of a pattern will be adjectives, verbs,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"nouns, or a connective:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    Perl        Perligata       Meaning"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ====        =========       ======="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ...+?       multum          \"many\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ...+        plurissimum     \"most\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ...??       potis           \"possible\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    ...?        potissimum      \"most possible\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    (...)       captivum        \"captured\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    (?=...)     excuba          \"keep watch\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    [...]       opta            \"choose between\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    .           quidlibet       \"anything\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    \\d          digitum         \"a finger\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    \\s          lacunam albam   \"a white space\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    \\w          litteram        \"a character\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    |           an              interrogative \"or\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The final pattern will be produced using the supine I<desideratum>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        pato da desideratum                         # $pat = qr/(?x)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            C tum plurissimum A tum O opta tum T    #          C[AO]+T"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            an DOG tum potissimum GY.               #          |DOG(?:GY)?/;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Actual matching against a pattern will be done via the I<compara> (\"match\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and I<substitue> (\"substitute\") verbs:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si stringum patum comparamentum fac sic   # if ($string =~ /$pat/) {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                scribe egresso par inquementum    #    print \"match\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis                                       #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        huic substitue patum tum valum            # s/$pat/$val/"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                per quisque in listis.            #    foreach @list;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the string being modified by I<substitue> will have to be dative."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 References"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"To create a reference to a variable, the variable is written in the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"ablative (which looks exactly like the dative in Perligata's restricted"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Latin syntax) and prefaced with the preposition I<ad> (\"to\"). To create"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"a reference to a subroutine, the associated verb is inflected with the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"accusative suffix I<-torem> (\"one who...\") to produce the corresponding"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"noun-of-agency."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"For example:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        val inquemento hashuum ad dato da.       # $hash{'val'} = \\$dat;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        arg inquemento hashuum ad argis da.      # $hash{'arg'} = \\@arg;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        act inquemento hashuum functorem da.     # $hash{'act'} = \\&func;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ad val inquemento hashuum dato da.       # $dat   = \\$hash{'val'};"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ad inquemento arg hashuum argis da.      # @arg   = \\$hash{'arg'};"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        funcemento da ad inquemento act hashuum. # func() = \\$hash{'act'};"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"A special case of this construction is the anonymous subroutine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"constructor I<factorem> (\"one who does...\"), which is the equivalent of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<sub {...}> in Perl:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        anonymo da factorem sic haec mori cis.    # $anon = sub { die @_ };"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"As in Perl, such subroutines may be invoked by concatenating a call"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"specifier to the name of the variable holding the reference:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        anonymume nos tum morituri inquementum.   # &$anon('Nos morituri');"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the variable holding the reference (I<anonymum>) is being used"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"as data, so it is named in the accusative."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In the few cases where a subroutine reference can be the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"target of an action, the dative suffix (I<-tori>) is used instead:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        benedictum functori classum.              # bless \\&func, $class;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        benedictum factori sic mori cis classum.  # bless sub{die}, $class;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"To dereference other types of references, a resultative of the verb I<arcesse>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(\"fetch\") is used:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        Ref type        Perligata               Perl            Context"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ========        =========               ====            ======="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        scalar          arcessementum varum     $$var           rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        scalar          arcessemento varum      $$var           lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        array           arcessementi varum      ...[$$var]      rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        array           arcessementa varum      @$var           rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        array           arcessementis varum     @$var           lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        array           arcessementorum varum   $var->[...]     either"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        hash            arcessementus varum     %$var           rvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        hash            arcessementibus varum   %$var           lvalue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        array           arcessementuum varum    $var->{...}     either"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that the first six forms are just the standard resultatives (in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"accusative, dative, and genitive) for the regular Perligata verb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<arcesse>. The last three forms are ungrammatical inflections"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"(I<-mentum> is 2nd declension, not 4th), but are plausible extensions of the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"resultative to denote a hash return value."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Multiple levels of dereferencing are also possible:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        valo da arcessementa arcessementum varum    # $val = @$$var;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"as is appropriate indexing (using the genitive forms):"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        valo da primum varum arcessementorum        # $val = $var->[1];"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        valo da primum varum arcessementuum         # $val = $var->{1};"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        valo da primum varum arcessementi arrorum   # $val = $arr[$$var][1];"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Boolean logic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perl's logical conjunctive and disjunctive operators come in two precedences,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and curiously, so do those of Latin. The higher precedence Perl operators --"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<&&> and C<||> -- are represented in Perligata by the emphatic Latin"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"conjunctions I<atque> and I<vel> respectively. The lower precedence"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"operators -- C<and> and C<or> -- are represented by the unemphatic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"conjunctive suffixes I<-que> and I<-ve>. Hence:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reso damentum foundum atque runementum.   # $res = $found && run();"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reso damentum foundum runementumque.      # $res = $found and run();"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reso damentum foundum vel runementum.     # $res = $found || run();"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reso damentum foundum runementumve.       # $res = $found or run();"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Note that, as in Latin, the suffix of the unemphatic conjunction is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"always appended to the first word after the point at which"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the conjunction would appear in English. Thus:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $result = $val or max($1,$2);"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"is rendered as:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        resulto damentum valum parprimumve tum parsecundum maxementum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"or:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        resulto damentum valum maxementumve parprimum tum parsecundum."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Proper Latinate comparisons would be odious in Perligata, because they"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"require their first argument to be expressed in the nominative and would"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"themselves have to be indicative. This would, of course, improve the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"positional independence of the language even further, allowing:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si valus praecedit datum...              # if $val < $dat..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si praecedit datum valus...              # if $val < $dat..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si datum valus praecedit...              # if $val < $dat..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Unfortunately, it also introduces another set of case inflexions and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"another verbal suffix. Worse, it would mean that noun suffixes are no"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"longer unambiguous. In the 2nd declension, the nominative plural ends in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the same I<-i> as the genitive singular, and the nominative singular"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"ending (I<-us>) is the same as the accusative plural suffix for the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"fourth declension. So if nominatives were used, scalars could no longer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"always be distinguished from arrays or from hashes, except by context."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"To avoid these problems, Perligata represents the equality and simple"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"inequality operators by three pairs of verbal nouns:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    Perligata       Meaning                     Perl"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    =========       =======                     ===="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    aequalitam      \"equality (of...)\"          =="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    aequalitas      \"equalities (of...)\"        eq"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    praestantiam    \"precedence (of...)\"        <"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    praestantias    \"precedences (of...)\"       lt"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    comparitiam     \"comparison (of...)\"        <=>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    comparitias     \"comparisons (of...)\"       cmp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Each operator takes two data arguments, which it compares:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si valum tum datum aequalitam           # si $val == $dat"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si valum tum datum praestantias         # si $val lt $dat"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si aum tum bum comparitiam              # si $a <=> $b"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The effects of the other comparison operators -- C<E<gt>>, C<E<lt>=>,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<!=>, C<ne>, C<ge>, etc. -- are all achieved by appropriate ordering of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the two arguments and combination with the the logical negation operator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<non>:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si valum tum datum non aequalitam     # if $val != $dat"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si datum tum valum praestantiam       # if $val > $dat"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        si valum non praestantias datum       # if $val ge $dat"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Packages and classes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The Perligata keyword to declare a package is I<domus>, literally"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"\"the house of\". In this context, the name of the class follows the keyword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and is treated as a literal; as if it were the data argument of an"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<inquementum>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"To explicitly specify a variable or subroutine as belonging to a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"package, the preposition I<intra> (\"within\") is used. To call a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"subroutine as a method of a particular package (or of an object), the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"preposition I<apud> (\"of the house of\") is used. Thus I<intra> is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perligata's C<::> and I<apud> is it's C<-E<gt>>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The Perl C<bless> function is I<benedice> in Perligata, but almost invariably"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"used in the scalar accusative form I<benedicementum>. Perligata also"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"understands the correct (contracted) Latin form of this verb: I<benedictum>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Thus:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        domus Specimen.                             # package Specimen;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        newere                                      # sub new"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sic                                         # {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            meis datibus.                           #   my %data;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            counto intra Specimen"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                postincresce.                       #   $Specimen::count++;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            datibus primum horum benedictum.        #   bless \\%data, $_[0];"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis                                         # }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        printere                                    # sub print"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sic                                         # {"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"            modus tum indefinitus inquementum mori. #   die 'method undefined';"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cis                                         # }"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        domus princeps.                             # package main;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        meo objecto da                              # my $object ="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"                newementum apud Specimen.           #       Specimen->new;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        printe apud objectum;                       # $object->print;"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 THESAURUS PERLIGATUS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"This section lists the complete Perligata vocabulary, except for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Roman numerals (I<I>, I<II>, I<III>, etc.)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In each of the following tables, the three columns are always the same:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"\"Perl construct\", \"Perligata equivalent\", \"Literal meaning of Perligata"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"equivalent\"."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Generally, only the accusative form is shown for nouns and adjectives,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and only the imperative for verbs."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Values and variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        0            nullum           \"no-one\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        1            unum             \"one\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        2            duo              \"two\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        3            tres             \"three\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        4            quattuor         \"four\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        5            quinque          \"five\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        6            sex              \"six\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        7            septem           \"seven\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        8            octo             \"eight\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        9            novem            \"nine\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        10           decem            \"ten\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [0]          nullimum         \"zeroth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [1]          primum           \"first\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [2]          secundum         \"second\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [3]          tertium          \"third\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [4]          quartum          \"fourth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [5]          quintum          \"fifth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [6]          sextum           \"sixth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [7]          septimum         \"seventh\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [8]          octavum          \"eighth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [9]          nonum            \"ninth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        [10]         decimum          \"tenth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $1           parprimum        \"equal of the first\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $2           parsecundum      \"equal of the first\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $3           partertium       \"equal of the third\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $4           parquartum       \"equal of the fourth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $5           parquintum       \"equal of the fifth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $6           parsextum        \"equal of the sixth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $7           parseptimum      \"equal of the seventh\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $8           paroctavum       \"equal of the eighth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $9           parnonum         \"equal of the ninth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $10          pardecimum       \"equal of the tenth\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $/           ianitorem        \"gatekeeper\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $#var        admeta varum     \"measure out\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        $_           hoc/huic         \"this thing\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        @_           his/horum        \"these things\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"    $<           nomen            \"name\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        \":\"          biguttam         \"two spots\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        \" \"          lacunam          \"a gap\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        \"\\t\"         stadium          \"a stride\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        \"\\n\"         novumversum      \"new line\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        local        loco             \"in place of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        my           meo              \"my\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        our          nostro           \"our\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        main         princeps         \"principal\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Quotelike operators"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        '...'        inque        \"say\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        q//          inque        \"say\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        m//          compara      \"match\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        s///         substitue    \"substitute\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        tr///        converte     \"translate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Mathematical operators and functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        +            adde         \"add\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        -            deme         \"subtract\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        -            nega         \"negate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        *            multiplica   \"multiply\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        /            divide       \"divide\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        %            recide       \"lop off\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        **           eleva        \"raise\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        &            consocia     \"unite\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        |            interseca    \"intersect\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ^            discerne     \"differentiate (between)\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ++           preincresce  \"increase beforehand\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ++           postincresce \"increase afterwards\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        --           predecresce  \"decrease beforehand\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        --           postdecresce \"decrease afterwards\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        abs          priva        \"strip from\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        atan2        angula       \"create an angle\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sin          oppone       \"oppose\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cos          accuba       \"lie beside\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        int          decolla      \"behead\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        log          succide      \"log a tree\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sqrt         fode         \"root into\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        rand         conice       \"guess, cast lots\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        srand        prosemina    \"to scatter seed\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Logical and comparison operators"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        !            non             \"general negation\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        &&           atque           \"empathic and\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ||           vel             \"emphatic or\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        and          -que            \"and\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        or           -ve             \"or\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        <            praestantiam    \"precedence of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        lt           praestantias    \"precedences of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        <=>          comparitiam     \"comparison of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        cmp          comparitias     \"comparisons of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ==           aequalitam      \"equality of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        eq           aequalitas      \"equalities of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        chomp        morde        \"bite\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        chop         praecide     \"cut short\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        chr          inde         \"give a name to\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        hex          senidemi     \"sixteen at a time\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        oct          octoni       \"eight at a time\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ord          numera       \"number\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        lc           deminue      \"diminish\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        lcfirst      minue        \"diminish\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        uc           amplifica    \"increase\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ucfirst      amplia       \"increase\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        quotemeta    excipe       \"make an exception\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        crypt        huma         \"inter\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        length       meta         \"measure\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        pos          reperi       \"locate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        pack         convasa      \"pack baggage\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        unpack       deconvasa    \"unpack\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        split        scinde       \"split\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        study        stude        \"study\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        index        scruta       \"search\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        join         coniunge     \"join\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        substr       excerpe      \"extract\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Scalars, arrays, and hashes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        defined      confirma     \"verify\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        undef        iani         \"empty, make void\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        scalar       secerna      \"to distinguish, isolate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reset        lusta        \"cleanse\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        pop          decumula     \"unstack\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        push         cumula       \"stack\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        shift        decapita     \"behead\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        unshift      capita       \"crown\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        splice       iunge        \"splice\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        grep         vanne        \"winnow\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        map          applica      \"apply to\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sort         digere       \"sort\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        reverse      retexe       \"reverse\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        delete       dele         \"delete\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        each         quisque      \"each\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        exists       adfirma      \"confirm\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        keys         nomina       \"name\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        values       argue        \"to disclose the contents\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 I/O"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        open         evolute      \"open a book\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        close        claude       \"close a book\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        eof          extremus     \"end of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        read         lege         \"read\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        getc         sublege      \"pick up something\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        readline     perlege      \"read through\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        print        scribe       \"write\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        printf       describe     \"describe\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sprintf      rescribe     \"rewrite\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        write        subscribe    \"write under\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        pipe         inriga       \"irrigate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        tell         enunta       \"tell\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        seek         conquire     \"to seek out\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        STDIN        vestibulo    \"an entrance\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        STDOUT       egresso      \"an exit\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        STDERR       oraculo      \"a place where doom is pronounced\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        DATA         nuntio       \"information\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Control structures"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        {...}        sic...cis                \"as follows...to here\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        do           fac                      \"do\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sub {...}    factorem sic...cis       \"one who does ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        eval         aestima                  \"evaluate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        exit         exi                      \"exit\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        for          per...in...fac           \"for...in...do\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        foreach      per quisque...in...fac   \"for each...in...do\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        goto         adi                      \"go to\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        <label>:     inscribe <label>         \"make a mark\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        return       redde                    \"return\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        if           si...fac                 \"if\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        unless       nisi...fac               \"if not\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        until        donec...fac              \"until\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        while        dum...fac                \"while\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        wantarray    deside                   \"want\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        last         ultimus                  \"final\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        next         posterus                 \"following\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        redo         reconatus                \"trying again\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        continue     confectus                \"complete\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        die          mori                     \"die\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        warn         mone                     \"warn\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        croak        coaxa                    \"croak (like a frog)\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        carp         carpe                    \"carp at\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        __DATA__     nuntius                  \"information\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        __END__      finis                    \"a boundary\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Packages, classes, and modules"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ->           apud         \"of the house of\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ::           intra        \"within\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        bless        benedice     \"bless\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        caller       memora       \"recount a history\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        package      domus        \"house of \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ref          agnosce      \"identify\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        tie          liga         \"tie\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        tied         exhibe       \"display something\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        untie        solve        \"to untie\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        require      require      \"require\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        use          ute          \"use\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 System and filesystem interaction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        chdir        demigrare    \"migrate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        chmod        permitte     \"permit\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        chown        vende        \"sell\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        fcntl        modera       \"control\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        flock        confluee     \"flock together\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        glob         inveni       \"search\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ioctl        impera       \"command\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        link         copula       \"link\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        unlink       decopula     \"unlink\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        mkdir        aedifica     \"build\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        rename       renomina     \"rename\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        rmdir        excide       \"raze\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        stat         exprime      \"describe\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        truncate     trunca       \"shorten\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        alarm        terre        \"frighten\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        dump         mitte        \"drop\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        exec         commuta      \"transform\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        fork         furca        \"fork\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        kill         interfice    \"kill\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        sleep        dormi        \"sleep\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        system       obsecra      \"entreat a higher power\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        umask        dissimula    \"mask\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        wait         manta        \"wait for\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head2 Miscellaneous"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ,            tum          \"and then\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        .            sere         \"conjoin\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        ..           conscribe    \"enlist\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        \\            ad           \"towards\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        =            da           \"give\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        #...         adnota       \"annotate\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        (...         cum          \"with\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"        to_roman     come         \"beautify\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 DIIUDICATORES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The Lingua::Romana::Perligata module may issue the following diagnostic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"messages:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=over 4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Aliquod barbarum inveni: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Some foreign (non-Perligata) symbol was encountered. Commonly this is a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"semi-colon where a period should have been used, but any other"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"non-alphanumeric will trigger the same error."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item '-mentis' illicitum: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Perl does not (yet) support lvalue subroutines that return arrays."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Hence Perligata does not allow the I<-mentis> suffix to be used"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"on user-defined verbs."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Index '%s' ordinalis non est"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"An index or key was specified as a numeral (e.g. I<unum>),"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"rather than an ordinal (e.g. I<primum>)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item '%s' immaturum est"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The symbol indicated (typically I<tum>) appeared too early in the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"command (e.g. before any accusative)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Iussum nefastum: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The indicated imperative verb was encountered where a resultative"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"was expected (e.g. the imperative was incorrectly used as an argument to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"another subroutine or a conjunction)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Accusativum non junctum: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The indicated accusative noun or clause appears in a command, but does"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"not belong to any verb in the command."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Dativum non junctum: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The indicated dative noun or clause appears in a command, but does not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"belong to any verb in the command."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Genitivum non junctum: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The indicated genitive noun or clause appears in a command, but does not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"belong to any verb in the command."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Sententia imperfecta prope '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The command or clause is missing an imperative verb."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Exspectavi 'sic' sed inveni '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The beginning of a code block was expected at the point where"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the indicated word was found."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Exspectavi 'cis' sed inveni '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The end of a code block was expected at the point where"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the indicated word was found."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Exspectavi accusativum post 'per' sed inveni '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The I<per> control structure takes an accusative noun after it."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The indicated symbol was found instead."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item 'in' pro 'per' afuit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The I<in> in a I<per> statement was missing."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item '%s' dativus non est in 'per'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"After the I<in> of a I<per> statement a dative noun or clause is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"required. It was not found."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Iussa absentia per '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The block of the indicated control statement was missing."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=item Non intellexi: '%s'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"A general error message indicating the symbol was not understood in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the context it appeared."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"In addition to these diagnostics, additional debugging support is provided"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"in the form of three arguments that may be passed to the call to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<S<use Lingua::Romana::Perligata>>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The first of these -- C<'converte'> (\"translate\") -- causes the module"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"to translate the Perligata code into Perl and write it to STDOUT instead"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"of executing it. This is useful when your Perligata compiles and runs,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"but does not execute as you expected."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The second argument that may be passed when loading the module is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"C<'discribe'> (\"classify\"), which causes the module to print a lexical"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"analysis of the original Latin program. This is very handy for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"identifying incorrect inflections, etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"The final argument -- C<'investiga'>, (\"trace\") -- provides a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"blow-by-blow trace of the translation process, tracking eack of the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"internal stacks (the verb stack, the accusative stack, the dative stack,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"the block stack), and showing where each reduction is performed. This"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"wealth of information tends to be useful only to those familiar with the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"internals of the module."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 GRATIAE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Special thanks to Marc Moskowitz, John Crossley, Tom Christiansen, and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Bennett Todd, for their invaluable feedback and suggestions. And my"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"enduring gratitude to David Secomb and Deane Blackman for their"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"heroic patience in helping me struggle with the perplexities of the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"I<lingua Romana>."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 SCRIPTOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Damian Conway (damian@conway.org)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 CIMICES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"There are undoubtedly some very serious bugs lurking somewhere in code this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"funky :-) Bug reports and other feedback are most welcome."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Corrections to my very poor Latin are doubly welcome."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"=head1 IUS TRANSCRIBENDI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"Copyright (c) 2000-2016, Damian Conway. All Rights Reserved."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"This module is free software. It may be used, redistributed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"and/or modified under the terms of the Perl Artistic License"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"  (see http://www.perl.com/perl/misc/Artistic.html)"
    },
    {
        "type":"newline",
        "value":"\n"
    }
]
