[
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-------- SIMTEL20 Ada Software Repository Prologue ------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Unit name    : stack_package"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Version      : 1.0"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Author       : Tom Duke"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--              : TI Ada Technology Branch"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--              : PO Box 801, MS 8007"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--              : McKinney, TX  75069"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- DDN Address  : DUKE%TI-EG at CSNET-RELAY"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Copyright    : (c) N/A "
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Date created : 16 Apr 85 "
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Release date : 16 Apr 85 "
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Last update  : 16 Apr 85 "
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Machine/System Compiled/Run on :DG MV 10000, ROLM ADE"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------------------------------------------------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Keywords     : stack, generic stack "
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------:"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Abstract     : This is a generic package that provides the types,"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: procedures, and exceptions to define an abstract stack"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: and its corresponding operations.  Using an"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: instantiation of this generic package, one can declare"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: multiple versions of a stack of type GENERIC_STACK."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: The stack operations provided include:"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: 1. clear the stack,"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: 2. pop the stack,"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: 3. push an element onto the stack, and"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------: 4. access the top element on the stack."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"----------------:  "
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"------------------ Revision history ---------------------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- DATE         VERSION\tAUTHOR                  HISTORY"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- 4/16/85\t1.0\tTom Duke\t\tInitial Release"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"------------------ Distribution and Copyright -----------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- This prologue must be included in all copies of this software."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- This software is released to the Ada community."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- This software is released to the Public Domain (note:"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--   software released to the Public Domain is not subject"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--   to copyright protection)."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Restrictions on use or distribution:  NONE"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"------------------ Disclaimer ---------------------------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- This software and its documentation are provided \"AS IS\" and"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- without any expressed or implied warranties whatsoever."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- No warranties as to performance, merchantability, or fitness"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- for a particular purpose exist."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- Because of the diversity of conditions and hardware under"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- which this software may be used, no warranty of fitness for"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- a particular purpose is offered.  The user is advised to"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- test the software thoroughly before relying on it.  The user"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- must assume the entire risk and liability of using this"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- software."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- In no event shall any person or organization of people be"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- held responsible for any direct, indirect, consequential"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-- or inconsequential damages or lost profits."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                                                           -*"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-------------------END-PROLOGUE--------------------------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"keyword",
        "value":"generic"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"private"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"SIZE"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"POSITIVE"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"keyword",
        "value":"package"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_PACKAGE"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"private"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"function"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TOP_ELEMENT"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"function"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_IS_EMPTY"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"BOOLEAN"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CLEAR_STACK"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"PUSH"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FRAME"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"POP"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FRAME"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"NULL_STACK"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"STACK_OVERFLOW"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"STACK_UNDERFLOW"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"keyword",
        "value":"private"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_LIST"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"array"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SIZE"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"of"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"type"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"keyword",
        "value":"record"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"CONTENTS"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"STACK_LIST"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"NATURAL"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"range"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"NATURAL"
    },
    {
        "type":"operator",
        "value":"'"
    },
    {
        "type":"identifier",
        "value":"FIRST"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":".."
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"SIZE"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":":="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"NATURAL"
    },
    {
        "type":"operator",
        "value":"'"
    },
    {
        "type":"identifier",
        "value":"FIRST"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"record"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_PACKAGE"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"-------------------------------------------------------------------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"keyword",
        "value":"package"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"body"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_PACKAGE"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  function TOP_ELEMENT  --  This function returns the value of the top"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                            element on the stack.  It does not return a"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  pointer to the top element.  If the stack is empty, a constraint error"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  occurs.  The exception handler will then raise the NULL_STACK"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  exception and pass it to the calling procedure."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"function"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TOP_ELEMENT"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"begin"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CONTENTS"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CONSTRAINT_ERROR"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"NULL_STACK"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"value",
        "value":"others"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TOP_ELEMENT"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"----------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"--  Is stack empty?"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"----------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"function"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_IS_EMPTY"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"BOOLEAN"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"begin"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"return"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"NATURAL"
    },
    {
        "type":"operator",
        "value":"'"
    },
    {
        "type":"identifier",
        "value":"FIRST"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"OTHERS"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_IS_EMPTY"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  procedure CLEAR_STACK  --  This procedure resets the stack pointer, TOP,"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                             to a value representing an empty stack."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CLEAR_STACK"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"begin"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":":="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"NATURAL"
    },
    {
        "type":"operator",
        "value":"'"
    },
    {
        "type":"identifier",
        "value":"FIRST"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CLEAR_STACK"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  procedure PUSH  --  This procedure attempts to push another element onto"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                      the stack.  If the stack is full, a constraint error"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  occurs.  The exception handler will then raise the STACK_OVERFLOW"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  exception and pass it to the calling procedure."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"PUSH"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FRAME"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"begin"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":":="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CONTENTS"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":":="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FRAME"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CONSTRAINT_ERROR"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_OVERFLOW"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"value",
        "value":"others"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"PUSH"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  procedure POP  --  This procedure attempts to pop an element from"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--                     the stack.  If the stack is empty, a constraint error"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  occurs.  The exception handler will then raise the STACK_UNDERFLOW"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"--  exception and pass it to the calling procedure."
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"comment",
        "value":"---------------"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"procedure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"POP"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FRAME"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ELEMENTS"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":":"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"in"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"out"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"GENERIC_STACK"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"is"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"begin"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FRAME"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":":="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"CONTENTS"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":":="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"TOP"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"exception"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"CONSTRAINT_ERROR"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_UNDERFLOW"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"keyword",
        "value":"when"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"value",
        "value":"others"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"=>"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"keyword",
        "value":"raise"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"POP"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"newline",
        "value":"\n"
    },
    {
        "type":"keyword",
        "value":"end"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"STACK_PACKAGE"
    },
    {
        "type":"statement terminator",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\n"
    }
]
