[
    {
        "type": "comment",
        "value": "// This sample will guide you through elements of the F# language."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// *******************************************************************************************************"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//   To execute the code in F# Interactive, highlight a section of code and press Alt-Enter in Windows or"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//   Ctrl-Enter Mac, or right-click and select \"Send Selection to F# Interactive\"."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//   You can open the F# Interactive Window from the \"View\" menu."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// *******************************************************************************************************"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// For more about F#, see:"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://fsharp.org"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// For additional templates to use with F#, see the 'Online Templates' in Visual Studio,"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     'New Project' --> 'Online Templates'"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// For specific F# topics, see:"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://fsharp.org (F# Open Organization)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://tryfsharp.org (F# Learning Portal)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://go.microsoft.com/fwlink/?LinkID=234174 (Visual F# Development Portal)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://go.microsoft.com/fwlink/?LinkID=124614 (Visual F# Code Gallery)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://go.microsoft.com/fwlink/?LinkId=235173 (Visual F# Math/Stats Programming)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://go.microsoft.com/fwlink/?LinkId=235176 (Visual F# Charting)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//     http://github.com/ChrisMarinos/FSharpKoans (F# Koans)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// Contents:"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Integers and basic functions"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Booleans"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Strings"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Tuples"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Lists and list processing"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Classes"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Generic classes"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Implementing interfaces"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Arrays"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Sequences"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Recursive functions"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Record types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Union types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Option types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Pattern matching"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Units of measure"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Parallel array programming"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Using events"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - Database access using type providers"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    - OData access using type providers"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Integers and basic functions"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Integers"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sampleInteger"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "176"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Do some arithmetic starting with the first integer"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sampleInteger2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "sampleInteger"
    },
    {
        "type": "operator",
        "value": "/"
    },
    {
        "type": "number",
        "value": "4"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "5"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "7"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "4"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A list of the numbers from 0 to 99"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sampleNumbers"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "99"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A list of all tuples containing all the numbers from 0 to 99 and their squares"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sampleTableOfSquares"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "99"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// The next line prints a list that includes tuples, using %A for generic printing"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"The table of squares from 0 to 99 is:\\n%A\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sampleTableOfSquares"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "BasicFunctions"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Use 'let' to define a function that accepts an integer argument and returns an integer."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Parenthesis are optional for function arguments"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func1a"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Apply the function, naming the function return result using 'let'."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// The variable type is inferred from the function return type."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "result1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "4573"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"The result of squaring the integer 4573 and adding 3 is %d\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "result1"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// When needed, annotate the type of a parameter name using '(argument:type)'"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "type",
        "value": "int"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "/"
    },
    {
        "type": "number",
        "value": "5"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "result2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "7"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "4"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"The result of applying the 1st sample function to (7 + 4) is %d\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "result2"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "100.0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "number",
        "value": "2.0"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "/"
    },
    {
        "type": "number",
        "value": "5.0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3.0"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "number",
        "value": "2.0"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "/"
    },
    {
        "type": "number",
        "value": "5.0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "37.0"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "result3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "func3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "6.5"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "4.5"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"The result of applying the 2nd sample function to (6.5 + 4.5) is %f\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "result3"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Booleans"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "SomeBooleanValues"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "boolean1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "true"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "boolean2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "false"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "boolean3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "not"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "boolean1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "&&"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "boolean2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "||"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "false"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"The expression 'not boolean1 && (boolean2 || false)' is %A\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "boolean3"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Strings"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "identifier",
        "value": "odule"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "StringManipulation"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "string1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Hello\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "string2"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"world\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Use @ to create a verbatim string literal"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "string3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "@\"c:\\Program Files\\\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Using a triple-quote string literal"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "string4"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"\"\"He said \"hello world\" after you did\"\"\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "helloWorld"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "string1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\" \""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "string2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "comment",
        "value": "// concatenate the two strings with a space in between"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"%s\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "helloWorld"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A string formed by taking the first 7 characters of one of the result strings"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "substring"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "helloWorld"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "number",
        "value": "6"
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"%s\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "substring"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Tuples (ordered sets of values)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Tuples"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A simple tuple of integers"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "tuple1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A function that swaps the order of two values in a tuple."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// QuickInfo shows that the function is inferred to have a generic type."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "swapElems"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"The result of swapping (1, 2) is %A\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "swapElems"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A tuple consisting of an integer, a string, and a double-precision floating point number"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "tuple2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"fred\""
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3.1415"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"tuple1: %A    tuple2: %A\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "tuple1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "tuple2"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Lists and list processing"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Lists"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "/// an empty list"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// list of 3 elements"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "42"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "::"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list2"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// a new list with '42' added to the beginning"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "numberList"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1000"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "comment",
        "value": "/// list of integers from 1 to 1000"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A list containing all the days of the year"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "daysList"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "month"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "12"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "day"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DateTime"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DaysInMonth"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "2012"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "month"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DateTime"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "2012"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "month"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "day"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A list containing the tuples which are the coordinates of the black squares on a chess board."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "blackSquares"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "7"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "j"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "7"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "identifier",
        "value": "j"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "%"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                      "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "j"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Square the numbers in numberList, using the pipeline operator to pass an argument to List.map"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "squares"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "numberList"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "List"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "map"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Computes the sum of the squares of the numbers divisible by 3."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumOfSquaresUpTo"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "numberList"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "List"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "filter"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "%"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "List"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "sumBy"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Classes"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "DefiningClasses"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// The class's constructor takes two arguments: dx and dy, both of type 'float'."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Vector2D"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "dx"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "float"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "dy"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "float"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// The length of the vector, computed when the object is constructed"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "length"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sqrt"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "dx"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "dx"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "dy"
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "identifier",
        "value": "dy"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "// 'this' specifies a name for the object's self identifier"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "// In instance methods, it must appear before the member name."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DX"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "dx"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DY"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "dy"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Length"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "length"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Scale"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "k"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Vector2D"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "k"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DX"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "k"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "DY"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// An instance of the Vector2D class"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "vector1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Vector2D"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "3.0"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "4.0"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Get a new scaled vector object, without modifying the original object"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "vector2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "vector1"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Scale"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "10.0"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Length of vector1: %f      Length of vector2: %f\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "vector1"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Length"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "vector2"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Length"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Generic classes"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "DefiningGenericClasses"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "StateTracker"
    },
    {
        "type": "type",
        "value": "<'T>"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "initialElement"
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "T"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "comment",
        "value": "// 'T is the type parameter for the class"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Store the states in an array"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "mutable"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "states"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "initialElement"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Add a new element to the list of states"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "UpdateState"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "newState"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "states"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "newState"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "::"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "states"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "comment",
        "value": "// use the '<-' operator to mutate the value"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Get the entire list of historical states"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "History"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "states"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Get the latest state"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Current"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "states"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Head"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// An 'int' instance of the state tracker class. Note that the type parameter is inferred."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "tracker"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "StateTracker"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "10"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Add a state"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "tracker"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "UpdateState"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "17"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Implementing interfaces"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "/// Type that implements IDisposable"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "ReadFile"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "file"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "new"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "IO"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "StreamReader"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"readme.txt\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "ReadLine"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "file"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "ReadLine"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// this class's implementation of IDisposable members"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "interface"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "IDisposable"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Dispose"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "file"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Close"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Arrays"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Arrays"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// The empty array"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "array1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "[|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "|]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "array2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "[|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"hello\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"world\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"and\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"hello\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"world\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"again\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "|]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "array3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "[|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1000"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "|]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// An array containing only the words \"hello\" and \"world\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "array4"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "[|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "array2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                        "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Contains"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"l\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                            "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "|]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// An array initialized by index and containing the even numbers from 0 to 2000"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "evenNumbers"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Array"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "init"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1001"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// sub-array extracted using slicing notation"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "evenNumbersSlice"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "evenNumbers"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "number",
        "value": "500"
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "array4"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"word: %s\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// modify an array element using the left arrow assignment operator"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "array2"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"WORLD!\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Calculates the sum of the lengths of the words that start with 'h'"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumOfLengthsOfWords"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "array2"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Array"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "filter"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "StartsWith"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"h\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Array"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "sumBy"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Length"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Sequences"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Sequences"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Sequences are evaluated on-demand and are re-evaluated each time they are iterated."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// An F# sequence is an instance of a System.Collections.Generic.IEnumerable<'T>,"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// so Seq functions can be applied to Lists and Arrays as well."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// The empty sequence"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "seq1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Seq"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "empty"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "seq2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "seq"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"hello\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"world\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"and\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"hello\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"world\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"again\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "numbersSeq"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "seq"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1000"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// another array containing only the words \"hello\" and \"world\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "seq3"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "seq"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "seq2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Contains"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"l\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                      "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "word"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "evenNumbers"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Seq"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "init"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1001"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "rnd"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Random"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// An infinite sequence which is a random walk"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "//  Use yield! to return each element of a subsequence, similar to IEnumerable.SelectMany."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "randomWalk"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "seq"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "yield!"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "randomWalk"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "rnd"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "NextDouble"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0.5"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "first100ValuesOfRandomWalk"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "randomWalk"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "5.0"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Seq"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "truncate"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "100"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Seq"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "toList"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Recursive functions"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "RecursiveFunctions"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Compute the factorial of an integer. Use 'let rec' to define a recursive function"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "factorial"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "factorial"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Computes the greatest common factor of two integers."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "//  Since all of the recursive calls are tail calls, the compiler will turn the function into a loop,"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "//  which improves performance and reduces memory consumption."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "greatestCommonFactor"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "elif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "greatestCommonFactor"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "greatestCommonFactor"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "a"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "b"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Computes the sum of a list of integers using recursion."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumList"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "xs"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "match"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "xs"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "y"
    },
    {
        "type": "operator",
        "value": "::"
    },
    {
        "type": "identifier",
        "value": "ys"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "y"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumList"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "ys"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Make the function tail recursive, using a helper function with a result accumulator"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "private"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumListTailRecHelper"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "accumulator"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "xs"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "match"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "xs"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "accumulator"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "y"
    },
    {
        "type": "operator",
        "value": "::"
    },
    {
        "type": "identifier",
        "value": "ys"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumListTailRecHelper"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "accumulator"
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "identifier",
        "value": "y"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "ys"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumListTailRecursive"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "xs"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "sumListTailRecHelper"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "xs"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Record types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "RecordTypes"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// define a record type"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "ContactCard"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Name"
    },
    {
        "type": "whitespace",
        "value": "     "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "          "
    },
    {
        "type": "identifier",
        "value": "Phone"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "          "
    },
    {
        "type": "identifier",
        "value": "Verified"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "bool"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "contact1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Name"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Alf\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Phone"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"(206) 555-0157\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Verified"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "false"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Create a new record that is a copy of contact1,"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// but has different values for the 'Phone' and 'Verified' fields"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "contact2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "contact1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Phone"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"(206) 555-0112\""
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Verified"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "true"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Converts a 'ContactCard' object to a string"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "showCard"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Name"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\" Phone: \""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Phone"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "not"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Verified"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\" (unverified)\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Union types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "UnionTypes"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Represents the suit of a playing card"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Suit"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Hearts"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Clubs"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Diamonds"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Spades"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Represents the rank of a playing card"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Rank"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Represents the rank of cards 2 .. 10"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Value"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "of"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "int"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Ace"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "King"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Queen"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Jack"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "static"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "GetAllRanks"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Ace"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "10"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Value"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "i"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Jack"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Queen"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "King"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Card"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Suit"
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Suit"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Rank"
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Rank"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Returns a list representing all the cards in the deck"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "fullDeck"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "suit"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Hearts"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Diamonds"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Clubs"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Spades"
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "rank"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Rank"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "GetAllRanks"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "yield"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Suit"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "identifier",
        "value": "suit"
    },
    {
        "type": "group",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Rank"
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "identifier",
        "value": "rank"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Converts a 'Card' object to a string"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "showCard"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "rankString"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "match"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Rank"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Ace"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Ace\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "King"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"King\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Queen"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Queen\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Jack"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Jack\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Value"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "suitString"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "match"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "c"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Suit"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Clubs"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"clubs\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Diamonds"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"diamonds\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Spades"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"spades\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Hearts"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"hearts\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "rankString"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\" of \""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "suitString"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "printAllCards"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "card"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "fullDeck"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"%s\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "showCard"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "card"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Option types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "OptionTypes"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Option values are any kind of value tagged with either 'Some' or 'None'."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// They are used extensively in F# code to represent the cases where many other"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// languages would use null references."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Customer"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "zipCode"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "decimal"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "option"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Abstract class that computes the shipping zone for the customer's zip code,"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// given implementations for the 'GetState' and 'GetShippingZone' abstract methods."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "[<"
    },
    {
        "type": "identifier",
        "value": "AbstractClass"
    },
    {
        "type": "group",
        "value": ">]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "ShippingCalculator"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "abstract"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "GetState"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "decimal"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "option"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "abstract"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "GetShippingZone"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "int"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Return the shipping zone corresponding to the customer's ZIP code"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Customer may not yet have a ZIP code or the ZIP code may be invalid"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "CustomerShippingZone"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "customer"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Customer"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "customer"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "zipCode"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Option"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "bind"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "GetState"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Option"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "map"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "this"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "GetShippingZone"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Pattern matching"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "PatternMatching"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// A record for a person's first and last name"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Person"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "          "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "type",
        "value": "string"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Define a discriminated union of 3 different kinds of employees"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Employee"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Engineer is just herself"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Engineer"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": "of"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Person"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Manager has list of reports"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Manager"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "operator",
        "value": "of"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Person"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list"
    },
    {
        "type": "type",
        "value": "<Employee>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Executive also has an assistant"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Executive"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "of"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Person"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list"
    },
    {
        "type": "type",
        "value": "<Employee>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Employee"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Count everyone underneath the employee in the management hierarchy, including the employee"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "countReports"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "emp"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Employee"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "match"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "emp"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Engineer"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Manager"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "reports"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                "
    },
    {
        "type": "identifier",
        "value": "reports"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "List"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "sumBy"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "countReports"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Executive"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "id"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "reports"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "assistant"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "reports"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "List"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "sumBy"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "countReports"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "countReports"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "assistant"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "/// Find all managers/executives named \"Dave\" who do not have any reports"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "findDaveWithOpenPosition"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "emps"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Employee"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "list"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "emps"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "List"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "filter"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "function"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                       "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Manager"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Dave\""
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "true"
    },
    {
        "type": "whitespace",
        "value": "       "
    },
    {
        "type": "comment",
        "value": "// [] matches the empty list"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                       "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Executive"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": "{"
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Dave\""
    },
    {
        "type": "group",
        "value": "}"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "["
    },
    {
        "type": "group",
        "value": "]"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "_"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "true"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                       "
    },
    {
        "type": "group",
        "value": "|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "_"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "false"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": "                                 "
    },
    {
        "type": "comment",
        "value": "// '_' is a wildcard pattern that matches anything"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                                                                     "
    },
    {
        "type": "comment",
        "value": "// this handles the \"or else\" case"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Units of measure"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "UnitsOfMeasure"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Code can be annotated with units of measure when using F# arithmetic over numeric types"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "open"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Microsoft"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "FSharp"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Data"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "UnitSystems"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "SI"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "UnitNames"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "[<"
    },
    {
        "type": "identifier",
        "value": "Measure"
    },
    {
        "type": "group",
        "value": ">]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "type"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "mile"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "comment",
        "value": "/// Conversion factor mile to meter: meter is defined in SI.UnitNames"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "static"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "member"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "asMeter"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1600"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "type",
        "value": "<meter/mile>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "d"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "50"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "type",
        "value": "<mile>"
    },
    {
        "type": "whitespace",
        "value": "          "
    },
    {
        "type": "comment",
        "value": "// Distance expressed using imperial units"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "d"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "d"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "*"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "mile"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "asMeter"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "// Same distance expressed using metric system"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"%A = %A\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "d"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "d"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// let error = d + d'       // Compile error: units of measure do not match"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Parallel array programming"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "ParallelArrayProgramming"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "oneBigArray"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "[|"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "100000"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "|]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// do some CPU intensive computation"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "rec"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "computeSomeFunction"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "computeSomeFunction"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "computeSomeFunction"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Do a parallel map over a large input array"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "computeResults"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "oneBigArray"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "|>"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Array"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Parallel"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "map"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "computeSomeFunction"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "%"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "20"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"Parallel computation results: %A\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "computeResults"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Using events"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Events"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "open"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Create instance of Event object that consists of subscription point (event.Publish) and event trigger (event.Trigger)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "simpleEvent"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "new"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Event"
    },
    {
        "type": "type",
        "value": "<int>"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Add handler"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "simpleEvent"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Publish"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Add"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"this is handler was added with Publish.Add: %d\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "x"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Trigger event"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "simpleEvent"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Trigger"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "5"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Create instance of Event that follows standard .NET convention: (sender, EventArgs)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "let"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "eventForDelegateType"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "new"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Event"
    },
    {
        "type": "operator",
        "value": "<"
    },
    {
        "type": "identifier",
        "value": "EventHandler"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "EventArgs"
    },
    {
        "type": "operator",
        "value": ">"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Add handler"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "eventForDelegateType"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Publish"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "AddHandler"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "identifier",
        "value": "EventHandler"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "keyword",
        "value": "fun"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "_"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "_"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "->"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "printfn"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"this is handler was added with Publish.AddHandler\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Trigger event (note that sender argument should be set)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "identifier",
        "value": "eventForDelegateType"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Trigger"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "value",
        "value": "null"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "EventArgs"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Empty"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         Database access using type providers"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "DatabaseAccess"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// The easiest way to access a SQL database from F# is to use F# type providers."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// Add references to System.Data, System.Data.Linq, and FSharp.Data.TypeProviders.dll."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// You can use Server Explorer to build your ConnectionString."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "(*\r\n\r\n    #r \"System.Data\"\r\n    #r \"System.Data.Linq\"\r\n    #r \"FSharp.Data.TypeProviders\"\r\n\r\n    open Microsoft.FSharp.Data.TypeProviders\r\n\r\n    type SqlConnection = SqlDataConnection<ConnectionString = @\"Data Source=.\\sqlexpress;Initial Catalog=tempdb;Integrated Security=True\">\r\n    let db = SqlConnection.GetDataContext()\r\n\r\n    let table =\r\n        query { for r in db.Table do\r\n                select r }\r\n\r\n    *)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "// You can also use SqlEntityConnection instead of SqlDataConnection, which accesses the database using Entity Framework."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//         OData access using type providers"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "// ---------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "OData"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "comment",
        "value": "(*\r\n\r\n    open System.Data.Services.Client\r\n    open Microsoft.FSharp.Data.TypeProviders\r\n\r\n    // Consume demographics population and income OData service from Azure Marketplace.\r\n    // For more information, see http://go.microsoft.com/fwlink/?LinkId=239712\r\n\r\n    type Demographics = Microsoft.FSharp.Data.TypeProviders.ODataService<ServiceUri = \"https://api.datamarket.azure.com/Esri/KeyUSDemographicsTrial/\">\r\n    let ctx = Demographics.GetDataContext()\r\n\r\n    // Sign up for a Azure Marketplace account at https://datamarket.azure.com/account/info\r\n    ctx.Credentials <- System.Net.NetworkCredential (\"<your liveID>\", \"<your Azure Marketplace Key>\")\r\n\r\n    let cities =\r\n        query { for c in ctx.demog1 do\r\n                where (c.StateName = \"Washington\") }\r\n\r\n    for c in cities do\r\n        printfn \"%A - %A\" c.GeographyId c.PerCapitaIncome2010.Value\r\n\r\n    *)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "preprocessor",
        "value": "#if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "COMPILED"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "module"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "BoilerPlateForForm"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "group",
        "value": "[<"
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "STAThread"
    },
    {
        "type": "group",
        "value": ">]"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "do"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "//    do System.Windows.Forms.Application.Run()"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "preprocessor",
        "value": "#endif"
    },
    {
        "type": "newline",
        "value": "\r\n"
    }
]
