[
    {
        "type":"comment",
        "value":"/*\r\n * Copyright (c) 2012-2014 nadavc <https://twitter.com/nadavc>\r\n * This work is free. You can redistribute it and/or modify it under the\r\n * terms of the WTFPL, Version 2, as published by Sam Hocevar.\r\n * See the COPYING file for more details.\r\n */"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"package"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"org"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"groovykoans"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"koan13"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"import"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"spock"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"lang"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Specification"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"import"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"spock"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"lang"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Stepwise"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"import"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"spock"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"lang"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"Unroll"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"/**\r\n * Koan13 - Spock testing framework\r\n *\r\n * Reading list:\r\n *   * https://spockframework.github.io/spock/docs/1.0/data_driven_testing.html\r\n */"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"identifier",
        "value":"@Stepwise"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"keyword",
        "value":"class"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Koan13"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"extends"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Specification"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"introduction to Spock\""
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Noticed something different about this Koan? We're now using the Spock testing framework."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Spock relies on the power of Groovy to allow simpler and better structured unit tests as well as"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// a groovy mocking framework. Note how much easier it is to read the test case title!"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Let's start. Spock has one mandatory block - 'expect'. You can find more information at the link above"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// and then make the following pass"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"expect:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"circum"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"r"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"->"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Math"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"PI"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"r"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// ------------ START EDITING HERE ----------------------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"r"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1.d"
    },
    {
        "type":"function",
        "value":"iv"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"Math"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"PI"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// ------------ STOP EDITING HERE  ----------------------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"function",
        "value":"circum"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"r"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"testing magic formula\""
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"expectedResult"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Let's use the 'where' block. This actually executes the test 5 times with 5 different parameters."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Fill in the blanks in magicFormula below."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"expect:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"function",
        "value":"magicFormula"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"expectedResult"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"where:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"expectedResult"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"11"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"string",
        "value":"'a'"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'aa2'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"magicFormula"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// ------------ START EDITING HERE ----------------------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// ------------ STOP EDITING HERE  ----------------------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"@Unroll"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"check if #a times #b equals #c\""
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Fix the 'where' block to make this test pass for all ints a,b such that 0<= a,b <=10 (121 permutations)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Also note how we now used @Unroll and derived the parameter names from the test name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"expect:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"function",
        "value":"advancedMultiplication"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"=="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"c"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"where:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// Hint - this can be done in two lines"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// ------------ START EDITING HERE ----------------------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<<"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"0."
    },
    {
        "type":"number",
        "value":".10"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"identifier",
        "value":"collect"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"["
    },
    {
        "type":"identifier",
        "value":"it"
    },
    {
        "type":"group",
        "value":"]"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"function",
        "value":"multiply"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"11"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"function",
        "value":"flatten"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"// 0,0,0,0,0,0,0,0,0,0,0,1,1,1,1 ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"<<"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"0."
    },
    {
        "type":"number",
        "value":".10"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"."
    },
    {
        "type":"function",
        "value":"multiply"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"11"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"// 0,1,2..10,0,1,2,..10,..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"// ------------ STOP EDITING HERE  ----------------------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"c"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"def"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"function",
        "value":"advancedMultiplication"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"{"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"*"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"b"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"group",
        "value":"}"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"group",
        "value":"}"
    }
]
