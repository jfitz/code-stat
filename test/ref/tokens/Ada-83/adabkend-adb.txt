[
    {
        "type": "comment",
        "value": "------------------------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                                                          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                         GNAT COMPILER COMPONENTS                         --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                                                          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                             A D A B K E N D                              --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                                                          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                 B o d y                                  --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                                                          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                     Copyright (C) 2001-2019, AdaCore                     --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                                                          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- GNAT is free software;  you can  redistribute it  and/or modify it under --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- terms of the  GNU General Public License as published  by the Free Soft- --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- ware  Foundation;  either version 3,  or (at your option) any later ver- --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- for  more details.  You should have  received  a copy of the GNU General --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "-- http://www.gnu.org/licenses for a complete copy of the license.          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--                                                                          --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "------------------------------------------------------------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "comment",
        "value": "--  This is the version of the Back_End package for back ends written in Ada"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Atree"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Atree"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Debug"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Output"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Output"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Osint"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Osint"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Osint"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "C"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Osint"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "C"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "C"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "C"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Types"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "    "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Types"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "with"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "OS_Lib"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "System"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "OS_Lib"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "package"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "body"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Adabkend"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "is"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "use"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "-------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "-- Call_Back_End --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "-------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "procedure"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Call_Back_End"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "is"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "begin"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Verbose_Mode"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "or"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Full_List"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "        "
    },
    {
        "type": "operator",
        "value": "and"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "not"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Debug"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Debug_Flag_7"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Eol"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Str"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Product_Name"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Str"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\", Copyright \""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Str"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Copyright_Years"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Str"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\" Ada Core Technologies, Inc.\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Str"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\" (http://www.adacore.com)\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Eol"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Write_Eol"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  The front end leaves the Current_Error_Node at a location that is"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  meaningless and confusing when emitting bug boxes from the back end."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  Reset the global variable in order to emit \"No source file position"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  information available\" messages on back end crashes."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "identifier",
        "value": "Current_Error_Node"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Empty"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "identifier",
        "value": "Driver"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Cunit"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Types"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Main_Unit"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Call_Back_End"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "-----------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "-- Scan_Compiler_Arguments --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "-----------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "procedure"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Scan_Compiler_Arguments"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "is"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "identifier",
        "value": "Output_File_Name_Seen"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Boolean"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "False"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  Set to True after having scanned the file_name for switch"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  \"-gnatO file_name\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "identifier",
        "value": "Argument_Count"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "constant"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Integer"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Arg_Count"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  Number of arguments (excluding program name)"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "identifier",
        "value": "Args"
    },
    {
        "type": "whitespace",
        "value": "     "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argument_List"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argument_Count"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Positive"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "procedure"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Scan_Back_End_Switches"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "String"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  Procedure to scan out switches stored in Switch_Chars. The first"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  character is known to be a valid switch character, and there are no"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  blanks or other switch terminator characters in the string, so the"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  entire string should consist of valid switch characters, except that"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  an optional terminating NUL character is allowed."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  If the switch is not valid, control will not return. The switches"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  must still be scanned to skip the \"-o\" arguments, or internal GCC"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  switches, which may be safely ignored by other back ends."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "----------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "-- Scan_Back_End_Switches --"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "----------------------------"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "procedure"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Scan_Back_End_Switches"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "String"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "is"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "constant"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Positive"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "constant"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Natural"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Last"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "begin"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Process any back end switches, returning if the switch does not"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  affect code generation or falling through if it does, so the"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  switch will get stored."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Skip -o, -G or internal GCC switches together with their argument."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"o\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "           "
    },
    {
        "type": "operator",
        "value": "or"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"G\""
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "           "
    },
    {
        "type": "operator",
        "value": "or"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Internal_GCC_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "return"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "comment",
        "value": "-- ignore this switch"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Set optimization indicators appropriately. In gcc-based GNAT this"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  is picked up from imported variables set by the gcc driver, but"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  for compilers with non-gcc back ends we do it here to allow use"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  of these switches by the front end. Allowed optimization switches"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  are -Os (optimize for size), -O[0123], and -O (same as -O1)."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'O'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Optimization_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'s'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Optimize_Size"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Optimization_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": "  "
    },
    {
        "type": "comment",
        "value": "-- Consistent with gcc setting"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'0'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'3'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Optimization_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                    "
    },
    {
        "type": "identifier",
        "value": "Character"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "Pos"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "-"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Character"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "Pos"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "'0'"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"invalid switch: \""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "&"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"invalid switch: \""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "&"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"quiet\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "return"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "comment",
        "value": "-- ignore this switch"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"c\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "return"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "comment",
        "value": "-- ignore this switch"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  The -x switch and its language name argument will generally be"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  ignored by non-gcc back ends. In any case, we save the switch and"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  argument in the compilation switches."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"x\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Store_Compilation_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "declare"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "constant"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "String"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Args"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "value",
        "value": "all"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "begin"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"language name missing after -x\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Store_Compilation_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "return"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Special check, the back end switch -fno-inline also sets the"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  front end flags to entirely inhibit all inlining. So we store it"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  and set the appropriate flags."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"fno-inline\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Store_Compilation_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Disable_FE_Inline"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "True"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Disable_FE_Inline_Always"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "True"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "return"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Similar processing for -fpreserve-control-flow"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"fpreserve-control-flow\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Store_Compilation_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Suppress_Control_Flow_Optimizations"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "True"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "return"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Recognize -gxxx switches"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'g'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Debugger_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "case"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "is"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "when"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'0'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "=>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                     "
    },
    {
        "type": "identifier",
        "value": "Debugger_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "when"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'1'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "=>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                     "
    },
    {
        "type": "identifier",
        "value": "Debugger_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "when"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'2'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "=>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                     "
    },
    {
        "type": "identifier",
        "value": "Debugger_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "2"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "when"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "'3'"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "=>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                     "
    },
    {
        "type": "identifier",
        "value": "Debugger_Level"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "3"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "keyword",
        "value": "when"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "value",
        "value": "others"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "=>"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                     "
    },
    {
        "type": "value",
        "value": "null"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "case"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Ignore all other back end switches"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Back_End_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "value",
        "value": "null"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Give error for junk switch"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"invalid switch: \""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "&"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "comment",
        "value": "--  Store any other GCC switches"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Lib"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Store_Compilation_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Switch_Chars"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Scan_Back_End_Switches"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "comment",
        "value": "--  Start of processing for Scan_Compiler_Args"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "begin"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  Put all the arguments in argument list Args"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "for"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "in"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argument_Count"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "loop"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "declare"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "String"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Len_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Arg"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "begin"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Fill_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "Address"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Arg"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Args"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Arg"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "new"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "String"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "loop"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "comment",
        "value": "--  Loop through command line arguments, storing them for later access"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "while"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "<="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argument_Count"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "loop"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Look_At_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "declare"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "constant"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "String"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Args"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "value",
        "value": "all"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "begin"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "Length"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "0"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"Empty argument\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  If the previous switch has set the Output_File_Name_Present"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  flag (that is we have seen a -gnatO), then the next argument"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  is the name of the output object file."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "Output_File_Name_Present"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "              "
    },
    {
        "type": "operator",
        "value": "and"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "not"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Output_File_Name_Seen"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"Object file name missing after -gnatO\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Set_Output_Object_File_Name"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Output_File_Name_Seen"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "True"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "comment",
        "value": "--  If the previous switch has set the Search_Directory_Present"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "comment",
        "value": "--  flag (that is if we have just seen -I), then the next"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "comment",
        "value": "--  argument is a search directory path."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Search_Directory_Present"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Fail"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "string",
        "value": "\"search directory missing after -I\""
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Add_Src_Search_Dir"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "comment",
        "value": "--  Add directory to lib search so that back end can take as"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "comment",
        "value": "--  input ALI files if needed. Otherwise this won't have any"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "comment",
        "value": "--  impact on the compiler."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Add_Lib_Search_Dir"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "                  "
    },
    {
        "type": "identifier",
        "value": "Search_Directory_Present"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "False"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  If not a switch, must be a file name"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "not"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Add_File"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  We must recognize -nostdinc to suppress visibility on the"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  standard GNAT RTL sources."
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "First"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ".."
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "operator",
        "value": "'"
    },
    {
        "type": "identifier",
        "value": "Last"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "string",
        "value": "\"nostdinc\""
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Opt"
    },
    {
        "type": "operator",
        "value": "."
    },
    {
        "type": "identifier",
        "value": "No_Stdinc"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "True"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  Front end switch"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "elsif"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Is_Front_End_Switch"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "then"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Scan_Front_End_Switches"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Args"
    },
    {
        "type": "group",
        "value": ","
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "comment",
        "value": "--  All non-front-end switches are back-end switches"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "else"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "               "
    },
    {
        "type": "identifier",
        "value": "Scan_Back_End_Switches"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "group",
        "value": "("
    },
    {
        "type": "identifier",
        "value": "Argv"
    },
    {
        "type": "group",
        "value": ")"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "            "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "if"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Look_At_Arg"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "         "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": ":="
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Next_Arg"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "operator",
        "value": "+"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "number",
        "value": "1"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "      "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "keyword",
        "value": "loop"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "whitespace",
        "value": "   "
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Scan_Compiler_Arguments"
    },
    {
        "type": "statement terminator",
        "value": ";"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "newline",
        "value": "\r\n"
    },
    {
        "type": "keyword",
        "value": "end"
    },
    {
        "type": "whitespace",
        "value": " "
    },
    {
        "type": "identifier",
        "value": "Adabkend"
    },
    {
        "type": "statement terminator",
        "value": ";"
    }
]
