[
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       Enhanced BASIC for the Motorola MC680xx                                     *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       This version is for the TS2 single board computer.                          *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       Jeff Tranter (tranter@pobox.com)                                            *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       Copyright(C) 2002-12 by Lee Davison. This program may be freely distributed *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       for personal use only. All commercial rights are reserved.                  *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       More 68000 and other projects can be found on my website at ..              *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*        http://mycorner.no-ip.org/index.html                                       *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       mail : leeedavison@googlemail.com                                           *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                                                   *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.54"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.54 adds experimental support for LOAD/SAVE using Hobbytronics"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* USB Flash Drive Host Board"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.53 fixes math error that affected exponentiation (\"^\") and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*  EXP() function. Thanks to joelang for fix."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.52 stops USING$() from reading beyond the end of the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.51 fixes the UCASE$() and LCASE$() functions for null strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.50 unary minus in concatenate generates a type mismatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.49 doesn't tokenise 'DEF' or 'DEC' within a hex value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.48 allows scientific notation underflow in the USING$() function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.47 traps the use of array elements as the FOR loop variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.46 updates function and function variable handling"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.45 makes the handling of non existant variables consistent and gives the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* option of not returning an error for a non existant variable. If this is the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* behaviour you want just change novar to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"novar"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"0                               * non existant variables cause errors"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Set the symbol FLASH_SUPPORT to 1 if you want to enable experimental"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* support for LOAD/SAVE using a Hobbytronics USB Flash Drive Host"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Board."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.44 adds overflow indication to the USING$() function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.43 removes an undocumented feature of concatenating null strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.42 reimplements backspace so that characters are overwritten with [SPACE]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.41 removes undocumented features of the USING$() function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.40 adds the USING$() function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.33 adds the file requester to LOAD and SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Ver 3.32 adds the optional ELSE clause to IF .. THEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Version 3.25 adds the option to change the behaviour of INPUT so that a null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* response does not cause a program break. If this is the behaviour you want just"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* change nobrk to some non zero value."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"nobrk"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"0                               * null response to INPUT causes a break"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Version 3.xx replaces the fixed RAM addressing from previous versions with a RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* pointer in a3. this means that this could now be run as a task on a multitasking"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* system where memory resources may change."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"INCLUDE"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"basic68k.inc\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* RAM offset definitions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Use this value to run out of ROM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"ORG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"$00C000                 * past the vectors in a real system"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Use this value to run out of RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       ORG             $000800                 * past the vectors in a real system"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ACIA_1"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"invalid",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"number",
        "value":"$00010040"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Console ACIA base address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ACIA_2"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"invalid",
        "value":"="
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"number",
        "value":"$00010041"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Auxiliary ACIA base address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"code_start"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* For convenience, so you can start from first address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the following code is simulator specific, change to suit your system"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Output character to the console from register d0.b"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_OUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Save working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"ACIA_1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"* A0 points to console ACIA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TXNOTREADY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Read ACIA status"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* Test TDRE bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.S"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TXNOTREADY"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"* Until ACIA Tx ready"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Write character to send"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Output character to the second (aux) serial port from register d0.b"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Save working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"ACIA_2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"* A0 points to console ACIA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TXNOTREADY1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Read ACIA status"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* Test TDRE bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TXNOTREADY1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Until ACIA Tx ready"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Write character to send"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Output null terminated string pointed to by A0 to first serial port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"PRINTSTRING1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Save working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LP1"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Is it null?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"RET1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* If so, return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Get character and advance pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Output it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"LP1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* Continue for rest of string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RET1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* Return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Output null terminated string pointed to by A0 to second serial port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"PRINTSTRING2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Save working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LP2"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Is it null?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"RET2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* If so, return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Get character and advance pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Output it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"LP2"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* Continue for rest of string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RET2"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* Return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* input a character from the console into register d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* else return Cb=0 if there's no character available"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_IN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Save working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"ACIA_1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"* A0 points to console ACIA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Read ACIA status"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* Test RDRF bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.S"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"RXNOTREADY"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"* Branch if ACIA Rx not ready"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Read character received"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.B"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"CCR"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* Set the carry, flag we got a byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* Return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RXNOTREADY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":"I.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"number",
        "value":"#$FE"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"CCR"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Clear the carry, flag character not available"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Input routine used in LOAD mode to read file from USB flash storage."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_IN2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Save working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Redirect output to aux. port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"V_OUTPv"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* The first time, send READ <filename> 1 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Subsequent times, send READ <filename> n 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"LAB_READN"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"pc"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"* Send READ command string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"PRINTSTRING2"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* Print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"load_filename"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"* Send filename string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"PRINTSTRING2"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* Print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"' '"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Send space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"load_first"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"* First time?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"NOTFIRST1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'1'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Send '1'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"CLR.B"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"load_first"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"* Clear first flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"SENDCMD1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NOTFIRST1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'n'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Send 'n'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"SENDCMD1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"' '"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Send space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'1'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Send '1'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"number",
        "value":"#$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Send <Return>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"VEC_OUT"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"* Redirect output back to console port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"V_OUTPv"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Read one byte from USB host"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"ACIA_2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"* A0 points to console ACIA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RXNOTREADY2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Read ACIA status"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* Test RDRF bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.S"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"RXNOTREADY2"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Branch if ACIA Rx not ready"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Read character received"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Check for end of file character ('~') and if found, redirect"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* input back to console port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'~'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* End of file marker?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"identifier",
        "value":"NOTEOF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"number",
        "value":"#$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"D0"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"* Convert '~' to a Return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"VEC_IN"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"* Redirect input back to console port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"V_INPTv"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NOTEOF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.L"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A7"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"D1"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* Restore working registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"CCR"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* Set the carry, flag we got a byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* Return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LOAD routine for the TS2 computer (not implemented)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifeq"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_LD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2E,d7                         * error code $2E \"Not implemented\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LOAD routine for the TS2 computer. Supports a Hobbytronics USB Flash"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Drive Host Board connected to the auxiliary serial port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_LD"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FILENAME(PC),A0             * Prompt for filename."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"PRINTSTRING1                    * Print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"A3,A2                           * Save pointer to RAM variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"GETFN1"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_IN                          * Get character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"GETFN1                          * Go back if carry clear, indicating no key pressed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_OUT                         * Echo the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0D,D0                         * Was it <Return>?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"ENDLN1                          * If so, branch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7F,D0                         * Was it <Delete>?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"DELETE1                         * If so, handle delete"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,D0                         * Was it <Backspace?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"DELETE1                         * If so, handle as delete"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"D0,load_filename(A2)            * Save in buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#1,A2                           * Advance string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"GETFN1                          * Go back and get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"DELETE1"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#1,A2                           * Delete last character entered"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"GETFN1                          * Go back and get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ENDLN1"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#0,load_filename(A2)            * Add terminating null to filename"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"VEC_IN2,A0                      * Redirect input from aux. port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"A0,V_INPTv(a3)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#1,load_first(A3)               * Set load_first flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Input routine will detect end of file and redirect input back to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* console port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SAVE routine for the TS2 computer (not implemented)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifeq"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_SV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2E,d7                         * error code $2E \"Not implemented\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"FLASH_SUPPORT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SAVE routine for the TS2 computer. Supports a Hobbytronics USB Flash"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Drive Host Board connected to the auxiliary serial port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* TODO: Make configurable at build time"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_SV"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FILENAME(PC),A0             * Prompt for filename."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"PRINTSTRING1                    * Print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"A3,A2                           * Save pointer to RAM variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"GETFN"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_IN                          * Get character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"GETFN                           * Go back if carry clear, indicating no key pressed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_OUT                         * Echo the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0D,D0                         * Was it <Return>?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"ENDLN                           * If so, branch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7F,D0                         * Was it <Delete>?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"DELETE                          * If so, handle delete"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".B"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,D0                         * Was it <Backspace?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"DELETE                          * If so, handle as delete"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"D0,load_filename(A2)            * Save in buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#1,A2                           * Advance string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"GETFN                           * Go back and get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"DELETE"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#1,A2                           * Delete last character entered"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"GETFN                           * Go back and get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ENDLN"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#0,load_filename(A2)            * Add terminating null to filename"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"VEC_OUT2,A0                     * Redirect output to aux. port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"A0,V_OUTPv(a3)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_WRITE(pc),A0                * Send WRITE command string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"PRINTSTRING2                    * Print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"load_filename(A3),A0            * Send filename string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"PRINTSTRING2                    * Print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#$0D,D0                         * Send <Return>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_OUT2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#356000,d0                      * Delay approx. 1 second to allow USB to create file"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"DELAY"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#1,d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"DELAY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * Tells LIST no arguments"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#$FE,CCR                        * Clear carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_LIST                        * Call LIST routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'~',d0                         * Send tilde symbol indicate end of file (used when loading)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#26,d0                          * Send Control-Z to indicate end of file save operation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"VEC_OUT,A0                      * Redirect output back to console port."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.L"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"A0,V_OUTPv(a3)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* Return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_WRITE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"'$WRITE ',$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_READN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"'$READ ',$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FILENAME"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"'Filename? ',$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"even"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"code_start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                "
    },
    {
        "type":"comment",
        "value":"* Set up ACIA parameters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"ACIA_1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* A0 points to console ACIA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$15"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Set up ACIA1 constants (no IRQ,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                "
    },
    {
        "type":"comment",
        "value":"* RTS* low, 8 bit, no parity, 1 stop)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"ACIA_2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* A0 points to aux. ACIA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.B"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$15"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"A0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"comment",
        "value":"* Set up ACIA2 constants (no IRQ,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                "
    },
    {
        "type":"comment",
        "value":"* RTS* low, 8 bit, no parity, 1 stop)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* to tell EhBASIC where and how much RAM it has pass the address in a0 and the size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* in d0. these values are at the end of the .inc file"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#ram_addr"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* tell BASIC where RAM starts"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"#ram_size"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* tell BASIC how big RAM is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* end of simulator specific code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"****************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"****************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"****************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"****************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Register use :- (must improve this !!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       a6 -    temp Bpntr                              * temporary BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       a5 -    Bpntr                                   * BASIC execute (get byte) pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       a4 -    des_sk                                  * descriptor stack pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       a3 -    ram_strt                                * start of RAM. all RAM references are offsets"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                                                       * from this value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BASIC cold start entry point. assume entry with RAM address in a0 and RAM length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_COLD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$4000,d0                       * compare size with 16k"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_sizok                       * branch if >= 16k"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#5,d0                           * error 5 - not enough RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.b"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"#228,D7                         * Go to TUTOR function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"trap"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#14                             * Call TRAP14 handler"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_sizok"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy RAM base to a3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* a0 is top of RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Ememl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set end of mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"ram_base(a3),sp         * set stack to RAM start + 1k"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$4EF9"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* JMP opcode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* point to start of vector table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LAB_WARM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_COLD(pc),a1         * initial warm start vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* Usrjmp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER(pc),a1         * initial user function vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* \"Function call\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* V_INPT JMP opcode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_IN(pc),a1           * get byte from input device vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* V_OUTP JMP opcode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_OUT(pc),a1          * send byte to output device vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* V_LOAD JMP opcode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_LD(pc),a1           * load BASIC program vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* V_SAVE JMP opcode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_SV(pc),a1           * save BASIC program vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* V_CTLC JMP opcode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"VEC_CC(pc),a1           * save CTRL-C check vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set-up start values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*##LAB_GMEM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d0                 * clear d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Nullct"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* default NULL count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* clear terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"ccflag"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* allow CTRL-C check"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"prg_strt"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* clear start word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"BHsend"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear value to string end word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$50"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TWidth"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* default terminal width byte for simulator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$0E"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TabSiz"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save default tab size = 14"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$38"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Iclim"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* default limit for TAB = 14 for simulator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"des_sk(a3),a4           * set descriptor stack start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"prg_strt(a3),a0         * get start of mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save start of mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1463                        * do \"NEW\" and \"CLEAR\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Ememl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get end of mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Smeml(a3),d0            * subtract start of mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_295E                        * print d0 as unsigned integer (bytes free)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SMSG(pc),a0         * point to start message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RSED(pc),a0         * get pointer to value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_UFAC                        * unpack memory (a0) into FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1274(pc),a0         * get warm start vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Wrmjpv"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set warm start vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RND                 * initialise"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JMP"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_WARM(a3)            * go do warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do format error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FOER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2C,d7                 * error code $2C \"Format\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do address error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ADER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2A,d7                 * error code $2A \"Address\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do wrong dimensions error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_WDER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$28,d7                 * error code $28 \"Wrong dimensions\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do undimensioned array error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UDER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$26,d7                 * error code $26 \"undimensioned array\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do undefined variable error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UVER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you do want a non existant variable to return an error then leave the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file set to zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifeq"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$24,d7                 * error code $24 \"undefined variable\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you want a non existant variable to return a null value then set the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * .......$ .......& ........ .......0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * ........ .......0 .......$ .......&"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * ........ .......0 .......$ &......."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * ........ .......0 0....... $&.....Γê⌐ΓöÉΓò£."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$C0,d0                 * mask the type bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear d0 and set the zero flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* return a null address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do loop without do error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LDER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d7                 * error code $22 \"LOOP without DO\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do undefined function error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UFER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d7                 * error code $20 \"Undefined function\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do can't continue error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CCER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1E,d7                 * error code $1E \"Can't continue\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do string too complex error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SCER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1C,d7                 * error code $1C \"String too complex\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do string too long error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SLER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1A,d7                 * error code $1A \"String too long\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do type missmatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_TMER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$18,d7                 * error code $18 \"Type mismatch\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do illegal direct error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_IDER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$16,d7                 * error code $16 \"Illegal direct\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do divide by zero error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DZER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$14,d7                 * error code $14 \"Divide by zero\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do double dimension error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DDER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$12,d7                 * error code $12 \"Double dimension\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do array bounds error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ABER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$10,d7                 * error code $10 \"Array bounds\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do undefined satement error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_USER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0E,d7                 * error code $0E \"Undefined statement\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do out of memory error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OMER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0C,d7                 * error code $0C \"Out of memory\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do overflow error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OFER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0A,d7                 * error code $0A \"Overflow\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do function call error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FCER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,d7                 * error code $08 \"Function call\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do out of data error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ODER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$06,d7                 * error code $06 \"Out of DATA\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do return without gosub error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RGER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$04,d7                 * error code $04 \"RETURN without GOSUB\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SNER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$02,d7                 * error code $02 \"Syntax\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XERR                        * do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do next without for error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NFER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d7                 * error code $00 \"NEXT without FOR\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do error #d7, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_XERR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1491                        * flush stack & clear continue flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_BAER(pc),a1         * start of error message pointer table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get error message offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a1,d7.w),a0            * get error message address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EMSG(pc),a0         * point to \" Error\" message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1269"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1274                        * go do warm start if -ve # (was immediate mode)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else print line number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2953                        * print \" in line [LINE #]\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BASIC warm start entry point, wait for Basic command"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1274"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RMSG(pc),a0         * point to \"Ready\" message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * go do print string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* wait for Basic command - no \"Ready\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_127D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * set to -1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set current line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Breakf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set break flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Ibuffs(a3),a5           * set basic execute pointer ready for new line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_127E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1357                        * call for BASIC input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_127E                        * loop while null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* got to interpret input line now ...."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1295                        * branch if numeric character, handle new"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* BASIC line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* no line number so do immediate mode, a5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* points to the buffer start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_13A6                        * crunch keywords into Basic tokens"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* crunch from (a5), output to (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d2 is length, d1 trashed, d0 trashed,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a1 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15F6                        * go scan & interpret code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* handle a new BASIC line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1295"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GFPN                        * get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_13A6                        * crunch keywords into Basic tokens"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* crunch from (a5), output to (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns .. d2 is length,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d1 trashed, d0 trashed, a1 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get required line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SSLN                        * search BASIC for d1 line number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns pointer in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_12E6                        * branch if not found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* aroooogah! line # already exists! delete it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get start of block (next line pointer)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get end of block (start of functions)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"a1,d0                           * subtract start of block ( = bytes to move)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * /2 (word move)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy destination"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_12AE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_12B0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,LAB_12B0                     * decrement low count and loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,LAB_12AE                     * decrement high count and loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* start of functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Svarl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save start of variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* start of strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sarryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save start of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save end of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* got new line in buffer and no existing same #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_12E6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Ibuffs"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get byte from start of input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1325                        * if null line go do line chaining"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* got new line and it isn't empty line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get start of functions (end of block to move)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"8(a1,d2),a2                     * copy it, add line length and add room for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pointer and line number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* start of functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Svarl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save start of variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* start of strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sarryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save start of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save end of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Ememl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* copy end of mem to start of strings, clear"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy end of block to move"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"a0,d1                           * subtract start of block to move"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * /2 (word copy)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* correct for loop end on -1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_12FF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1301"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* decrement pointers and copy word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_1301                     * decrement & loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_12FF                     * decrement high count and loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* space is opened up, now copy the crunched line from the input buffer into the space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Ibuffs(a3),a1           * source is input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy destination"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * set to allow re-chaining"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set next line pointer (allow re-chaining)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save line number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d2                           * /2 (word copy)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* correct for loop end on -1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1303"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,LAB_1303                     * decrement & loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1325                        * go test for end of prog"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* rebuild chaining of BASIC lines"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_132E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* point to first code byte of line, there is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* always 1 byte + [EOL] as null entries are"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* deleted"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1330"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+                           * test byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1330                        * loop if not [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was [EOL] so get next line start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* past pad byte(s)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":"I.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* mask odd bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,a0                           * add back to ensure even"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save next line pointer to current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1325"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy pointer for this line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)                            * test pointer to next line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_132E                        * not end of program yet so we must"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* go and fix the pointers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1477                        * reset execution to start, clear variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and flush stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_127D                        * now we just wait for Basic command, no \"Ready\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* receive a line from the keyboard"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* character $08 as delete key, BACKSPACE on"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* standard keyboard"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_134B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#' ',d0                 * load [SPACE]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,d0                 * load [BACKSPACE]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$01"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* decrement the buffer index (delete)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1359                        * re-enter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print \"? \" and get BASIC input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return a0 pointing to the buffer start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_INLN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18E3                        * print \"?\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#' ',d0                 * load \" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* call for BASIC input (main entry point)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return a0 pointing to the buffer start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1357"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d1                 * clear buffer index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Ibuffs(a3),a0           * set buffer base pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1359"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_INPT(a3)                      * call scan input device"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1359                        * loop if no byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1359                        * loop if null byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$07,d0                 * compare with [BELL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1378                        * branch if [BELL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0D,d0                 * compare with [CR]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1866                        * do CR/LF exit if [CR]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * set flags on buffer index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1374                        * branch if not empty"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the next two lines ignore any non printing character and [SPACE] if the input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* is empty"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#' ',d0                 * compare with [SP]+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1359                        * if < ignore character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*##     CMP.b           #' '+1,d0                       * compare with [SP]+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*##     BCS.s           LAB_1359                        * if < ignore character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1374"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,d0                 * compare with [BACKSPACE]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_134B                        * go delete last character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1378"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#(Ibuffe-Ibuffs-1),d1   * compare character count with max-1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_138E                        * skip store & do [BELL] if buffer full"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* else store in buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$01"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* increment index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_137F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1359                        * always loop for next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* announce buffer full"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_138E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$07,d0                 * [BELL] character into d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_137F                        * go print the [BELL] but ignore input character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* copy a hex value without crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1392"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the byte to the output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the buffer save index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the buffer read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get a byte from the input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * if [EOL] go save it without crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#' ',d0                 * compare the character with \" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1392                        * if [SPACE] just go save it and get another"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * compare the character with \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13C6                        * if < \"0\" quit the hex save loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'9',d0                 * compare with \"9\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1392                        * if it is \"0\" to \"9\" save it and get another"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-33,d5                 * mask xx0x xxxx, ASCII upper case"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d5                           * mask the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'A',d5                 * compare with \"A\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13CC                        * if < \"A\" quit the hex save loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'F',d5                 * compare with \"F\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1392                        * if it is \"A\" to \"F\" save it and get another"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13CC                        * else continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* crunch keywords into Basic tokens"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* crunch from (a5), output to (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 is length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* a1 trashed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this is the improved BASIC crunch routine and is 10 to 100 times faster than the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* old list search"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13A6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear the read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear the save index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Oquote"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear the open quote/DATA flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13AC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get byte from input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * if null save byte then continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'_',d0                 * compare with \"_\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * if >= \"_\" save byte then continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'<',d0                 * compare with \"<\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13CC                        * if >= \"<\" go crunch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * compare with \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * if >= \"0\" save byte then continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Asrch"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save buffer byte as search character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d0                 * is it quote character?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1410                        * branch if so (copy quoted string)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'$',d0                 * is it the hex value character?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1392                        * if so go copy a hex value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13C6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'*',d0                 * compare with \"*\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * if <= \"*\" save byte then continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* crunch rest"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13CC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Oquote"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* test open quote/DATA token flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * branch if b6 of Oquote set (was DATA)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* go save byte then continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2A,d0                 * normalise byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *2 makes word offset (high byte=$00)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_CHRT(pc),a1         * get keyword offset table address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get offset into keyword table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_141F                        * branch if no keywords for character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_STAR(pc),a1         * get keyword table address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add keyword offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d3                  * clear index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13D6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment table index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get byte from table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13D8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EA                        * branch if token, save token and continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a5,d4.w),d0            * compare byte from input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13D6                        * loop if character match"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1417                        * branch if no match"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13EA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* update read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13EC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save byte to output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment buffer save index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment buffer read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * set flags"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_142A                        * branch if was null [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 holds token or byte here"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3A,d0                 * subtract \":\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13FF                        * branch if it was \":\" (is now $00)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 now holds token-$3A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#(TK_DATA-$3A),d0               * compare with DATA token - $3A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1401                        * branch if not DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* token was : or DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_13FF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Oquote"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save token-$3A ($00 for \":\", TK_DATA-$3A for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* DATA)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1401"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#(TK_REM-$3A),d0                * subtract REM token offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_13AC                        * If wasn't REM then go crunch rest of line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Asrch"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* else was REM so set search for [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* loop for REM, \"...\" etc."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1408"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get byte from input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * branch if null [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Asrch(a3),d0            * compare with stored character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * branch if match (end quote, REM, :, or DATA)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* entry for copy string in quotes, don't crunch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1410"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save byte to output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment buffer save index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment buffer read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1408                        * loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* not found keyword this go so find the end of this word in the table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1417"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* reset read pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_141B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment keyword table pointer, flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* unchanged"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get keyword table byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_141B                        * if not end of keyword go do next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment keyword table pointer flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* unchanged"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get keyword table byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13D8                        * go test next word if not zero byte (table end)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* reached end of table with no match"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_141F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* restore byte from input buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_13EC                        * go save byte in output and continue crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* reached [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_142A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * ensure longword clear"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * test odd bit (fastest)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_142C                        * branch if no bytes to fill"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* clear next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment buffer save index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_142C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* clear next line pointer, EOT in immediate mode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* search Basic for d1 line number from start of mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SSLN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get start of program mem"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCLN                        * go search for required line from a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_145F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* search Basic for d1 line number from a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns Cb=0 if found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns a0 pointer to found or next higher (not found) line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SCLN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next line pointer and point to line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_145E                        * is end marker so we're done, do 'no line' exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0),d1                 * compare this line # with required line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGT.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_145F                        * loop if required # > this #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust pointer, flags not changed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_145E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust pointer, flags not changed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* make end program found = -1, set carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform NEW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NEW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_005                 * exit if not end of statement (do syntax error)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1463"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* point to start of program memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* clear first line, next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set start of functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* reset execution to start, clear variables and flush stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1477"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* reset BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 (as end of previous line)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* \"CLEAR\" command gets here"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_147A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Ememl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* save end of mem as bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get start of functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Svarl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* start of variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* start of strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sarryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set start of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set end of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1480"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * set Zb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"ccnull"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear get byte countdown"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RESTORE                     * perform RESTORE command"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* flush stack & clear continue flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1491"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"des_sk(a3),a4           * reset descriptor stack pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"ram_base(a3),sp         * set stack to RAM start + 1k, flush stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear continue pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sufnxf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear subscript/FNX flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_005"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform CLEAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CLEAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_147A                        * if no following byte go do \"CLEAR\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* was following byte (go do syntax error)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LIST [n][-m]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LIST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_14BD                        * branch if next character numeric (LIST n...)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * set end to $FFFFFFFF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save to Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * set start to $00000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_14C0                        * branch if next character [NULL] (LIST)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_MINUS,d0            * compare with token for -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_005                 * exit if not - (LIST -m)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* LIST [[n]-[m]] this sets the n, if present,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* as the start and end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_14BD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GFPN                        * get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_14C0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SSLN                        * search BASIC for d1 line number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (pointer in a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_14D4                        * branch if no more characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* this bit checks the - is present"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_MINUS,d0            * compare with token for -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_005                 * return if not \"-\" (will be Syntax error)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * set end to $FFFFFFFF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* LIST [n]-[m] the - was there so see if"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* there is an m to set as the end value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_14D4                        * branch if was [NULL] (LIST n-)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GFPN                        * get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_14D4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Oquote"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear open quote flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_005                 * if null all done so exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1629                        * do CRTL-C check vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get this line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Itemp(a3),d0            * compare end line # with this line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BHI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_005                 * if this line greater all done so exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_14E2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_295E                        * print d0 as unsigned integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * space is the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_150C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d0                 * was it \" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1519                        * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* we're either entering or leaving quotes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$FF,Oquote(a3)         * toggle open quote flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1519"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte and increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_152E                        * branch if not [EOL] (go print)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy to set flags"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_14D4                        * go do next line if not [EOT]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_152E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_150C                        * just go print it if not token byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else it was a token byte so maybe uncrunch it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Oquote(a3)                      * test the open quote flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_150C                        * just go print character if open quote set"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else uncrunch BASIC token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_KEYT(pc),a2         * get keyword table address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7F,d1                 * mask into d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * copy and mask token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LSL"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#2,d1                           * *4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a2,d1.w),a2            * get keyword entry address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte from keyword table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the first character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get remaining length byte from keyword table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1519                        * if -ve done so go get next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get offset to rest"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_STAR(pc),a2         * get keyword table address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a2,d0.w),a2            * get address of rest"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1540"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte from keyword table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_1540                     * decrement and loop if more to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1519                        * go get next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_LET                 * go do LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get the loop variable pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sstrl(a3),d0            * compare it with the end of vars memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if greater go do type mismatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* test for not less than the start of variables memory if needed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       CMP.l           Svarl(a3),d0            * compare it with the start of variables memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       BLT             LAB_TMER                        * if not variables memory do type mismatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       MOVEQ           #28,d0                  * we need 28 bytes !"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       BSR.s           LAB_1212                        * check room on stack for d0 bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNBS                        * scan for next BASIC statement ([:] or [EOL])"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns a0 as pointer to [:] or [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* push onto stack (and dump the return address)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push current line onto stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_TO-$100,d0          * set \"TO\" token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCCA                        * scan for CHR$(d0) else syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CTNM                        * check if source is numeric, else type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push the FOR variable data type onto stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression and check is numeric else"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push TO value mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push TO value exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set default STEP size mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set default STEP size exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_STEP,d0                     * compare with STEP token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_15B3                        * jump if not \"STEP\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was STEP token so ...."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_15B3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push STEP value mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push STEP value exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push variable pointer for FOR/NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"#TK_FOR"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* push FOR token on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_15C2                        * go do interpreter inner loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_15DC"
    },
    {
        "type":"whitespace",
        "value":"                                                "
    },
    {
        "type":"comment",
        "value":"* have reached [EOL]+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * and make line start address even"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,a5                           * add to BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1274                        * if null go to immediate mode, no \"BREAK\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* message (was immediate or [EOT] marker)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save (new) current line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_15F6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * get BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_15FF                        * go interpret BASIC code from (a5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* interpreter inner loop (re)entry point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_15C2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1629                        * do CRTL-C check vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Clinel(a3)                      * test current line #, is -ve for immediate mode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_15D1                        * branch if immediate mode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save BASIC execute pointer as continue pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_15D1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get this byte & increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_15DC                        * loop if [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3A,d0                 * compare with \":\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_15F6                        * loop if was statement separator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * else syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* interpret BASIC code from (a5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_15FF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"RTS_006                 * exit if zero [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1602"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* normalise token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_LET                 * if not token, go do implied LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#(TK_TAB-$80),d0                * compare normalised token with TAB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * branch if d0>=TAB, syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* only tokens before TAB can start a statement"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXT.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * byte to word (clear high byte)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CTBL(pc),a0         * get vector table base address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get offset to vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a0,d0.w)                       * push vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get following byte & execute vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* CTRL-C check jump. this is called as a subroutine but exits back via a jump if a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* key press is detected."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1629"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JMP"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_CTLC(a3)                      * ctrl c check vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if there was a key press it gets back here ....."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1636"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$03,d0                 * compare with CTRL-C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_163B                        * STOP if was CTRL-C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1639"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform END"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_END"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1639                        * exit if something follows STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Breakf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear break flag, indicate program end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1639                        * exit if something follows STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_163B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Ibuffe(a3),a1           * get buffer end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare execute address with buffer end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_164F                        * branch if BASIC pointer is in buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* can't continue in immediate mode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save BASIC execute pointer as continue pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1647"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Blinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* save break line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_164F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* dump return address, don't return to execute"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Breakf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get break flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1274                        * go do warm start if was program end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_BMSG(pc),a0         * point to \"Break\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1269                        * print \"Break\" and do warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform RESTORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RESTORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* copy start of memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1624                        * branch if next character null (RESTORE)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GFPN                        * get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Clinel(a3),d1           * compare current line # with required line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GSCH                        * branch if >= (start search from beginning)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RESs"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+                           * test next byte & increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_RESs                        * loop if not EOL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * mask odd bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,a0                           * add pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* search for line in Itemp from (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GSCH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCLN                        * search for d1 line number from a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns Cb=0 if found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_USER                        * go do \"Undefined statement\" error if not found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1624"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"-(a0)                           * decrement pointer (faster)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save DATA pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_006"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform NULL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NULL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTBY                        * get byte parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Nullct"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save new NULL count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform CONT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CONT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if following byte exit to do syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Clinel(a3)                      * test current line #, is -ve for immediate mode"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CCER                        * if running go do can't continue error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get continue pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CCER                        * go do can't continue error if we can't"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* we can continue so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save continue pointer as BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Blinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set break line as current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform RUN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RUN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_RUNn                        * if following byte do RUN n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1477                        * execution to start, clear vars & flush stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save as continue pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15C2                        * go do interpreter inner loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (can't RTS, we flushed the stack!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RUNn"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_147A                        * go do \"CLEAR\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_16B0                        * get n and do GOTO n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       MOVE.l  #$05,d0                 * need 5 bytes for DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       BSR.s           LAB_1212                        * check room on stack for A bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push BASIC execute pointer on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push current line on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"#TK_DO"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* push token for DO on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15C2(pc)            * set return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory & return to interpreter inner loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       MOVE.l  #10,d0                  * need 10 bytes for GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       BSR.s           LAB_1212                        * check room on stack for d0 bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"#TK_GOSUB"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* push token for GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_16B0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15C2(pc)            * return to interpreter inner loop after GOTO n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this PEA is needed because either we just cleared the stack and have nowhere to return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* to or, in the case of GOSUB, we have just dropped a load on the stack and the address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* we whould have returned to is buried. This burried return address will be unstacked by"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the corresponding RETURN command"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GFPN                        * get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get start of memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Clinel(a3),d1           * compare current line with wanted #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_16D0                        * branch if current # => wanted #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GOTs"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+                           * test next byte & increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GOTs                        * loop if not EOL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* past pad byte(s)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * mask odd bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,a0                           * add to pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_16D0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCLN                        * search for d1 line number from a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns Cb=0 if found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_USER                        * if carry set go do \"Undefined statement\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy to basic execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save as continue pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LOOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_DO,4(sp)            * compare token on stack with DO token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_LDER                        * branch if no matching DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy following token (byte)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LoopAlways                      * if no following token loop forever"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#':',d7                 * compare with \":\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LoopAlways                      * if no following token loop forever"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_UNTIL,d7            * subtract token for UNTIL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"DoRest                  * branch if was UNTIL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not WHILE go do syntax error & warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* only if the token was WHILE will this fail"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d7                  * set invert result longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"DoRest"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"DoCmp                           * if = 0 go do straight compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* else set all bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"DoCmp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d7,FAC1_e(a3)           * EOR with invert byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LoopDone                        * if <> 0 clear stack & back to interpreter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* loop condition wasn't met so do it again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LoopAlways"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* copy DO current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"10"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* save BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15C2(pc),a0         * get return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* dump the call to this routine and set the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory and return to interpreter inner"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* clear stack & back to interpreter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LoopDone"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"14(sp),sp                       * dump structure and call from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_DATA                        * go perform DATA (find : or [EOL])"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_007                 * exit if following token to allow syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_GOSUB,4(sp)         * compare token from stack with GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RGER                        * do RETURN without GOSUB error if no matching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* dump calling address & token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* pull current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now do perform \"DATA\" statement as we could be"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returning into the middle of an ON <var> GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* n,m,p,q line (the return address used by the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* DATA statement is the one pushed before the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* GOSUB was executed!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SNBS                        * scan for next BASIC statement ([:] or [EOL])"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns a0 as pointer to [:] or [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* skip rest of statement"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_007"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan for next BASIC statement ([:] or [EOL])"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns a0 as pointer to [:] or [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SNBS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d1                 * set string quote character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3A,d2                 * set look for character = \":\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_172D                        * go do search"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_172C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * compare with \":\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_007a                        * exit if found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * compare with '\"'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1725                        * if found go search for [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_172D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_172C                        * loop if not null [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_007a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* correct pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1723"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * compare with '\"'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_172D                        * if found go search for \":\" or [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1725"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1723                        * loop if not null [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_007a                        * correct pointer & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_THEN,d0                     * compare with THEN token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_174B                        * if it was THEN then continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* wasn't IF .. THEN so must be IF .. GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_GOTO,d0                     * compare with GOTO token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not GOTO token do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was GOTO so check for GOTO <n>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save the execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * scan memory, test for a numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* restore the execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not numeric do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_174B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_174E                        * if result was zero go look for an ELSE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GOTO                        * if numeric do GOTO n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a GOTO <n> will never return to the IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* statement so there is no need to return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* to this code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_RETURN,d0           * compare with RETURN token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1602                        * if RETURN then interpret BASIC code from (a5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and don't return here"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15FF                        * else interpret BASIC code from (a5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the IF was executed and there may be a following ELSE so the code needs to return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* here to check and ignore the ELSE if present"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get the next basic byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_ELSE,d0                     * compare it with the token for ELSE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DATA                        * if ELSE ignore the following statement"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* there was no ELSE so continue execution of IF <expr> THEN <stat> [: <stat>]. any"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* following ELSE will, correctly, cause a syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* else return to interpreter inner loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform ELSE after IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_174E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* faster increment past THEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_ELSE,d3                     * set search for ELSE token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_IF,d4                       * set search for IF token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d5                           * clear the nesting depth"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1750"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next BASIC byte & increment ptr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1754                        * if EOL correct the pointer and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d0                           * compare with \"IF\" token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1752                        * skip if not nested IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else increment the nesting depth .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1750                        * .. and continue looking"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1752"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * compare with ELSE token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1750                        * if not ELSE continue looking"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1756"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d5,LAB_1750                     * loop if still nested"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* found the matching ELSE, now do <{n|statement}>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GOTO                        * if numeric do GOTO n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* code will return to the interpreter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* at the tail end of the GOTO <n>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15FF                        * else interpret BASIC code from (a5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* code will return to the interpreter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* at the tail end of the <statement>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform REM, skip (rest of) line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_REM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a5)+                           * test byte & increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_REM                 * loop if not EOL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1754"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* correct the execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform ON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTBY                        * get byte parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * restore BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push GOTO/GOSUB token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_GOSUB,d0            * compare with GOSUB token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_176C                        * branch if GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_GOTO,d0                     * compare with GOTO token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not GOTO do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* next character was GOTO or GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_176C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement index (byte value)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1773                        * branch if not zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull GOTO/GOSUB token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1602                        * go execute it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1773"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GFPN                        * get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (skip this n)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2C,d0                 * compare next character with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_176C                        * loop if \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull GOTO/GOSUB token (run out of options)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* and exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get fixed-point number into temp integer & d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* interpret number from (a5), leave (a5) pointing to byte after #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GFPN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d1                 * clear integer register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory, Cb=1 if \"0\"-\"9\", & get byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1786                        * return if carry clear, chr was not \"0\"-\"9\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1785"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy integer register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * *2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if overflow do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * *4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if overflow do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * *1 + *4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if overflow do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * *10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if overflow do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$30,d0                 * subtract $30 from byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * add to integer register, the top 24 bits are"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* always clear"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BVS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if overflow do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* this makes the maximum line number 2147483647"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1785                        * loop for next character if \"0\"-\"9\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1786"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8180"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set -1 sign/exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_17B7                        * go do DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set 1 sign/exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_17B7                        * go do INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was \",\" so another INCR variable to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_17B8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment and scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_17B7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you want a non existant variable to return a null value then set the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_INCT                        * if variable not found skip the inc/dec"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string do \"Type mismatch\" error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_INCI                        * go do integer INC/DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save var address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_UFAC                        * unpack memory (a0) into FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set FAC2 mantissa for 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* move exponent & sign to d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* move exponent & sign to FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* make sign compare = FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * make sign compare (FAC1_s EOR FAC2_s)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * add FAC2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PFAC                        * pack FAC1 into variable (Lvarpl)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_INCT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$2C"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_17B8                        * continue if \",\" (another variable to do)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else dump sign & exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_INCI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"1(sp)                           * test sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_DECI                        * branch if DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* increment variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_INCT                        * go scan for more"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DECI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* decrement variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_INCT                        * go scan for more"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SVAR                        * search for or create a variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return the variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save variable address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push var data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_EQUAL-$100,d0               * get = token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCCA                        * scan for CHR$(d0), else do syntax error/warm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy expression data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* pop variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROL"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * set carry if expression type = string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CKTM                        * type match check, set C for string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PFAC                        * if number pack FAC1 into variable Lvarpl & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* string LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_17D5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get pointer to variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_17D6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sstorl(a3),a1           * compare string memory start with string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1811                        * if it was in program memory assign the value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sfncl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* compare functions start with descriptor"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1811                        * branch if >= (string is on stack)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* string is variable$ make space and copy string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1810"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_20C9                        * copy string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get descriptor pointer back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* clean stack & assign value to string variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1811"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* is string on the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1813                        * skip pop if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$06"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* else update stack pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1813"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save pointer to variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* save length to variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_008"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform GET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SVAR                        * search for or create a variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return the variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save variable address as GET variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GETS                        * go get string character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was numeric get"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"INGET                           * get input byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1FD0                        * convert d0 to unsigned byte in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PFAC                        * pack FAC1 into variable (Lvarpl) & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GETS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d1                 * assume no byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* assume null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"INGET                           * get input byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_NoSt                        * branch if no byte received"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$01,d1                 * string is single byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return a0 = pointer, other registers unchanged"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save byte in string (byte IS string!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NoSt"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push string on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_17D5                        * do string LET & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1829"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C6                        * print string from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_182C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * if nothing following just print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1831"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_TAB,d0                      * compare with TAB( token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18A2                        * go do TAB/SPC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_SPC,d0                      * compare with SPC( token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18A2                        * go do TAB/SPC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * compare with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_188B                        * go do move to next TAB mark"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#';',d0                 * compare with \";\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18BD                        * if \";\" continue with PRINT processing"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1829                        * branch if string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"** replace the two lines above with this code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**      MOVE.b  Dtypef(a3),d0           * get data type flag, $80=string, $00=numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**      BMI.s           LAB_1829                        * branch if string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2970                        * convert FAC1 to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_20AE                        * print \" terminated string to FAC1 stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* don't check fit if terminal width byte is zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TWidth"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get terminal width byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_185E                        * skip check if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"7(a4),d0                        * subtract string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TPos(a3),d0                     * subtract terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_185E                        * branch if less than terminal width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * else print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_185E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18C6                        * print string from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_182C                        * always go continue processing line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* CR/LF return to BASIC from BASIC input handler"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* leaves a0 pointing to the buffer start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1866"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* null terminate input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CRLF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0D,d0                 * load [CR]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0A,d0                 * load [LF]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_188B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* get terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Iclim(a3),d2            * compare with input column limit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1898                        * branch if less than Iclim"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * else print CR/LF (next line)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18BD                        * continue with PRINT processing"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1898"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d2           * subtract TAB size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1898                        * loop if result was >= 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * twos complement it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18B7                        * print d2 spaces"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do TAB/SPC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18A2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SGBY                        * increment and get byte, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * get basic byte back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$29,d0                 * is next character \")\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get token back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_TAB,d0                      * was it TAB ?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18B7                        * branch if not (was SPC)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* calculate TAB offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TPos(a3),d2                     * subtract terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18BD                        * branch if result was <= 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* can't TAB backwards or already there"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* print d2.b spaces"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18B7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* make d0 = $FF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * mask for byte only"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18BD                        * branch if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * load \" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18B8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,LAB_18B8                     * decrement count and loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* continue with PRINT processing"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18BD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1831                        * if byte continue executing PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* exit if nothing more to print"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print null terminated string from a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18C3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_20AE                        * print terminated string to FAC1/stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print string from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18C6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack or from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns with d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_009                 * exit (RTS) if null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy length & set Z flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 for BF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18CD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte from string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_PRNA                        * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_18CD                     * decrement count and loop if not done yet"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_009"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print \"?\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18E3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3F,d0                 * load \"?\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print character in d0, includes the null handler and infinite line length code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* changes no registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PRNA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * compare with \" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18F9                        * branch if less, non printing character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* don't check fit if terminal width byte is zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TWidth"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get terminal width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18F0                        * branch if not zero (not infinite length)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* is \"infinite line\" so check TAB position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* get position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d1           * subtract TAB size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18F7                        * skip reset if different"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* else reset position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18F7                        * go print character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18F0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TPos(a3),d1                     * compare with terminal character position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_18F7                        * branch if not at end of line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CRLF                        * else print CR/LF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18F7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$01"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* increment terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_18F9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_OUTP(a3)                      * output byte via output vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0D,d0                 * compare with [CR]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_188A                        * branch if not [CR]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else print nullct nulls after the [CR]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d1                 * clear d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Nullct"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get null count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1886                        * branch if no nulls"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d0                 * load [NULL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1880"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_OUTP(a3)                      * go print the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_1880                     * decrement count and loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0D,d0                 * restore the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1886"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* clear terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_188A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* handle bad input data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1904"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Imode(a3)                       * test input mode flag, $00=INPUT, $98=READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1913                        * branch if INPUT (go do redo)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dlinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* save DATA line as current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * do type mismatch error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* mode was INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1913"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_REDO(pc),a0         * point to redo message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Cpntrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save continue pointer as BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CKRN                        * check not direct (back here if ok)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'\"',d0                 * compare the next byte with open quote"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1934                        * if no prompt string just go get the input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BC1                        * print \"...\" string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#';',d0                 * set the search character to \";\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCCA                        * scan for CHR$(d0), else do syntax error/warm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C6                        * print string from Sutill/Sutilh"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* finished the prompt, now read the data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1934"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_INLN                        * print \"? \" and get BASIC input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return a0 pointing to the buffer start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * flag INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you don't want a null response to INPUT to break the program then set the nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1953                        * go handle the input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you do want a null response to INPUT to break the program then leave the nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file set to zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifeq"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)                            * test first byte from buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1953                        * branch if not null input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1647                        * go do BREAK exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Dptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the DATA pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$98-$100,d0            * flag READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1953"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Imode"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set input mode flag, $00=INPUT, $98=READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Rdptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save READ pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* READ or INPUT the next variable from list"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_195B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SVAR                        * search for or create a variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return the variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save variable address as LET variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1961"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Rdptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set READ pointer as BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1986                        * if not null go get the value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* the pointer was to a null entry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Imode(a3)                       * test input mode flag, $00=INPUT, $98=READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_19DD                        * branch if READ (go find the next statement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else the mode was INPUT so get more"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18E3                        * print a \"?\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_INLN                        * print \"? \" and get BASIC input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return a0 pointing to the buffer start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you don't want a null response to INPUT to break the program then set the nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Rdptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the READ pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1961                        * go handle the input"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you do want a null response to INPUT to break the program then leave the nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file set to zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifeq"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"nobrk"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)                            * test the first byte from the buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1984                        * if not null input go handle it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1647                        * else go do the BREAK exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1984"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set the execute pointer to the buffer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1985"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1986"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_19B0                        * branch if numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else get string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save search character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d0                 * was it \" ?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1999                        * branch if so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#':',d2                 * set new search character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * other search character is \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1999"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set second search character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* BASIC execute pointer is source"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_20B4                        * print d2/d3 terminated string to FAC1 stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d2 = Srchc, d3 = Asrch, a0 is source"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy end of string to BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_17D5                        * go do string LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_19B6                        * go check string terminator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* get numeric INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_19B0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2887                        * get FAC1 from string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* restore variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PFAC                        * pack FAC1 into (Lvarpl)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_19B6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_19C2                        * branch if null (last entry)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * else compare with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1904                        * if not \",\" go handle bad input data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else was \",\" so point to next chr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* got good input data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_19C2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Rdptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the read pointer for now"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore the execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan the memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1A03                        * if null go do extra ignored message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_195B(pc)            * set return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C01                        * scan for \",\" else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* then go INPUT next variable from list"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* find next DATA statement or do \"Out of Data\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_19DD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNBS                        * scan for next BASIC statement ([:] or [EOL])"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns a0 as pointer to [:] or [EOL]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add index, now = pointer to [EOL]/[EOS]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* pointer to next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#':',d0                 * was it statement end?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_19F6                        * branch if [:]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was [EOL] so find next line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* past pad byte(s)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * mask odd bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,a5                           * add pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next line pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ODER                        * branch if end of program"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dlinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save current DATA line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_19F6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_DATA,d0                     * compare with \"DATA\" token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1985                        * was \"DATA\" so go do next READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_19DD                        * go find next statement if not \"DATA\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* end of INPUT/READ routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1A03"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Rdptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get temp READ pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Imode(a3)                       * get input mode flag, $00=INPUT, $98=READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1A0E                        * branch if INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dptrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* else save temp READ pointer as DATA pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* we were getting INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1A0E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)                            * test next byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1A1B                        * error if not end of INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* user typed too much"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1A1B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IMSG(pc),a0         * point to extra ignored message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string from memory & RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1A46                        * branch if NEXT var"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* back past return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_FOR,(sp)            * is FOR token on stack?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_NFER                        * if not do NEXT without FOR err/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get stacked FOR variable pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_11BD                        * branch always (no variable to search for)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* NEXT var"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1A46"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* back past return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"#TK_FOR"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* set for FOR token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1C,d1                 * set for FOR use size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_11A6                        * enter loop for next variable search"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_11A5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add FOR stack use size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_11A6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(sp),d0                 * is FOR token on stack?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_NFER                        * if not found do NEXT without FOR error and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was FOR token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* compare var pointer with stacked var pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_11A5                        * loop if no match found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_11BD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* get STEP value exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* get STEP value mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"18"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* restore FOR variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C19                        * check type and unpack (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* save FAC2 sign as sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * EOR to create sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save variable pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * add STEP value to FOR variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"18"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* restore FOR variable data type (again)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_PFAC                        * pack FAC1 into FOR variable (Lvarpl)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"12"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* get TO value exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"14"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* get TO value mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* save FAC2 sign as sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * EOR to create sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27FA                        * compare FAC1 with FAC2 (TO value)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get STEP value exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * EOR compare result with STEP exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test for ="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1A90                        * branch if = (loop INcomplete)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1A9B                        * branch if > (loop complete)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* loop back and do it all again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1A90"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"20"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* reset current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"24"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* reset BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15C2                        * go do interpreter inner loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* loop complete so carry on"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1A9B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"28"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* add 28 to dump FOR structure"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2C,d0                 * compare with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_15C2                        * if not \",\" go do interpreter inner loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was \",\" so another NEXT variable to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * else increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1A46                        * do NEXT (var)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate expression & check is numeric, else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVNM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check if source is numeric, else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CTNM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * required type is numeric so clear carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* type match check, set C for string, clear C for numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CKTM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* test data type flag, don't change carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1ABA                        * branch if data type is string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else data type was numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if required type is string do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* data type was string, now check required type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1ABA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if required type is numeric do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this routine evaluates any type of expression. first it pushes an end marker so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* it knows when the expression has been evaluated, this is a precedence value of zero."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* next the first value is evaluated, this can be an in line value, either numeric or"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* string, a variable or array element of any type, a function or even an expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* in parenthesis. this value is kept in FAC_1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* after the value is evaluated a test is made on the next BASIC program byte, if it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* is a comparrison operator i.e. \"<\", \"=\" or \">\", then the corresponding bit is set"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* in the comparison evaluation flag. this test loops until no more comparrison operators"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* are found or more than one of any type is found. in the last case an error is generated"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVEX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVEZ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear precedence word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear the data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1ACD                        * enter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get vector, set up operator then continue evaluation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B43"
    },
    {
        "type":"whitespace",
        "value":"                                                "
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OPPT(pc),a0         * point to operator vector table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get vector offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a0,d0.w)                       * push vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push sign and exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"comp_f"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push comparison evaluation flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get precedence value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1ACD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push precedence value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAL                        * get value from line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"comp_f"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1ADB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1ADE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_GT,d0                       * subtract token for > (lowest compare function)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1AFA                        * branch if < TK_GT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$03,d0                 * compare with \">\" to \"<\" tokens"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1AE0                        * branch if <= TK_SGN (is compare function)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"comp_f(a3)                      * test compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B2A                        * branch if compare function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1B78                        * go do functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was token for > = or < (d0 = 0, 1 or 2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1AE0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * set to 0000 0001"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASL.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * 1 if >, 2 if =, 4 if <"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"comp_f"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy old compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,comp_f(a3)           * EOR in this compare function bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"comp_f(a3),d0           * compare old with new compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if new <= old comp_f do syntax error and warm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* start, there was more than one <, = or >"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1ADE                        * go do next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* token is < \">\" or > \"<\" tokens"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1AFA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"comp_f(a3)                      * test compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B2A                        * branch if compare function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was < TK_GT so is operator or lower"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"TK_GT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TK_PLUS"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* add # of operators (+ - * / ^ AND OR EOR)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B78                        * branch if < + operator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B0B                        * branch if not + token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_224D                        * type is string & token was +"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B0B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy to index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B13"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull previous precedence"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OPPT(pc),a0         * set pointer to operator table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0,d1.w),d0            * compare with this opperator precedence"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B7D                        * branch if previous precedence (d0) >="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CTNM                        * check if source is numeric, else type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B1C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save precedence"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B1D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1B43                        * get vector, set-up operator and continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* evaluation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore precedence"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"prstk"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get stacked function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B3C                        * branch if stacked values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy precedence (set flags)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B7B                        * exit if done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B86                        * else pop FAC2 & return (do function)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was compare function (< = >)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B2A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get data type flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"comp_f"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * string bit flag into X bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"X.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* shift compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear data type flag, $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"comp_f"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save new compare function flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#(TK_LT-TK_PLUS)*4,d1   * set offset to last operator entry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B13                        * branch always"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B3C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OPPT(pc),a0         * point to function vector table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0,d1.w),d0            * compare with this opperator precedence"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B86                        * branch if d0 >=, pop FAC2 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B1C                        * branch always"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B78"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * flag all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull precedence word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B7B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B9D                        * exit if done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B7D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$64,d0                 * compare previous precedence with $64"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1B84                        * branch if was $64 (< function can be string)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CTNM                        * check if source is numeric, else type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B84"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"prstk"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save current operator index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pop FAC2 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B86"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pop comparison evaluation flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy comparison evaluation flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * shift out comparison evaluation lowest bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Cflag"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save comparison evaluation flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* pop exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* pop mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy FAC2 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * EOR FAC1 sign and set sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * type bit into X and C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1B9D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get a value from the BASIC line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GVAL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2887                        * if numeric get FAC1 from string & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BD0                        * if -ve go test token values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else it is either a string, number, variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* or (<expr>)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'$',d0                 * compare with \"$\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2887                        * if \"$\" get hex number from string & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'%',d0                 * else compare with \"%\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2887                        * if \"%\" get binary number from string & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2E,d0                 * compare with \".\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2887                        * if so get FAC1 from string and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (e.g. .123)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* wasn't a number so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d0                 * compare with \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1BF3                        * if not open quote it must be a variable or"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* open bracket"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was open quote so get the enclosed string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print \"...\" string to string stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1BC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* increment BASIC execute pointer (past \")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* fastest/shortest method"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy basic execute pointer (string start)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_20AE                        * print \" terminated string to stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* restore BASIC execute pointer from temp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get value from line .. continued"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* wasn't any sort of number so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1BF3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'(',d0                 * compare with \"(\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1C18                        * if not \"(\" get (var) and return value in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and $ flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate expression within parentheses"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1BF7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEZ                        * evaluate expression (no decrement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* all the 'scan for' routines return the character after the sought character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan for \")\", else do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1BFB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$29,d0                 * load d0 with \")\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCCA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan for \",\" and get byte, else do Syntax error then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SCGB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTBY(pc)            * return address is to get byte parameter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan for \",\", else do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C01"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2C,d0                 * load d0 with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan for CHR$(d0) , else do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SCCA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a5)+,d0                        * check next byte is = d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * if so go get next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BASIC increment and scan memory routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_IGBY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte & increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan memory routine, exit with Cb = 1 if numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* also skips any spaces encountered"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GBYT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * compare with \" \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * if \" \" go do next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* test current BASIC byte, exit with Cb = 1 if numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_ELSE,d0                     * compare with the token for ELSE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_001                 * exit if >= (not numeric, carry clear)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3A,d0                 * compare with \":\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_001                 * exit if >= (not numeric, carry clear)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$D0,d6                 * set -\"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d0                           * add -\"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d0                           * subtract -\"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_001"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"* carry set if byte = \"0\"-\"9\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set-up for - operator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C11"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CTNM                        * check if source is numeric, else type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"TK_GT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TK_PLUS"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"comment",
        "value":"*4,d1           * set offset from base to - operator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C13"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"4(sp),sp                        * dump GVAL return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1B1D                        * continue evaluating expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* variable name set-up"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get (var), return value in FAC_1 & data type flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C18"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you want a non existant variable to return a null value then set the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1C19                        * if it exists return it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D96(pc),a0         * else return a null descriptor/pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return existing variable value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C19"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_UFAC                        * if float unpack memory (a0) into FAC1 and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1C1A                        * if integer unpack memory (a0) into FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* else save descriptor pointer in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C1A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get integer value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get value from line .. continued"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do tokens"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1BD0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_MINUS,d0            * compare with token for -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1C11                        * branch if - token (do set-up for - operator)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* wasn't -123 so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_PLUS,d0                     * compare with token for +"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAL                        * branch if + token (+n = n so ignore leading +)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_NOT,d0                      * compare with token for NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1BE7                        * branch if not token for NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was NOT token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"TK_EQUAL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TK_PLUS"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"comment",
        "value":"*4,d1        * offset to NOT function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1C13                        * do set-up for function then execute"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* wasn't +, - or NOT so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1BE7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_FN,d0                       * compare with token for FN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_201E                        * if FN go evaluate FNx"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* wasn't +, -, NOT or FN so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_SGN,d0                      * compare with token for SGN & normalise"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if < SGN token then do syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get value from line .. continued"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* only functions left so set up function references"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* new for V2.0+ this replaces a lot of IF .. THEN .. ELSEIF .. THEN .. that was needed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* to process function calls. now the function vector is computed and pushed on the stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* and the preprocess offset is read. if the preprocess offset is non zero then the vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* is calculated and the routine called, if not this routine just does RTS. whichever"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* happens the RTS at the end of this routine, or the preprocess routine calls, the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* function code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this also removes some less than elegant code that was used to bypass type checking"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* for functions that returned strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7F,d0                 * mask byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *2 (2 bytes per function offset)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FTBL(pc),a0         * pointer to functions vector table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get function vector offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a0,d1.w)                       * push function vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FTPP(pc),a0         * pointer to functions preprocess vector table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get function preprocess vector offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1C2A                        * no preprocess vector so go do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a0,d0.w),a0            * get function preprocess vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JMP"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a0)                            * go do preprocess routine then function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* process string expression in parenthesis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PPFS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BF7                        * process expression in parenthesis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if numeric do Type missmatch Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1C2A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* else do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* process numeric expression in parenthesis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PPFN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BF7                        * process expression in parenthesis"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string do Type missmatch Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* else do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set numeric data type and increment BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PPBI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear data type flag, $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get next BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* process string for LEFT$, RIGHT$ or MID$"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LRMS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEZ                        * evaluate (should be string) expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if type is not string do type mismatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d2                 * compare with comma"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not \",\" go do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTWO                        * get word parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* process numeric expression(s) for BIN$ or HEX$"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BHSS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEZ                        * evaluate expression (no decrement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string do Type missmatch Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2831                        * convert FAC1 floating to fixed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * set default to no leading \"0\"s"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d2                 * compare with comma"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_BHCB                        * if not \",\" go check close bracket"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* copy number to stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTBY                        * get byte value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy leading 0s #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore number from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BHCB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#')',d2                 * compare with close bracket"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not \")\" do Syntax Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* go do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GetFirst                        * get two values for OR, AND or EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first in d0, and Itemp, second in d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * EOR values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GetFirst                        * get two values for OR, AND or EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first in d0, and Itemp, second in d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * do OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GetFirst                        * get two values for OR, AND or EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first in d0, and Itemp, second in d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * do AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get two values for OR, AND, EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* first in d0, second in d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"GetFirst"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression (no sign check)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy second value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_279B                        * copy FAC2 to FAC1, get first value in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression (no sign check)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EQUAL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression (no sign check)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"NOT.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * bitwise invert"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform comparisons"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do < compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LTHAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CKTM                        * type match check, set C for string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CAE                        * branch if string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do numeric < compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27FA                        * compare FAC1 with FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CF2                        * process result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do string < compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CAE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack, or from top"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* of string space returns d0 = length,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy string 2 pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy string 2 length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get string 1 descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22BA                        * pop (a0) descriptor, returns with .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CB5                        * branch if not null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test if string 2 is null also"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CF2                        * if so do string 1 = string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CB5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d2                           * subtract string 2 length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CD5                        * branch if strings = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CD4                        * branch if string 1 < string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * set for string 1 > string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CD6                        * go do character comapare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CD4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* string 1 length is compare length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * and set for string 1 < string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CD6                        * go do character comapare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CD5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set for string 1 = string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CD6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust length for DBcc loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d1 is length to compare, d0 is <=> for length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 is string 1 pointer, a1 is string 2 pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CE6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"M.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* compare string bytes (1 with 2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"NE"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1,LAB_1CE6                     * loop if same and not end yet"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CF2                        * if = to here, then go use length compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CDB                        * else branch if string 1 > string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * else set for string 1 < string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CF2                        * go set result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CDB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * and set for string 1 > string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CF2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* make result 0, 1 or 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy to d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * set d0 longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROL"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * make 1, 2 or 4 (result = flag bit)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Cflag(a3),d0            * AND with comparison evaluation flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27DB                        * exit if not a wanted result (i.e. false)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * else set -1 (true)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27DB                        * save d0 as integer & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1CFE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C01                        * scan for \",\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DIM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DIM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * set \"DIM\" flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D10                        * search for or dimension a variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1CFE                        * loop and scan for \",\" if not null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform << (left shift)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LSHIFT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GetPair                 * get an integer and byte pair"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* byte is in d2, integer is in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoShift                 * branch if byte zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d2                 * compare bit count with 32d"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TooBig                  * branch if >="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASL.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * shift longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NoShift"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform >> (right shift)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RSHIFT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GetPair                 * get an integer and byte pair"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* byte is in d2, integer is in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoShift                 * branch if byte zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d2                 * compare bit count with 32d"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Not2Big                 * branch if >= (return shift)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test sign bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TooBig                  * branch if +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * set longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Not2Big"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * shift longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TooBig"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get an integer and byte pair"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* byte is in d2, integer is in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"GetPair"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVBY                        * evaluate byte expression, result in d0 and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_279B                        * copy FAC2 to FAC1, get first value in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression (no sign check)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test byte value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check alpha, return C=0 if<\"A\" or >\"Z\" or <\"a\" to \"z\">"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CASC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$61,d0                 * compare with \"a\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D83                        * if >=\"a\" go check =<\"z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check alpha upper case, return C=0 if<\"A\" or >\"Z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CAUC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$41,d0                 * compare with \"A\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D8A                        * if >=\"A\" go check =<\"Z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * make C=0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D8A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$5B,d0                 * compare with \"Z\"+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* carry set if byte<=\"Z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D83"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7B,d0                 * compare with \"z\"+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* carry set if byte<=\"z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* search for or create variable. this is used to automatically create a variable if"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* it is not found. any routines that need to create the variable call LAB_GVAR via"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this point and error generation is supressed and the variable will be created"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return pointer to variable in Cvaral and a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set data type to variable type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SVAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * search for variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FVAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* search for variable. if this routine is called from anywhere but the above call and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the variable searched for does not exist then an error will be returned"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DIM flag is in d1.b"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return pointer to variable in Cvaral and a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set data type to variable type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GVAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d1                 * set DIM flag = $00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory (1st character)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Defdim"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save DIM flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* search for FN name entry point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D12"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CASC                        * check byte, return C=0 if<\"A\" or >\"Z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not, syntax error then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* it is a variable name so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0,d1                  * set index for name byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Varname(a3),a0          * pointer to variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* clear the variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear the data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D2D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$04,d1                 * done all significant characters?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D2E                        * if so go ignore any more"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D2E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory (next character)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D2D                        * branch if character = \"0\"-\"9\" (ok)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* character wasn't \"0\" to \"9\" so ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CASC                        * check byte, return C=0 if<\"A\" or >\"Z\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D2D                        * branch if = \"A\"-\"Z\" (ok)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* check if string variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'$',d0                 * compare with \"$\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D44                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* type is string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#$80,Varname+1(a3)      * set top bit of 2nd character, indicate string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D45                        * skip integer check"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* check if integer variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D44"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'&',d0                 * compare with \"&\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D45                        * branch if not integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* type is integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#$80,Varname+2(a3)      * set top bit of 3rd character, indicate integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* after we have determined the variable type we need to determine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if it's an array of type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* gets here with character after var name in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D45"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sufnxf(a3)                      * test function name flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D48                        * if not FN or FN variable continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D49                        * if FN variable go find or create it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else was FN name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Varname"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* get whole function name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d1                           * set step to next function size -4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Sfncl(a3),a0            * get pointer to start of functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D4B                        * go find function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D48"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'(',d0                 * subtract \"(\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1E17                        * if \"(\" go find, or make, array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* either find or create var"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* var name (1st four characters only!) is in Varname"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* variable name wasn't var( .. so look for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* plain variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D49"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Varname"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* get whole variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D4A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#4,d1                           * set step to next variable size -4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Svarl(a3),a0            * get pointer to start of variables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"23"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* test if string name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D4B                        * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* 6 bytes per string entry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"Sstrl"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"Svarl"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* move to string area"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D4B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get end address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get start address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D5E                        * enter loop at exit check"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D5D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+,d0                        * compare this variable with name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1DD7                        * branch if match (found var)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add offset to next variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D5E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare address with variable space end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D5D                        * if not end go check next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sufnxf(a3)                      * is it a function or function variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1D94                        * if was go do DEF or function variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* reached end of variable mem without match"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* ... so create new variable, possibly"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FVAR(pc),a2         * get the address of the create if doesn't"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* exist call to LAB_GVAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare the return address with expected"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_UVER                        * if not create go do error or return null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this will only branch if the call to LAB_GVAR wasn't from LAB_SVAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D94"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sufnxf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* test function search flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_UFER                        * if not doing DEF then go do undefined"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* function error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else create new variable/function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D98"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get end of block to move"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy end of block to move"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"a1,d2                           * calculate block to move size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy end of block to move"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* space for one variable/function + name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add space for one variable/function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set new array mem end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d2                           * /2 for word copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1DAF                        * skip move if zero length block"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 for DFB loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DAC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DAE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,LAB_1DAE                     * loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,LAB_1DAC                     * decrement high count and loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get here after creating either a function, variable or string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if function set variables start, string start, array start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if variable set string start, array start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if string set array start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DAF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sufnxf(a3)                      * was it function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1DB0                        * branch if was FN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"23"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* was it string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1DB2                        * branch if string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1DB1                        * branch if was plain variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DB0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,Svarl(a3)            * set new variable memory start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DB1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,Sstrl(a3)            * set new start of strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DB2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,Sarryl(a3)           * set new array memory start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save variable/function name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* initialise variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"23"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* was it string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1DD7                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* else initialise string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* found a match for var ((Vrschl) = ptr)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DD7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* ........ $....... &....... ........"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * .......$ .......& ........ .......0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * ........ .......0 .......$ .......&"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * ........ .......0 .......$ &......."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * ........ .......0 0....... $&.....Γê⌐ΓöÉΓò£."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$C0,d1                 * mask the type bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sufnxf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear FN flag byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you want a non existant variable to return a null value then set the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * return variable found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set-up array pointer, d0, to first element in array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set d0 to (a0)+2*(Dimcnt)+$0A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1DE6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#5,d0                           * set d0 to 5 (*2 = 10, later)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dimcnt(a3),d0           * add # of dimensions (1, 2 or 3)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *2 (bytes per dimension size)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"a0,d0                           * add array start pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate unsigned integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate positive integer expression, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test FAC1 sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * do function call error if -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate integer expression, no sign check"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp, exit with flags set correctly"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVIR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$A0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* compare exponent with exponent = 2^32 (n>2^31)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2831                        * convert FAC1 floating to fixed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if > do function call error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test sign of FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2831                        * if +ve then ok"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * do -d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BVC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if not $80000000 do FC error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* else just set it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* find or make array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1E17"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Defdim"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* get DIM flag and data type flag (word in mem)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now get the array dimension(s) and stack it (them) before the data type and DIM flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1E1F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Varname"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* save variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EVIN                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * swap high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test swapped high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ABER                        * if too big do array bounds error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Varname"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* restore variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore DIM and data type flags"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* stack this dimension size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save DIM and data type flags"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2C,d0                 * compare with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1E1F                        * if found go do next dimension"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dimcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* store dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Defdim"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* restore DIM and data type flags (word in mem)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sarryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get array mem start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now check to see if we are at the end of array memory (we would be if there were"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* no arrays)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1E5C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Astrtl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save as array start pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* compare with array mem end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1EA1                        * go build array if not found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* search for array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get this array name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Varname(a3),d0          * compare with array name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1E8D                        * array found so branch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* no match"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get this array size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Astrtl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* add to array start pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1E5C                        * go check next array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* found array, are we trying to dimension it?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1E8D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Defdim(a3)                      * are we trying to dimension it?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DDER                        * if so do double dimension error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* found the array and we're not dimensioning it so we must find an element in it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1DE6                        * set data pointer, d0, to the first element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* in the array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* index to dimension count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get no of dimensions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dimcnt(a3),d0           * compare with dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1F28                        * found array so go get element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_WDER                        * else wrong so do \"Wrong dimensions\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* array not found, so possibly build it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1EA1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Defdim(a3)                      * test the default DIM flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_UDER                        * if default flag is clear then we are not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* explicitly dimensioning an array so go"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do an \"Undimensioned array\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1DE6                        * set data pointer, d0, to the first element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* in the array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Varname"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* get array name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save array name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#4,d1                           * set 4 bytes per element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"23"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* test if string array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1EDF                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#6,d1                           * else 6 bytes per element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1EDF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set array data size (bytes per element)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dimcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* skip the array size now (don't know it yet!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* set array's dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now calculate the array data space size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1EC0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* If you want arrays to dimension themselves by default then comment out the test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* above and uncomment the next three code lines and the label LAB_1ED0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       MOVE.w  #$0A,d1                 * set default dimension value, allow 0 to 9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       TST.b           Defdim(a3)                      * test default DIM flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       BNE.s           LAB_1ED0                        * branch if b6 of Defdim is clear"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get dimension size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*LAB_1ED0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save to array header"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1F7C                        * do this dimension size+1 * array size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (d1+1)*(Asptl), result in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save array data size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dimcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* decrement dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1EC0                        * loop while not = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* add size to first element address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OMER                        * if overflow go do \"Out of memory\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* compare with bottom of string memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1ED6                        * branch if less (is ok)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GARB                        * do garbage collection routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* compare with bottom of string memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OMER                        * if Sstorl <= a0 do \"Out of memory\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* error then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1ED6"
    },
    {
        "type":"whitespace",
        "value":"                                                "
    },
    {
        "type":"comment",
        "value":"* ok exit, carry set"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save array mem end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * zero d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get size in bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * /2 for word fill (may be odd # words)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1ED8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* decrement pointer and clear word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_1ED8                     * decrement & loop until low word done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * swap words"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F07                        * exit if done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement low (high) word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * swap back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1ED8                        * go do a whole block"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now we need to calculate the array size by doing Earryl - Astrtl"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F07"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Astrtl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get for calculation and as pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get array memory end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"a0,d0                           * calculate array size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save size to array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Defdim(a3)                      * test default DIM flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_011                 * exit (RET) if this was a DIM command"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else, find element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* index to dimension count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dimcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* get array's dimension count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* we have found, or built, the array. now we need to find the element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F28"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear first result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* clear array data pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* compare nth dimension bound (a0) with nth index (sp)+"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if greater do array bounds error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F2C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get nth dimension bound"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(sp),d1                 * compare nth index with nth dimension bound"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ABER                        * if d1 less or = do array bounds error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now do pointer = pointer * nth dimension + nth index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F5A                        * skip multiply if last result = null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F7C                        * do this dimension size+1 * array size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F5A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get nth dimension index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * add index to size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save array data pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dimcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* decrement dimensions count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F2C                        * loop if dimensions still to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set data type to float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#3,d1                           * set for numeric array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Varname+1(a3)           * test if string array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F6A                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#5,d1                           * else set for string array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* and set data type to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F6B                        * skip integer test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F6A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Varname+2(a3)           * test if integer array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F6B                        * branch if not integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$40"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* else set data type to integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F6B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1F7C                        * do element size (d1) * array size (Asptl)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add array data start pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_011"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do this dimension size (d1) * array data size (Asptl)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do a 16 x 32 bit multiply"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1 holds the 16 bit multiplier"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Asptl holds the 32 bit multiplicand"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0    bbbb  bbbb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1    0000  aaaa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*       ----------"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0    rrrr  rrrr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1F7C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Asptl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * shift high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* d1 * low word = low result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* d1 * high word = high result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * align words for test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * must be zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OMER                        * if overflow go do \"Out of memory\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * calculate result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OMER                        * if overflow go do \"Out of memory\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Asptl(a3),d0            * add original"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OMER                        * if overflow go do \"Out of memory\" error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform FRE()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FRE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_1FB4                        * branch if numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack, or from"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* top of string space, returns d0 = length,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* FRE(n) was numeric so do this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1FB4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GARB                        * go do garbage collection"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Earryl(a3),d0           * subtract array mem end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* convert d0 to signed longword in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_AYFC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear data type, $80=string, $40=integer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$A000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set FAC1 exponent and clear sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D0                        * convert if +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,CCR                  * else set carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D0                        * do +/- (carry is sign) & normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* remember if the line length is zero (infinite line) then POS(n) will return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* position MOD tabsize"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform POS()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_POS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TPos"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* get terminal position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* convert d0 to unsigned byte in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1FD0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$FF,d0                 * clear high bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check not direct (used by DEF and INPUT)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CKRN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Clinel(a3)                      * test current line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IDER                        * if -ve go do illegal direct error then warm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* can continue so return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DEF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DEF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_FN-$100,d0          * get FN token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCCA                        * scan for CHR$(d0), else syntax error and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return character after d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sufnxf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set FN flag bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1D12                        * get FN name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"func_l"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CKRN                        * check not direct (back here if ok)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$28,(a5)+                      * check next byte is \"(\" and increment"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$7E"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sufnxf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set FN variable flag bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SVAR                        * search for or create a variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return the variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_EQUAL-$100,d0               * = token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCCA                        * scan for CHR$(A), else syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return character after d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Varname"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* push current variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DATA                        * go perform DATA, find end of DEF FN statement"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"func_l"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get the function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* save BASIC execute pointer to function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save current variable name to function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate FNx"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_201E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$81"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sufnxf"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set FN flag (find not create)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1D12                        * get FN name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push data type flag (function type)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$28,(a5)                       * check next byte is \"(\", no increment"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BF7                        * evaluate expression within parentheses"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pop function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"func_l"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push data type flag (function expression type)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get function variable name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1D4A                        * go find function variable (already created)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now check type match for variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pop data type flag (function expression type)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROL"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * set carry if type = string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CKTM                        * type match check, set C for string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now stack the function variable value before"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* use"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2043                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"des_sk_e(a3),a1         * get string stack pointer max+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare string stack pointer with max+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCER                        * if no space on the stack go do string too"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* complex error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* string length on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* string address on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_204S                        * skip var push"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2043"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* push variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_204S"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push variable address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2045                        * pack function expression value into (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (function variable)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* push BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"func_l"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get function pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save function execute ptr as BASIC execute ptr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not [EOL] or [EOS] do syntax error and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* restore variable from stack and test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull variable address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test variable data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_204T                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* string address from descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* string length from descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2044                        * skip variable pull"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_204T"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* restore variable from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2044"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pop data type flag (function type)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROL"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * set carry if type = string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CKTM                        * type match check, set C for string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2045"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2778                        * if numeric pack FAC1 into variable (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy variable pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_17D6                        * go do string LET & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform STR$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_STRS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2970                        * convert FAC1 to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* scan, set up string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print \" terminated string to FAC1 stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20AE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d2                 * set Srchc character (terminator 1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set Asrch character (terminator 2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print d2/d3 terminated string to FAC1 stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 = Srchc, d3 = Asrch, a0 is source"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* a6 is temp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20B4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set length to -1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy start to calculate end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20BE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get byte from string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_20D0                        * exit loop if null byte [EOS]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * compare with search character (terminator 1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_20CB                        * branch if terminator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * compare with terminator 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_20BE                        * loop if not terminator 2 (or null string)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20CB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$22,d0                 * compare with \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_20D0                        * branch if not \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else increment string start (skip \" at end)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20D0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add longowrd length to make string end+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* is string in ram"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * if not go push descriptor on stack & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (could be message string from ROM)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Smeml"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* is string in utility ram"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * if not go push descriptor on stack & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (is in string or program space)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (else) copy string to string memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20C9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy longword length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_20D8                        * branch if not null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* make null pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * go push descriptor on stack & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20D8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* new string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* old string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_20E0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy byte (source can be odd aligned)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,LAB_20E0                     * loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check for space on descriptor stack then ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* put string address and length on descriptor stack & update stack pointers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* start is in a0, length is in d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RTST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"des_sk_e(a3),a1         * get string stack pointer max+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare string stack pointer with max+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCER                        * if no space on string stack .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* .. go do 'string too complex' error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* push string & update pointers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* string length on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* string address on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* string descriptor pointer in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save data type flag, $80=string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* build descriptor a0/d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* make space in string memory for string d1.w long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return pointer in a0/Sutill"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2115"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2128                        * branch if user wants null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* make space for string d1 long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Gclctd"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear garbage collected flag (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * +1 to possibly round up"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * mask odd bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * ensure d0 is even length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2117                        * branch if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * set to allocate 65536 bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * makes $00010000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2117"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* subtract string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* compare with top of array space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2137                        * if less do out of memory error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sutill"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save string utility pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * set flags on length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2128"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* make null pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2137"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Gclctd(a3)                      * get garbage collected flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OMER                        * do \"Out of memory\" error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save a1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GARB                        * else go do garbage collection"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore a1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Gclctd"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set garbage collected flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2117                        * go try again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* garbage collection routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GARB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* save registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Ememl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* start with no strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* re-run routine from last ending"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_214B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set highest uncollected string so far"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear string to move pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sstrl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* set pointer to start of strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"4(a0),a0                        * index to string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sarryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set end pointer to start of arrays (end of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* strings)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2176                        * branch into loop at end loop test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2161"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2206                        * test and set if this is the highest string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"10(a0),a0                       * increment to next string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2176"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare end of area with pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2161                        * go do next if not at end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* done strings, now do arrays."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"-4(a0),a0                       * decrement pointer to start of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Earryl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set end pointer to end of arrays"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_218F                        * branch into loop at end loop test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_217E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get array size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"a0,d2                           * makes start of next array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get array name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#23,d0                  * test string flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_218B                        * branch if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get # of dimensions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * *2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add to skip dimension size(s)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"10(a0),a0                       * increment to first element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2183"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2206                        * test and set if this is the highest string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment to next element"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare with start of next array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2183                        * go do next if not at end of array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_218B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* pointer to next array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_218F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare pointer with array end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_217E                        * go do next if not at end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* done arrays and variables, now just the descriptor stack to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* get descriptor stack pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"des_sk(a3),a2           * set end pointer to end of stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_21C4                        * branch into loop at end loop test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_21C2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2206                        * test and set if this is the highest string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"6(a0),a0                        * increment to next string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_21C4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare pointer with stack end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_21C2                        * go do next if not at end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* descriptor search complete, now either exit or set-up and move string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set the flags (a1 is move string)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_21D1                        * go tidy up and exit if no move"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* a0 is now string start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* d1 is string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* +1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$FE,d1                 * make even length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* pointer is now to string end+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* is destination end+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* does the string need moving"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2240                        * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * word move so do /2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2216"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1,LAB_2216                     * loop until done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save new string start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2240"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* string start is new string mem start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_214B                        * re-run routine from last ending"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (but don't collect this string)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_21D1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* test and set if this is the highest string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2206"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get this string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_012                 * exit if null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * compare with highest uncollected string so far"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_012                 * exit if <= with highest so far"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sstorl(a3),d0           * compare with bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_012                 * exit if >= bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * d0 = $FFFFFFFF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* d0 is string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * make -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$FE,d0                 * make -ve even length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sstorl(a3),d0           * add string store to -ve length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0),d0                 * compare with string address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2212                        * if = go move string store pointer down"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* highest = current"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* string to move = current"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2212"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set new string store start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_012"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* concatenate - add strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* string descriptor 1 is in FAC1_m, string 2 is in line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_224D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1ADB(pc)            * continue evaluation after concatenate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* stack descriptor pointer for string 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAL                        * get value from line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if type is not string do type mismatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore descriptor pointer for string 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* concatenate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* string descriptor 1 is in a0, string descriptor 2 is in FAC1_m"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_224E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy descriptor pointer 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get length 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"4(a1),d1                        * add length 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SLER                        * if overflow go do 'string too long' error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save descriptor pointer 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save new string start pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* copy descriptor pointer 1 from stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_229E                        * copy string d0 bytes long from a0 to Sutill"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return with a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get descriptor pointer for string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_22BA                        * pop (a0) descriptor, returns with .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d0 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_229E                        * copy string d0 bytes long from a0 to Sutill"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return with a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get descriptor pointer for string 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_22BA                        * pop (a0) descriptor, returns with .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* retreive the result string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the result string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * if it is a null string just return it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * else make the start pointer negative"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Sutill(a3),d1           * add the end pointert to give the length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push string on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* copy string d0 bytes long from a0 to Sutill"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return with a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_229E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy and check length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_013                 * skip copy if null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Sutill"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get destination pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save destination string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* subtract for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_22A0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,LAB_22A0                     * loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sutill"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* update Sutill to end of copied string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore destination string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_013"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* pop string off descriptor stack, or from top of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns with d0.l = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_22B6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* pop (a0) descriptor off stack or from string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns with d0.l = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_22BA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save other regs"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* is string on the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_22BD                        * skip pop if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$06"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* else update stack pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_22BD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear string length longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get string address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* was it on the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_22E6                        * branch if it wasn't"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* compare string address with bottom of string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_22E6                        * branch if <>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * mask for odd bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * AND length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * make it fit word aligned length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,Sstorl(a3)           * add to bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_22E6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy to a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore other regs"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * set flags on length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform CHR$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CHRS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVBY                        * evaluate byte expression, result in d0 and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MKCHR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * string is single byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return a0/Sutill = pointer, others unchanged"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save byte in string (byte IS string!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push string on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LEFT$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* enter with a0 is descriptor, d0 & Itemp is word 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LEFT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * word in d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test returned length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * branch if null return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear start offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"4(a0),d1                        * compare word parameter with string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * branch if string length > word parameter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2317                        * go copy whole string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform RIGHT$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* enter with a0 is descriptor, d0 & Itemp is word 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RIGHT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * word in d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test returned length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * branch if null return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * subtract word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * branch if string length > word parameter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else copy whole string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2316"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear start offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2317"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* else make parameter = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get here with ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*   a0 - points to descriptor"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*   d0 - is offset from string start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*   d1 - is required string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_231C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return a0/Sutill = pointer, others unchanged"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* restore string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save start offset (longword)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_22BA                        * pop (a0) descriptor, returns with .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* adjust pointer to start of wanted string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* length to d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_229E                        * store string d0 bytes long from (a0) to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (Sutill) return with a0 = pointer,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push string on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform MID$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* enter with a0 is descriptor, d0 & Itemp is word 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MIDS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d7                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set default length = 65535"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save word 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * was it \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2358                        * branch if not \",\" (skip second byte get)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* increment pointer past \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTWO                        * get word parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2358"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error then warm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore word 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * null length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement start index (word 1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if was null do function call error then warm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"4(a0),d0                        * compare string length with start index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * if start not in string do null string (d1=0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* get length back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d7                           * d7 now = MID$() end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2368                        * already too long so do RIGHT$ equivalent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"4(a0),d7                        * compare string length with start index+length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * if end in string go do string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2368"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * subtract start offset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_231C                        * go do string (effectively RIGHT$)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LCASE$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LCASE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack or from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns with d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoString                        * if null go return a null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* else copy and change the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the string address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make a string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* new string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* old string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy length for loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LC_loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte from string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$5B,d0                 * compare with \"Z\"+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoUcase                 * if > \"Z\" skip change"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$41,d0                 * compare with \"A\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoUcase                 * if < \"A\" skip change"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * convert upper case to lower case"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NoUcase"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* copy upper case byte back to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,LC_loop                      * decrement and loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoString                        * tidy up & exit (branch always)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform UCASE$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UCASE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack or from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns with d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoString                        * if null go return a null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* else copy and change the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the string address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make a string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* new string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* old string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy length for loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 for DBF loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"UC_loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get a byte from the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$61,d0                 * compare with \"a\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoLcase                 * if < \"a\" skip change"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7B,d0                 * compare with \"z\"+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NoLcase                 * if > \"z\" skip change"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$DF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* convert lower case to upper case"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NoLcase"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* copy upper case byte back to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,UC_loop                      * decrement and loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NoString"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push string on descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform SADD()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SADD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if numeric do Type missmatch Error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you want a non existant variable to return a null value then set the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* test the variable found flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * if not found go return null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get string address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LEN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LENS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC(pc)            * set return address to convert d0 to signed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* longword in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack or from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns with d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform ASC()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ASC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack or from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns with d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if null do function call error then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get first character byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1FD0                        * convert d0 to unsigned byte in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* increment and get byte, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SGBY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get byte parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GTBY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* evaluate byte expression, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EVBY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVPI                        * evaluate positive integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d1                 * set mask/2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * =$FFFFFF00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * check top 24 bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if <> 0 do function call error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get word parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GTWO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVPI                        * evaluate positive integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * copy high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * set flags"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if <> 0 do function call error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * copy high word to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform VAL()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_VAL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22B6                        * pop string off descriptor stack or from memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns with d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_VALZ                        * string was null so set result = $00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* clear FAC1 exponent & sign & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy string pointer to execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* string end+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get byte from string+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* null terminate string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2887                        * get FAC1 from string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pop byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* restore to memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* restore BASIC execute pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_VALZ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear FAC1 exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get two parameters for POKE or WAIT, first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GADB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (does FC error not OF error if out of range)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* copy to stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C01                        * scan for \",\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GTBY                        * get byte parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get two parameters for DOKE or WAITW, first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GADW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GEAD                        * get even address for word/long memory actions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* address returned in d0 and on the stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C01                        * scan for \",\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * swap words"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_XGADW                       * exit if null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if <> 0 do function call error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_XGADW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * swap words back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get even address (for word or longword memory actions)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* address returned in d0 and on the stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* does address error if the address is odd"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GEAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (does FC error not OF error if out of range)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * test low bit of longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADER                        * if address is odd do address error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* copy return address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* even address on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JMP"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"(a0)                            * effectively RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform PEEK()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PEEK"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (does FC error not OF error if out of range)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy to address register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1FD0                        * convert d0 to unsigned byte in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform POKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_POKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GADB                        * get two parameters for POKE or WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* put byte in memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DEEK()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DEEK"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (does FC error not OF error if out of range)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * shift bit 0 to carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADER                        * if address is odd do address error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * shift byte back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,a0                           * copy to address register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear top bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LEEK()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LEEK"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (does FC error not OF error if out of range)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * shift bit 0 to carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADER                        * if address is odd do address error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * shift byte back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,a0                           * copy to address register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform DOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GADW                        * get two parameters for DOKE or WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* put word in memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_GEAD                        * get even address for word/long memory actions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* address returned in d0 and on the stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C01                        * scan for \",\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVNM                        * evaluate expression & check is numeric,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVIR                        * evaluate integer value (no sign check)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* put longword in memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_015"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable 1 address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save variable 1 address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy variable 1 data type, $80=string,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* $40=inetger, $00=float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1C01                        * scan for \",\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable 2 address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore variable 1 address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3),d4           * compare variable 1 data type with variable 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if not both the same type do \"Type mismatch\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* error then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you do want a non existant variable to return an error then leave the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file set to zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifeq"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get variable 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"comment",
        "value":"* copy variable 1 to variable 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save variable 2 to variable 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4                              * check data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_015                 * exit if not string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get string 2 length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* copy string 1 length to string 2 length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save string 2 length to string 1 length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if you want a non existant variable to return a null value then set the novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* value at the top of this file to some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"ifne"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"novar"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the variable 1 pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* and again for any length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"no_variable1            * if variable 1 doesn't exist skip the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* value get"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get variable 1 value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4                              * check the data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"no_variable1            * if not string skip the length get"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* else get variable 1 string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"no_variable1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the variable 2 pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* and again for any length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"no_variable2            * if variable 2 doesn't exist skip the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* value get and the new value save"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get variable 2 value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save variable 2 new value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4                              * check the data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"no_variable2            * if not string skip the length get and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* new length save"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* else get variable 2 string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save variable 2 new string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"no_variable2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test if variable 1 exists"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"EXIT_SWAP                       * if variable 1 doesn't exist skip the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* new value save"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save variable 1 new value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4                              * check the data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"EXIT_SWAP                       * if not string skip the new length save"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save variable 1 new string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"EXIT_SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"endc"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform USR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_USR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Usrjmp(a3)                      * do user vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LOAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JMP"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_LOAD(a3)                      * do load vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JMP"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_SAVE(a3)                      * do save vector"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform CALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"PEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT(pc)            * put return address on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GEAD                        * get even address for word/long memory actions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* address returned in d0 and on the stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"* effectively calls the routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* if the called routine exits correctly then it will return via the get byte routine."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this will then get the next byte for the interpreter and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GADB                        * get two parameters for POKE or WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d2                           * clear mask"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2441                        * skip if no third argument"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SCGB                        * scan for \",\" & get byte,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy mask"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2441"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2445"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* read memory byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * EOR with second argument (mask)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * AND with first argument (byte)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2445                        * loop if result is zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform subtraction, FAC1 from FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SUBTRACT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* complement FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy FAC2 sign byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * EOR with FAC2 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* add FAC2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ADD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_279B                        * FAC1 was zero so copy FAC2 to FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* FAC1 is non zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"FAC2_m(a3),a0           * set pointer1 to FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_016                 * exit if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d0           * subtract FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24A8                        * branch if = (go add mantissa)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_249C                        * branch if FAC2 < FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* FAC2 > FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy sign and exponent of FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * negate exponent difference (make diff -ve)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* pointer1 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_249C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * negate exponent difference (make diff +ve)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#32,d0                  * compare exponent diff with 32"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLT.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2467                        * branch if range >= 32"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2468                        * go clear smaller mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2467"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get FACx mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * shift d0 times right"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2468"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save it back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* exponents are equal now do mantissa add or"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* subtract"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24A8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC_sc(a3)                      * test sign compare (FAC1 EOR FAC2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24F8                        * if <> go do subtract"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_m(a3),d0           * add FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24F7                        * save and exit if no carry (FAC1 is normal)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ROXR.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else shift carry back into mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* increment FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * if carry do overflow error & warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24F7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_016"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* signs are different"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24F8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"FAC1_m(a3),a1           * pointer 2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare pointers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24B4                        * branch if <>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else pointer2 to FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* take smaller from bigger (take sign of bigger)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24B4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get larger mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get smaller mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save larger mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,FAC1_m(a3)           * subtract smaller"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do +/- (carry is sign) & normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24D0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * branch if result is +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* erk! subtract is the wrong way round so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* negate everything"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* complement FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_m(a3)                      * negate FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24D5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24DA                        * mantissa is normal so just exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24D9                        * mantissa is not zero so go normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* else make FAC1 = +zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24D9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* mantissa to d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24D8                        * if exponent is zero then clean up and exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24D6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * shift mantissa, ADD is quicker for a single"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* shift"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"MI"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0,LAB_24D6                     * decrement exponent and loop if mantissa and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* exponent +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24D8                        * if exponent is zero make FAC1 zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_24D7                        * if exponent is >zero go save FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * else set for zero after correction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24D7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust exponent for loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save normalised mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24D8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save corrected exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_24DA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform LOG()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if -ve do function call error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d7                           * clear d7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if 0 do function call error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$81,d7                 * normalise exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$81"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* force a value between 1 and 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set mantissa for 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent for 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * find arg+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * setup for calc skip"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set FAC1 for zero result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d6                           * shift 1 bit out"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* put back FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LONN                        * if 0 skip calculation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent for .5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DIVIDE                      * do (arg-1)/(arg+1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LONN                        * if 0 skip calculation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$82,d1                 * normalise and two integer bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * negate for shift"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**      CMP.b           #$1F,d1                 * will mantissa vanish?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**      BGT.s           LAB_dunno                       * if so do ???"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * shift in two integer bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 = arg"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 = x, d1 = y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 = x1, d3 = y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4 = shift count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5 = loop count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6 = z"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* a0 = table pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d6                           * z = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"30"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* y = 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_HTHET(pc),a0                * get pointer to hyperbolic tangent table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#30,d5                  * loop 31 times"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d4                           * set shift count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LOCC                        * entry point for loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LAAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d2                           * x1 >> i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * y = y - x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0),d6                 * z = z + tanh(i)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOCC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* x1 = x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* y1 = Y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d3                           * y1 >> i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LOLP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOLP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * x = x - y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LAAD                        * branch if > 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* get x back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* next entry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* next i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d3                           * /2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LOCX                        * branch y1 = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d5,LAB_LOLP                     * decrement and loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now sort out the result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOCX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d6                           * *2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* setup for d7 = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LONN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save cordic result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d5                           * set default exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d7                              * check original exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LOXO                        * branch if original was 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LOXP                        * branch if was +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d7                              * make original exponent +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80-$100,d5            * make sign -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOXP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save original exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d7                              * 16 bit shift"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LSL"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d7                           * easy first part"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$88-$100,d5            * start with byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LONE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d7,d7                           * shift mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LONE                        * loop if not normal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOXO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save original exponent as mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent for this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$B17217F8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* LOG(2) mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* LOG(2) exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* make sign compare = FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * do multiply"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save cordic result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LOWZ                        * branch if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8200"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* clear sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * and add for final result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LOWZ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* multiply FAC1 by FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MULTIPLY"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUUF                        * if exponent zero go make result zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUUF                        * if exponent zero go make result zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* sign compare becomes sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d0           * multiply exponents by adding"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MNOC                        * branch if no carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * normalise result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * if no carry do overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MADD                        * branch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* no carry for exponent add"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MNOC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * normalise result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUUF                        * return zero if underflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MADD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d1 (FAC1) x d2 (FAC2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy low word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy long word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * high word FAC1 to low word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy high word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * low word FAC2 x low word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * low word FAC2 x high word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * high word FAC2 to low word FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2,d4                           * high word FAC2 x low word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2,d3                           * high word FAC2 x high word FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* done multiply, now add partial products"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                       d1 =                                    aaaa  ----      FAC2_L x FAC1_L"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                       d0 =                            bbbb  aaaa              FAC2_L x FAC1_H"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                       d4 =                            bbbb  aaaa              FAC2_H x FAC1_L"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                       d3 =                    cccc  bbbb                      FAC2_H x FAC1_H"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*                       product =               mmmm  mmmm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".L"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$8000,d1                       * round up lowest word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"CLR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * clear low word, don't need it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * align high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * add FAC2_L x FAC1_H (can't be carry)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MUF1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d1                           * now add intermediate (FAC2_H x FAC1_L)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUF2                        * branch if no carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$10000,d3                      * else correct result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MUF2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$8000,d1                       * round up low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"CLR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * clear low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * align for final add"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d1                           * add FAC2_H x FAC1_H, result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUF3                        * branch if normalisation not needed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * shift mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* adjust exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUUF                        * branch if underflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MUF3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MUEX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* either zero or underflow result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MUUF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * quick clear"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear sign and exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MUEX                        * restore regs & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do FAC2/FAC1, result in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* fast hardware divide version"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DIVIDE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DZER                        * if zero go do /0 error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_DIV0                        * if zero return zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * get result exponent by subtracting"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * correct 16 bit exponent result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* sign compare is result sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now to do 32/32 bit mantissa divide"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"CLR.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"flag(a3)                        * clear 'flag' byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d4                           * compare FAC2 with FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MAN1                        * set mantissa result = 1 if equal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"AC1gtAC2                        * branch if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d4                           * subtract FAC1 from FAC2, result now must be <1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"flag"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* FAC2>FAC1 so set 'flag' byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"AC1gtAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_32_16                       * do 32/16 divide"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1                              * move 16 bit result to high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy remainder longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_3216                        * do 32/16 divide again (skip copy d4 to d2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"DIV"
    },
    {
        "type":"invalid",
        "value":"U.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* now divide remainder to make guard word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"flag"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* now normalise, get flag byte back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_DIVX                        * skip add if null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* else result was >1 so we need to add 1 to result mantissa and adjust exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d7                           * shift 1 into eXtend"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ROXR.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* shift extend result >>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ROXR.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* shift extend guard word >>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now round result to 32 bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DIVX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * guard bit into eXtend bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"L_DIVRND                        * branch if guard=0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add guard to mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"L_DIVRND                        * branch if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SET1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ROXR.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* shift extend result >>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* test for over/under flow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"L_DIVRND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_DIV0                        * if -ve return zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":"I.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* mask word high byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * branch if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* move result into FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_XDIV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save result exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save result mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* FAC1 mantissa = FAC2 mantissa so set result mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MAN1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * set bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * bit into eXtend"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SET1                        * set mantissa, adjust exponent and exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* result is zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DIV0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * zero exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* zero mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_XDIV                        * exit divide"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* divide 16 bits into 32, AB/Ex"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4                    AAAA    BBBB                    * 32 bit numerator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3                    EEEE    xxxx                    * 16 bit denominator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1                    xxxx    DDDD                    * 16 bit result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                            HHHH    IIII            * 32 bit remainder"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_32_16"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy FAC2 mantissa            (AB)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_3216"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy FAC1 mantissa            (EF)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"CLR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5                              * clear low word d1             (Ex)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d5                              * swap high word to low word    (xE)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3                    EEEE    FFFF                    * denominator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5            0000    EEEE                            * denominator high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    AAAA    BBBB                    * numerator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4                    AAAA    BBBB                    * numerator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"DIV"
    },
    {
        "type":"invalid",
        "value":"U.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* do FAC2/FAC1 high word        (AB/E)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BVC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LT_1                        * if no overflow DIV was ok"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d4                  * else set default value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* done the divide, now check the result, we have ..."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3                    EEEE    FFFF                    * denominator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5            0000    EEEE                            * denominator high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    AAAA    BBBB                    * numerator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4                    MMMM    DDDD                    * result MOD and DIV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LT_1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy 16 bit result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy 16 bit result again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* we now have .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3                    EEEE    FFFF                    * denominator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5            0000    EEEE                            * denominator high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6                    xxxx  DDDD                      * result DIV copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1                    xxxx  DDDD                      * result DIV copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    AAAA    BBBB                    * numerator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4                    MMMM    DDDD                    * result MOD and DIV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now multiply out 32 bit denominator by 16 bit result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* QRS = AB*D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* FFFF * DDDD =       rrrr  SSSS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* EEEE * DDDD = QQQQ  rrrr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* we now have .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3                    EEEE    FFFF                    * denominator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5            0000    EEEE                            * denominator high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6                            rrrr  SSSS              * 48 bit result partial low"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1                    xxxx  DDDD                      * result DIV copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    AAAA    BBBB                    * numerator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4                    QQQQ    rrrr                    * 48 bit result partial"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy low word of low multiply"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d7                            xxxx    SSSS            * 48 bit result partial low"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"CLR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6                              * clear low word of low multiply"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d6                              * high word of low multiply to low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6                    0000    rrrr                    * high word of 48 bit result partial low"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4                    QQQQ    RRRR                    * 48 bit result partial high longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d6                           * clear to extend numerator to 48 bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now do GHI = AB0 - QRS (which is the remainder)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d7,d6                           * low word subtract"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6                            xxxx    IIII            * remainder low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"X.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* high longword subtract"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    GGGG    HHHH                    * remainder high longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now if we got the divide correct then the remainder high longword will be +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"L_DDIV                  * branch if result is ok (<needed)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* remainder was -ve so DDDD is too big"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_REMM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust DDDD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3                            xxxx    FFFF            * denominator copy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6                            xxxx    IIII            * remainder low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d6                           * add EF*1 low remainder low word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5                    0000    EEEE                    * denominator high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    GGGG    HHHH                    * remainder high longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"X.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add extend EF*1 to remainder high longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_REMM                        * loop if result still too big"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* all done and result correct or <"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"L_DDIV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d2                              * remainder mid word to high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                    HHHH    GGGG                    * (high word /should/ be $0000)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* remainder in high word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2                            HHHH    IIII            * now is 32 bit remainder"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1                    xxxx    DDDD                    * 16 bit result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* unpack memory (a0) into FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UFAC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get packed value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * exponent and sign into least significant word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_NB1T                        * branch if exponent (and the rest) zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * set MSb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * word order back to normal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASL.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d0                           * shift exponent & clear guard byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NB1T"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* move into FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* set numeric variable, pack FAC1 into Lvarpl"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PFAC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"Lvarpl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get destination pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#6,Dtypef(a3)           * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_277C                        * branch if floating"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2831                        * convert FAC1 floating to fixed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save in var"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* normalise round and pack FAC1 into (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2778"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_277C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27BA                        * round FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROR"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d0                           * align 24/32 bit mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * exponent/sign into 0-15"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7F,d0                 * clear exponent and sign bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear non sign bits in sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d0           * OR in exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SWAP"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0                              * move exponent and sign back to 16-31"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* store in destination"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* copy FAC2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_279B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* round FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27BA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27C4                        * branch if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * round to 24 bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27C3                        * branch if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ROXR.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* shift FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* correct exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * if carry do overflow error & warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27C3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d0                 * clear guard byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save back to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27C4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* make zero always +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_017"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return d0=-1,C=1/-ve d0=+1,C=0/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27CA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_017                 * exit if zero (already correct SGN(0)=0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return d0=-1,C=1/-ve d0=+1,C=0/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* no = 0 check"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27CE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* else get FAC1 sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* return d0=-1,C=1/-ve d0=+1,C=0/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* no = 0 check, sign in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27D0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXT.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * make word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXT.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * make longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d0                           * move sign bit through byte to carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_017                 * exit if carry set"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * set result for +ve sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform SGN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SGN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27CA                        * get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return d0=-1/-ve d0=+1/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* save d0 as integer longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27DB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$A000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set FAC1 exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * top bit into carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D0                        * do +/- (carry is sign) & normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform ABS()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ABS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* compare FAC1 with FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 Cb=0 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 Cb=0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 Cb=1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27FA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27CA                        * branch if FAC2 exponent=0 & get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0=-1,C=1/-ve d0=+1,C=0/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27CE                        * if signs <> do return d0=-1,C=1/-ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0=+1,C=0/+ve & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d1           * compare FAC1 exponent with FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2828                        * branch if different"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_m(a3),d1           * compare mantissas"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_282F                        * exit if mantissas equal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* gets here if number <> FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2828"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27D0                        * if FAC1 > FAC2 return d0=-1,C=1/-ve d0=+1,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* C=0/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* else toggle FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_282E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27D0                        * return d0=-1,C=1/-ve d0=+1,C=0/+ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_282F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* convert FAC1 floating to fixed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp, sets flags correctly"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2831"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_284J                        * branch if mantissa = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$A0,d1                 * set for no floating bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d1           * subtract FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * do overflow if too big"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_284G                        * branch if exponent was not $A0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_284H                        * branch if FAC1 +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BVS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_284H                        * branch if was $80000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * do overflow if too big"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_284G"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d1                 * compare with minimum result for integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_284L                        * if < minimum just do shift"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * else return zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_284L"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * shift integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test FAC1 sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_284H                        * branch if FAC1 +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * negate integer value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_284H"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_284J"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Itemp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save result to Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform INT()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_INT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$A0,d0                 * set for no floating bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d0           * subtract FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_IRTS                        * exit if exponent >= $A0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (too big for fraction part!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * compare with minimum result for integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_POZE                        * if >= minimum go return 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (too small for integer part!)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d1                  * set integer mask"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASL.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * shift mask [8+2*d0]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,FAC1_m(a3)           * mask mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_IRTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print \" in line [LINE #]\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2953"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_LMSG(pc),a0         * point to \" in line \" message"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* Print Basic line #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Clinel"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get current line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* print d0 as unsigned integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_295E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Bin2dec(pc),a1          * get table address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * table index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Usdss(a3),a0            * output string start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* output string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2967"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get table value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2969                        * exit if end marker"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0'-1,d4                       * set character to \"0\"-1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2968"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* next numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * subtract table value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2968                        * not overdone so loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * correct value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* character out to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment table pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment output string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2967                        * loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2969"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * make last character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* character out to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement a0 (allow simple loop)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now find non zero start of string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_296A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment a0 (this will never carry to b16)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"BHsend-1(a3),a1         * get string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* are we at end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * if so print null terminated string and RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'0'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* is character \"0\" ?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_296A                        * loop if so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_18C3                        * print null terminated string from memory & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* convert FAC1 to ASCII string result in (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* STR$() function enters here"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now outputs 7 significant digits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 is character out"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1 is save index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 is gash"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* a0 is output string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2970"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Decss(a3),a1            * set output string start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#' ',d2                 * character = \" \", assume +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCLR.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* test and clear FAC1 sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2978                        * branch if +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',d2                 * else character = \"-\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2978"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save the sign character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2989                        * branch if FAC1<>0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* exponent was $00 so FAC1 is 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * set character = \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d1                           * set output string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2A89                        * save last character, [EOT] & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* FAC1 is some non zero value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2989"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"numexp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear number exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$81,d2                 * compare FAC1 exponent with $81 (>1.00000)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_299C                        * branch if FAC1=>1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else FAC1 < 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$98968000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 10000000 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$9800"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 10000000 exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* make FAC1 sign sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * do FAC2*FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$F9"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"numexp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set number exponent count (-7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_299C                        * go test for fit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29B9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy exponent & sign from FAC1 to FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy FAC1 mantissa to FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* save FAC1_s as sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$CCCCCCCD"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 1/10 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$7D00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 1/10 exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * do FAC2*FAC1, effectively divide by 10 but"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* faster"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"numexp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* increment number exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_299C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$98967F70"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 9999999.4375 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$9800"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 9999999.4375 exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (max before scientific notation)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27F0                        * fast compare FAC1 with FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 C=0 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 C=0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 C=1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BHI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29B9                        * go do /10 if FAC1 > 9999999.4375"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29C3                        * branch if FAC1 = 9999999.4375"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* FAC1 < 9999999.4375"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$F423F800"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set mantissa for 999999.5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$9400"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent for 999999.5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"FAC1_m(a3),a0           * set pointer for x10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29A7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27F0                        * fast compare FAC1 with FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 C=0 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 C=0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 C=1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BHI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29C0                        * branch if FAC1 > 99999.9375,no decimal places"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* FAC1 <= 999999.5 so do x 10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#2,d0                           * /4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * add FAC1 (x1.125)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29B7                        * branch if no carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ROXR.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* shift carry back in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment exponent (never overflows)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29B7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* correct exponent ( 8 x 1.125 = 10 )"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* (never overflows)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save new mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save new exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"numexp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* decrement number exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29A7                        * go test again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now we have just the digits to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29C0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set mantissa for 0.5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent for 0.5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* sign compare = sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * add the 0.5 to FAC1 (round FAC1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29C3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2831                        * convert FAC1 floating to fixed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$01,d2                 * set default digits before dp = 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"numexp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get number exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d0                           * allow 7 digits before point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29D9                        * if -ve then 1 digit before dp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$09,d0                 * d0>=9 if n>=1E7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29D9                        * branch if >= $09"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* < $08"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* take 1 from digit count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$02,d0                 * set exponent adjust"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29D9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * set output string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"expcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent adjust"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"numexp"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save digits before dp count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy digits before dp count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29E4                        * branch if no digits before dp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29F7                        * branch if digits before dp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29E4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'.'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* save to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test digits before dp count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29F7                        * branch if no digits before dp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'0'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* save to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29F7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d2                           * clear index (point to 1,000,000)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80-$100,d0            * set output character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29FB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2A9A(pc),a0         * get base of table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get table value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_29FD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment output character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,Itemp(a3)            * add to (now fixed) mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#7,d0                           * set test sense (z flag only)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A18                        * did carry so has wrapped past zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29FD                        * no wrap and +ve test so try again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A1A                        * found this digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A18"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29FD                        * wrap and -ve test so try again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A1A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A21                        * branch if +ve test result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * negate the digit number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0B,d0                 * and subtract from 11 decimal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A21"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2F,d0                 * add \"0\"-1 to result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment index to next less power of ten"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment output string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy character to d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$7F,d3                 * mask out top bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,numexp(a3)           * decrement # of characters before the dp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A3B                        * branch if still characters to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else output the point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'.'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* save to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A3B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * mask test sense bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* invert it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#LAB_2A9B-LAB_2A9A,d2   * compare table index with max+4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_29FB                        * loop if not max"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now remove trailing zeroes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A4B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get character from output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement output string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * compare with \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A4B                        * loop until non \"0\" character found"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'.',d0                 * compare with \".\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A58                        * branch if was dp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else restore last character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment output string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A58"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'+'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save character \"+\" to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"expcnt(a3)                      * test exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A8C                        * if zero go set null terminator & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* exponent isn't zero so write exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A68                        * branch if exponent count +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'-'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save character \"-\" to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"expcnt(a3)                      * convert -ve to +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A68"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'E'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save character \"E\" to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"expcnt"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$2F,d0                 * one less than \"0\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A74"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment 10's character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0A,d2                 * subtract 10 from exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A74                        * loop while still >= 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3A,d2                 * add character \":\", $30+$0A, result is 10-value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save 10's character to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save 1's character to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save null terminator after last character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2A91                        * go set string pointer (a0) and exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A89"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save last character to output string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A8C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save null terminator after last character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A91"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set result string pointer (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* fast compare FAC1 with FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* assumes both are +ve and FAC2>0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 C=0 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 C=0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 C=1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27F0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * set for FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d1           * compare FAC1 exponent with FAC2 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27F1                        * branch if different"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_m(a3),d1           * compare mantissas"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27F3                        * exit if mantissas equal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27F1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_27F2                        * if FAC1 > FAC2 return d0=+1,C=0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else FAC1 < FAC2 return d0=-1,C=1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27F2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_27F3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* make FAC1 = 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_POON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 1 exonent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* make FAC1 = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_POZE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* 0 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* 0 exonent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform power function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the number is in FAC2, the power is in FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* no longer trashes Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_POWER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test power"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_POON                        * if zero go return 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC2_e(a3)                      * test number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_POZE                        * if zero go return 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC2_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save number sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_POWP                        * power of positive number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* make sign +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* number sign was -ve and can only be raised to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* an integer power which gives an x +j0 result,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else do 'function call' error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get power exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d1                 * normalise to .5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if 0<power<1 then do 'function call' error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now shift all the integer bits out"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get power mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASL.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * shift mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if power<>INT(power) then do 'function call'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_POWP                        * if integer value odd then leave result -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* save result sign +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_POWP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save power mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* save power sign & exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_279B                        * copy number to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_LOG                 * find log of number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get power sign & exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* get power mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save sign & exponent to FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save sign as sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * make sign compare (FAC1_s EOR FAC2_s)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * multiply by power"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXP                 * find exponential"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* restore number sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do - FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_GTHAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test for non zero FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_020                 * branch if null"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* (else) toggle FAC1 sign bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_020"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return +1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EX1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* +1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* +1 sign & exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do over/under flow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXOU"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * was +ve so do overflow error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else underflow so return zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* 0 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* 0 sign & exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* fraction was zero so do 2^n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXOF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* +n mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"cosout(a3)                      * test sign flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXOL                        * branch if +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * else do 1/2^n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXOL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$81,d1                 * adjust exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform EXP() (x^e)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* valid input range is -88 to +88"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EX1                 * return 1 for zero in"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$64,d0                 * compare exponent with min"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EX1                 * if smaller just return 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**      MOVEM.l d1-d6/a0,-(sp)          * save the registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"cosout"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* flag +ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$87,d0                 * compare exponent with max"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BHI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXOU                        * go do over/under flow if greater"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXCM                        * branch if less"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else is 2^7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$B00F33C7,d1           * compare mantissa with n*2^7 max"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXOU                        * if => go over/underflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXCM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXPS                        * branch if arg +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"cosout"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* flag -ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* take absolute value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXPS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now do n/LOG(2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$B8AA3B29"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 1/LOG(2) mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 1/LOG(2) exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* we know they're both +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * effectively divide by log(2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* max here is +/- 127"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now separate integer and fraction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"tpower"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear exponent add byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d5                 * normalise"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ESML                        * branch if < 1 (d5 is 0 or -ve)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* result is > 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy normalised exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6                              * make -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#32,d6                  * is now 32-d6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d1                           * just integer bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"tpower"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set exponent add byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LSL"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5,d0                           * shift out integer bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EXOF                        * fraction is zero so do 2^n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* fraction to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* multiple was < 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ESML"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$B17217F8"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* LOG(2) mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* LOG(2) exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * multiply by log(2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$82,d5                 * normalise and -2 (result is -1 to -30)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5                              * make +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5,d0                           * shift for 2 integer bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 = arg"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d6 = x, d1 = y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 = x1, d3 = y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4 = shift count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d5 = loop count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now do cordic set-up"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * y = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"#KFCTSEED"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* x = 1 with jkh inverse factored out"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_HTHET(pc),a0                * get pointer to hyperbolic arctan table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d4                           * clear shift count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* cordic loop, shifts 4 and 13 (and 39"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* if it went that far) need to be repeated"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#3,d5                           * 4 loops"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXCC                        * do loops 1 through 4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* do table entry again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* do shift count again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#9,d5                           * 10 loops"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXCC                        * do loops 4 (again) through 13"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* do table entry again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* do shift count again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#18,d5                  * 19 loops"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXCC                        * do loops 13 (again) through 31"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now get the result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"cosout(a3)                      * test sign flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXPL                        * branch if +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * do -y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"tpower(a3)                      * do -exp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXPL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$83-$100,d0            * set exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d6                           * y = y +/- x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXRN                        * branch if result normal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXNN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d6                           * shift mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXNN                        * loop if not normal"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXRN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"tpower(a3),d0           * add integer part"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**      MOVEM.l (sp)+,d1-d6/a0          * restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* cordic loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXCC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment shift count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* x1 = x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d2                           * x1 >> n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* y1 = y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d3                           * y1 >> n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test arg"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_EXAD                        * branch if -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * y = y + x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d6                           * x = x + y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+,d0                        * arg = arg - atnh(a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d5,LAB_EXCC                     * decrement and loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EXAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * y = y - x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d6                           * x = x + y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+,d0                        * arg = arg + atnh(a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d5,LAB_EXCC                     * decrement and loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* RND(n), 32 bit Galois version. make n=0 for 19th next number in sequence or n<>0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* to get 19th next number in sequence after seed n. This version of the PRNG uses"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the Galois method and a sample of 65536 bytes produced gives the following values."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Entropy = 7.997442 bits per byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Optimum compression would reduce these 65536 bytes by 0 percent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Chi square distribution for 65536 samples is 232.01, and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* randomly would exceed this value 75.00 percent of the time"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Arithmetic mean value of data bytes is 127.6724, 127.5 would be random"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Monte Carlo value for Pi is 3.122871269, error 0.60 percent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Serial correlation coefficient is -0.000370, totally uncorrelated would be 0.0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NextPRN                 * do next random number if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else get seed into random number store"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"PRNlword(a3),a0         * set PRNG pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2778                        * pack FAC1 into (a0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NextPRN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$AF-$100,d1            * set EOR value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#18,d2                  * do this 19 times"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"PRNlword"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* get current"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Ninc0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * shift left 1 bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Ninc1                           * branch if bit 32 not set"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * do Galois LFSR feedback"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Ninc1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,Ninc0                        * loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"PRNlword"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* save back to seed word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy to FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set the exponent and clear the sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * normalise FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* cordic TAN(x) routine, TAN(x) = SIN(x)/COS(x)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* x = angle in radians"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_TAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SIN                 * go do SIN/COS cordic compute"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy exponent & sign from FAC1 to FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy FAC1 mantissa to FAC2 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get COS(x) mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get COS(x) exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * do overflow if COS = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DIVIDE                      * do FAC2/FAC1 and return, FAC_sc set by SIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* COS calculation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* cordic SIN(x), COS(x) routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* x = angle in radians"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_COS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$C90FDAA3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* pi/2 mantissa (LSB is rounded up so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* COS(PI/2)=0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* pi/2 exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* sign = FAC1 sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * add FAC2 to FAC1, adjust for COS(x)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SIN/COS cordic calculator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"cosout"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set needed result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$A2F9836F"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 1/pi mantissa (LSB is rounded up so SIN(PI)=0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$7F00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 1/pi exponent & sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* sign = FAC1 sign (b7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * multiply by 1/pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCZE                        * branch if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_SNCO(pc),a0         * get pointer to constants table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* 2 radians in 360 degrees so /2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCZE                        * branch if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * normalise exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCL0                        * branch if < 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* X is > 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * is it >= 2^32"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCZE                        * may as well do zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LSL"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d6                           * shift out integer part bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CORD                        * if fraction go test quadrant and adjust"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else no fraction so do zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SCZE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$81-$100,d2            * set exponent for 1.0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d3                           * set exponent for 0.0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* mantissa for 1.0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* mantissa for 0.0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"outloop                 * go output it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* x is < 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SCL0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * make +ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1E,d0                 * is it <= 2^-30"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCZE                        * may as well do zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d6                           * shift out <= 2^-32 bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* cordic calculator, argument in d6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* table pointer in a0, returns in d0-d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CORD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy as sign compare for TAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d6                           * shift 0.5 bit into carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LTPF                        * branch if less than 0.5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* toggle result sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LTPF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d6                           * shift 0.25 bit into carry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_LTPT                        * branch if less than 0.25"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"cosout"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* toggle needed result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* toggle sign compare for TAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LTPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#2,d6                           * shift the bits back (clear integer bits)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SCZE                        * no fraction so go do zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* set start values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d5                           * set bit count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* get multiply constant (1st itteration d0)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* 1st itteration d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+,d6                        * 1st always +ve so do 1st step"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"mainloop                        * jump into routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"subloop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+,d6                        * z = z - arctan(i)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * x = x - y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * y = y + x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"nexta                           * back to main loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"mainloop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* x1 = x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5,d2                           * / (2 ^ i)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* y1 = y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5,d3                           * / (2 ^ i)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6                              * test sign (is 2^0 bit)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"subloop                 * go do subtract if > 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0)+,d6                        * z = z + arctan(i)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * x = x + y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * y = y + x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"nexta"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* i = i + 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1E,d5                 * check end condition"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"mainloop                        * loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now untangle output value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$81-$100,d2            * set exponent for 0 to .99 rec."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy it for cos output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"outloop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"cosout(a3)                      * did we want cos output?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"subexit                 * if so skip"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * swap SIN and COS mantissas"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"EXG"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,d3                           * swap SIN and COS exponents"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"subexit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set result mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set result exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * normalise FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform ATN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ATN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"RTS_021                 * ATN(0) = 0 so skip calculation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"cosout"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set result needed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$81,d0                 * compare exponent with 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ATLE                        * branch if n<1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ATGO                        * branch if n>1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * shift left"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ATLE                        * branch if n=1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ATGO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80000000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set mantissa for 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent for 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* sign compare = sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DIVIDE                      * do 1/n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"cosout"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set inverse result needed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ATLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get FAC1 mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$82,d1                 * set to correct exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3),d1           * subtract FAC1 exponent (always <= 1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d0                           * shift in two integer part bits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"TAB_ATNC(pc),a0         * get pointer to arctan table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d6                           * Z = 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"30"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* y = 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#29,d5                  * loop 30 times"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d4                           * shift counter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ATCD                        * enter loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ATNP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d2                           * x1 / 2^i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * y = y + x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a0),d6                 * z = z + atn(i)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ATCD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* x1 = x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* y1 = y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d3                           * y1 / 2^i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CATN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d0                           * x = x - y1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ATNP                        * branch if x >= 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else get x back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ASR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d3                           * y1 / 2^i"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d5,LAB_CATN                     * decrement and loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$82"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set new exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * normalise FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"cosout(a3)                      * was it > 1 ?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_021                 * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$C90FDAA2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set -(pi/2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8180"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* set exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * perform addition, FAC2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* restore sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_021"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform BITSET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BITSET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GADB                        * get two parameters for POKE or WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,d0                 * only 0 to 7 are allowed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * branch if > 7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BSET"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0,(a0)                 * set bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform BITCLR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BITCLR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GADB                        * get two parameters for POKE or WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,d0                 * only 0 to 7 are allowed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * branch if > 7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCLR"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0,(a0)                 * clear bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform BITTST()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BTST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* increment BASIC pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GADB                        * get two parameters for POKE or WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first parameter in a0, second in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$08,d0                 * only 0 to 7 are allowed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * branch if > 7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy bit # to test"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * get next BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#')',d0                 * is next character \")\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not \")\" go do syntax error, then warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * update execute pointer (to character past \")\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * set the result as zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d1,(a0)                 * test bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27DB                        * branch if zero (already correct)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d0                  * set for -1 result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27DB                        * go do SGN tail"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform USING$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"fsd"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"*   (sp) format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"fsti"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"*  4(sp) format string this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"fsli"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"*  6(sp) format string last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"fsdpi"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"*  8(sp) format string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"fsdc"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"number",
        "value":"10"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* 10(sp) format string decimal characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"fend"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"number",
        "value":"12"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"whitespace",
        "value":"                                    "
    },
    {
        "type":"comment",
        "value":"*  x(sp) end-4, fsd is popped by itself"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ofchr"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"string",
        "value":"'#'"
    },
    {
        "type":"whitespace",
        "value":"                                     "
    },
    {
        "type":"comment",
        "value":"* the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_USINGS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type, $80=string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FOER                        * if not string type go do format error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get the format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get the format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FOER                        * if null string go do format error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* clear the format string values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* clear the format string decimal characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* clear the format string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* clear the format string last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* clear the format string this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save the format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* make a null return string for the first string add"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * make a null string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* with a null pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push a string on the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* do the USING$() function next value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get the next BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U002"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * compare with comma"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not \",\" go do syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ProcFo                      * process the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the special characters flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FOER                        * if no special characters go do format error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEX                        * evaluate the expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test the data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string type go do type missmatch error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test FAC1 exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U004                        * if FAC1 = 0 skip the rounding"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"fsdc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* get the format string decimal character count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#8,d1                           * compare the fraction digit count with 8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U004                        * if >= 8 skip the rounding"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else copy the fraction digit count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * * 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d1                           * * 3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * * 6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_P_10(pc),a0         * get the rounding table base"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* get the rounding mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the rounding exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$100,d0                        * effectively divide the mantissa by 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the rounding exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear the sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ADD                 * round the value to n places"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U004"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2970                        * convert FAC1 to string - not on stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_DupFmt                      * duplicate the processed format string section"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns length in d1, pointer in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* process the number string, length in d6, decimal point index in d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Decss(a3),a2            * set the number string start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d6                           * clear the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'.',d4                 * set the decimal point character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U005"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* save the index to flag the decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U006"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get a number string character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U010                        * if null then number complete"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'E',d0                 * compare the character with an \"E\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U008                        * was sx[.x]Esxx so go handle sci notation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d0                           * compare the character with \".\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U006                        * if not decimal point go get the next digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U005                        * go save the index and get the next digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* have found an sx[.x]Esxx number, the [.x] will not be present for a single digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U008"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the index to the \"E\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 gives the last digit index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the index to the exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the exponent sign character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',d0                 * compare the exponent sign with \"-\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if it wasn't sx[.x]E-xx go do function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* call error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* found an sx[.x]E-xx number so check the exponent magnitude"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the index to the exponent 10s"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the exponent 10s character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * compare the exponent 10s with \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U009                        * if it was sx[.x]E-0x go get the exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* 1s character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#10,d0                  * else start writing at index 10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00A                        * go copy the digits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* found an sx[.x]E-0x number so get the exponent magnitude"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U009"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the index to the exponent 1s"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0F,d0                 * set the mask for the exponent 1s digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"(a2,d6.w),d0            * get and convert the exponent 1s digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U00A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the number last digit index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* is the number of the form sxE-0x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00B                        * if it is sx.xE-0x skip the increment"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else make room for the decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add 1 to the write index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U00B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * add the exponent 1s to the write index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#10,d0                  * set the maximum write index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d0                           * compare the index with the maximum"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGT.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00C                        * if the index < the maximum continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * else set the index to the maximum"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d3                           * adjust the read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare the adjusted index with 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGT.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00C                        * if > 1 continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d3                           * else allow for the decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U00C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"d2,d6                           * copy the write index as the number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d0                           * clear d0 to null terminate the number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U00D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the character to the number string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the number write index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* compare the number write index with 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00F                        * if at the decimal point go save it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* else write a digit to the number string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * default to \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3                              * test the number read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00D                        * if zero just go save the \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U00E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* read the next number digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the read index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d0                           * compare the digit with \".\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00D                        * if not \".\" go save the digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U00E                        * else go get the next digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U00F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U010"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the number string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U014                        * if dp present skip the reset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* make the decimal point index = the length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* copy the fractional digit characters from the number string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U014"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the number string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"fsdpi"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the new format string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U018"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the new format string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d1                           * compare it with the new format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U022                        * if done the fraction digits go do integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get a new format string character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'%',d0                 * compare it with \"%\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U01C                        * if \"%\" go copy a number character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'#',d0                 * compare it with \"#\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U018                        * if not \"#\" go do the next new format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U01C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * default to \"0\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d6                           * compare the number string index with length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U020                        * if there skip the character get"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get a character from the number string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U020"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the number character to the new format"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U018                        * go do the next new format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now copy the integer digit characters from the number string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U022"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d6                           * clear the sign done flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d5                           * clear the sign present flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U026                        * if not now at sign continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d2                           * increment the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'0'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* replace the point with a zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U026"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"fsdpi"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the new format string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d1                           * compare it with the new format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U02A                        * if within the string go use the index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else set the index to the end of the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U02A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the new format string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U03E                        * if all done go test for any overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* else get a new format string character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d7                 * default to \"0\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'%',d0                 * compare it with \"%\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U02B                        * if \"%\" go copy a number character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#' ',d7                 * default to \" \" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'#',d0                 * compare it with \"#\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U02C                        * if not \"#\" go try \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U02B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U036                        * if not at the sign go get a number character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U03C                        * else go save the default character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U02C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * compare it with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U030                        * if not \",\" go try the sign characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U02E                        * if not at the sign keep the \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'%',-1(a0,d4.w)                * else compare the next format string character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* with \"%\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U03C                        * if not \"%\" keep the default character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U02E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else use the \",\" character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U03C                        * go save the character to the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U030"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',d0                 * compare it with \"-\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U034                        * if \"-\" go do the sign character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'+',d0                 * compare it with \"+\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U02A                        * if not \"+\" go do the next new format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',(a2)                       * compare the sign character with \"-\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U034                        * if \"-\" don't change the sign character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'+'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* else make the sign character \"+\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U034"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set the sign present flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U038                        * if at the sign keep the default character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U036"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* else get a character from the number string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U03C                        * go save the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U038"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6                              * test the sign done flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U03C                        * if the sign has been done go use the space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a2"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* else get the sign character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* flag that the sign has been done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U03C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the number character to the new format"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U02A                        * go do the next new format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* test for overflow conditions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U03E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the number string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U040                        * if all the digits aren't done go output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* an overflow indication"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* test for sign overflows"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5                              * test the sign present flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U04A                        * if no sign present go add the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* there was a sign in the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6                              * test the sign done flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U04A                        * if the sign is done go add the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the sign isn't done so see if it was mandatory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'+'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare the sign with \"+\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U040                        * if it was \"+\" go output an overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* indication"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the sign wasn't mandatory but the number may have been negative"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',(a2)                       * compare the sign character with \"-\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U04A                        * if it wasn't \"-\" go add the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* else the sign was \"-\" and a sign hasn't been output so .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* the number overflowed the format string so replace all the special format characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* with the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U040"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#ofchr,d5                       * set the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the new format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* adjust for the loop type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"fsti"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* copy the new format string last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* -1 gives the last character of this string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGT.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U044                        * if not zero continue"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else set the format string index to the end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U044"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get a character from the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'#'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare it with \"#\" special format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U046                        * if \"#\" go use the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'%'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare it with \"%\" special format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U046                        * if \"%\" go use the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"','"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare it with \",\" special format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U046                        * if \",\" go use the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'+'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare it with \"+\" special format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U046                        * if \"+\" go use the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'-'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare it with \"-\" special format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U046                        * if \"-\" go use the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"string",
        "value":"'.'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* compare it with \".\" special format character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U048                        * if not \".\" skip the using overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U046"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* use the overflow character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U048"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save the character to the new format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement the format string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d7,LAB_U044                     * decrement the count and loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* add the new string to the previous string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U04A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"6(a4),a0                        * get the descriptor pointer for string 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the descriptor pointer for string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_224E                        * concatenate the strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now check for any tail on the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"fsti"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* get this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U04C                        * if at start of string skip the output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"fsli"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save this index to the last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_ProcFo                      * now process the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test the special characters flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_U04C                        * if special characters present skip the output"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* else output the new string part"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_DupFmt                      * duplicate the processed format string section"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"fsti"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"fsli"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* copy this index to the last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* add the new string to the previous string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"6(a4),a0                        * get the descriptor pointer for string 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the descriptor pointer for string 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_224E                        * concatenate the strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check for another value or end of function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_U04C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get the next BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#')',d0                 * compare with close bracket"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_U002                        * if not \")\" go do next value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* pop the result string off the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the result string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22BA                        * pop (a0) descriptor, returns with .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Sstorl"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* restore the bottom of string space"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the string result pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the string result length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* pop the format string off the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pull the format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_22BA                        * pop (a0) descriptor, returns with .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* d0 = length, a0 = pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"fend(sp),sp                     * dump the saved values"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* push the result string back on the descriptor stack and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the result string pointer back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push a string on the descriptor stack and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return. a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* duplicate the processed format string section"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* make a string as long as the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DupFmt"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsd"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get the format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsli"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get the format string last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsti"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get the format string this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the format string this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d1                           * subtract the format string last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BHI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_D002                        * if > 0 skip the correction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d7,d1                           * else add the format string length as the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* correction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_D002"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2115                        * make string space d1 bytes long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return a0/Sutill = pointer, others unchanged"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* push the new string on the descriptor stack"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_RTST                        * push a string on the descriptor stack and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* return. a0 = pointer, d1 = length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* copy the characters from the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsd"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get the format string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d4                           * clear the new string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_D00A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"* get a character from the format string and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* save it to the new string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the new string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the format string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d7                           * compare the format index with the length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_D00E                        * if not there skip the reset"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d2                           * else reset the format string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_D00E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d6                           * compare the index with this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_D00A                        * if not equal go do the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"**************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* process the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ProcFo"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsd"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get the format string descriptor pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* get the format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EA.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get the format string pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsli"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get the format string last index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d7"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsdpi"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* set the format string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*##     MOVE.w  #-1,4+fsdpi(sp)         * set the format string decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d5                           * no decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d3                           * no decimal characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d2                           * no special characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P004"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* get a format string byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * compare it with \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P01A                        * if \",\" go do the next format string byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'#',d0                 * compare it with \"#\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P008                        * if \"#\" go flag special characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'%',d0                 * compare it with \"%\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P00C                        * if not \"%\" go try \"+\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P008"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5                              * test the decimal point flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P00E                        * if no point skip counting decimal characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else increment the decimal character count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P01A                        * go do the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P00C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'+',d0                 * compare it with \"+\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P00E                        * if \"+\" go flag special characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',d0                 * compare it with \"-\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P010                        * if not \"-\" go check decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P00E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * flag special characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P01A                        * go do the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P010"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'.',d0                 * compare it with \".\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P018                        * if not \".\" go check next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* \".\" a decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d5                              * if there is already a decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P01A                        * go do the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"4+fsli(sp),d0           * calculate it from the scan start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsdpi"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* save the decimal point index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-1,d5                  * flag decimal point"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * flag special characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P01A                        * go do the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* was not a special character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P018"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2                              * test if there have been special characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P01E                        * if so exit the format string process"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P01A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment the format string index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d6,d7                           * compare it with the format string length"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BHI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_P004                        * if length > index go get the next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d6                           * length = index so reset the format string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P01E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d6"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsti"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the format string this index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"fsdc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save the format string decimal characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform BIN$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* # of leading 0s is in d1, the number is in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BINS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$21,d1                 * max + 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * exit if too big ( > or = )"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1F,d2                 * bit count-1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Binss(a3),a0            * point to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$30,d4                 * \"0\" character for ADDX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NextB1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d3                           * clear byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * shift bit into Xb"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"X.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add carry and character to zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save character to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,NextB1                       * decrement and loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this is the exit code and is also used by HEX$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"EndBHS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"BHsend"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* null terminate the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test # of characters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NextB2                  * go truncate string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * make -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#BHsend,d1                      * effectively (end-length)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"0(a3,d1.w),a0           * effectively add (end-length) to pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"BinPr                           * go print string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* truncate string to remove leading \"0\"s"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NextB2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* get byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"BinPr                           * if null then end of string so add 1 and go"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* print it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * compare with \"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GoPr                            * if not \"0\" then go print string from here"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"NextB2                  * loop always"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* make fixed length output string - ignore overflows!"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"BinPr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"BHsend(a3),a1           * get string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":"A.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* are we at the string end"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"GoPr                            * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* else need at least one zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"GoPr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_20AE                        * print \" terminated string to FAC1, stack & RET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform HEX$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* # of leading 0s is in d1, the number is in d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_HEXS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$09,d1                 * max + 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * exit if too big ( > or = )"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$07,d2                 * nibble count-1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"Hexss(a3),a0            * point to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$30,d4                 * \"0\" character for ABCD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"NextH1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy lowest byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ROR"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#4,d0                           * shift nibble into 0-3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$0F,d3                 * just this nibble"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$F6,d5                 * set extend bit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"ABCD"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d4,d3                           * decimal add extend and character to zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save character to string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d2,NextH1                       * decrement and loop if not done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"EndBHS                  * go process string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ctrl-c check routine. includes limited \"life\" byte save for INGET routine"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VEC_CC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"ccflag(a3)                      * check [CTRL-C] check flag"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_022                 * exit if [CTRL-C] check inhibited"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_INPT(a3)                      * scan input device"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_FBA0                        * exit if buffer empty"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"ccbyte"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save received byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$20"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"ccnull"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set \"life\" timer for bytes countdown"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1636                        * return to BASIC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FBA0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"ccnull(a3)                      * get countdown byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_022                 * exit if finished"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"ccnull"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* else decrement countdown"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_022"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get byte from input device, no waiting"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* returns with carry set if byte in A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"INGET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"JS"
    },
    {
        "type":"invalid",
        "value":"R"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"V_INPT(a3)                      * call scan input device"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_FB95                        * if byte go reset timer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"ccnull"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get countdown"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_022                 * exit if empty"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"ccbyte"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get last received byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FB95"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$00"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"ccnull"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* clear timer because we got a byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,CCR                  * set carry, flag we got a byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform MAX()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MAX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEZ                        * evaluate expression (no decrement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string do Type missmatch Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MAXN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_PHFA                        * push FAC1, evaluate expression,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pull FAC2 & compare with FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MAXN                        * branch if no swap to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_279B                        * copy FAC2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MAXN                        * go do next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform MIN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEZ                        * evaluate expression (no decrement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string do Type missmatch Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MINN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_PHFA                        * push FAC1, evaluate expression,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pull FAC2 & compare with FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MINN                        * branch if no swap to do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_279B                        * copy FAC2 to FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MINN                        * go do next (branch always)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* exit routine. don't bother returning to the loop code"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check for correct exit, else so syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_MMEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#')',d0                 * is it end of function?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not do MAX MIN syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"4(sp),sp                        * dump return address (faster)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * update BASIC execute pointer (to chr past \")\")"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* and return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* check for next, evaluate & return or exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this is the routine that does most of the work"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PHFA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * get next BASIC byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * is there more ?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_MMEC                        * if not go do end check"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* push mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_EVEZ                        * evaluate expression (no decrement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"Dtypef(a3)                      * test data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_TMER                        * if string do Type missmatch Error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* pop FAC2 (MAX/MIN expression so far)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* pop mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* pop exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* get FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,FAC_sc(a3)           * EOR to create sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_27FA                        * compare FAC1 with FAC2 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=+1 Cb=0 if FAC1 > FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0= 0 Cb=0 if FAC1 = FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* returns d0=-1 Cb=1 if FAC1 < FAC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform WIDTH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_WDTH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * is next byte \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_TBSZ                        * if so do tab size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GTBY                        * get byte parameter, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_NSTT                        * branch if set for infinite line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$10,d0                 * else make min width = 16d"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if less do function call error & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this next compare ensures that we can't exit WIDTH via an error leaving the"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* tab size greater than the line length."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d0           * compare with tab size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_NSTT                        * branch if >= tab size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TabSiz"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* else make tab size = terminal width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NSTT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TWidth"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set the terminal width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * get BASIC byte back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"WExit                           * exit if no following"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#',',d0                 * else is it \",\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * if not do syntax error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_TBSZ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SGBY                        * increment and get byte, result in d0 and Itemp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * test TAB size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if >127 do function call error & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * compare with min-1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if <=1 do function call error & exit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TWidth"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set flags for width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SVTB                        * skip check if infinite line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TWidth(a3),d0           * compare TAB with width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGT"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * branch if too big"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SVTB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TabSiz"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save TAB size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* calculate tab column limit from TAB size. The Iclim is set to the last tab"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* position on a line that still has at least one whole tab width between it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* and the end of the line."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"WExit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"TWidth"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_WDLP                        * branch if infinite line"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d0           * compare with tab size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_WDLP                        * branch if >= tab size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TabSiz"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* else make tab size = terminal width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_WDLP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d0           * subtract tab size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_WDLP                        * loop while no borrow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d0           * add tab size back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TabSiz(a3),d0           * add tab size back again"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0                              * make -ve"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"TWidth(a3),d0           * subtract remainder from width"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Iclim"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* save tab column limit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_023"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform SQR()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 is number to find the root of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1 is the root result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 is the remainder"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3 is a counter"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4 is temp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SQR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_s(a3)                      * test FAC1 sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_FCER                        * if -ve do function call error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"FAC1_e(a3)                      * test exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_023                 * exit if zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* copy FAC1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d2                           * clear remainder"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear root"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$1F,d3                 * $1F for DBF, 64 pairs of bits to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* do for a 32 bit result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BTS"
    },
    {
        "type":"invalid",
        "value":"T"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#0,FAC1_e(a3)           * test exponent odd/even"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SQE2                        * if odd only 1 shift first time"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SQE1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * shift highest bit of number .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"X.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* .. into remainder .. never overflows"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * root = root * 2 .. never overflows"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SQE2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d0                           * shift highest bit of number .."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"X.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* .. into remainder .. never overflows"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy root"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d4                           * 2n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* 2n+1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d2                           * compare 2n+1 to remainder"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SQNS                        * skip sub if remainder smaller"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4,d2                           * subtract temp from remainder"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment root"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SQNS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"F"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d3,LAB_SQE1                     * loop if not all done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save result mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* get exponent (d0 is clear here)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * normalise"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"LSR.w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#1,d0                           * /2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_SQNA                        * skip increment if carry clear"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* add bit zero back in (allow for half shift)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SQNA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".w"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$80,d0                 * re-bias to $80"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_24D5                        * normalise FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform VARPTR()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_VARPTR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a5"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* increment pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_VARCALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GVAR                        * get variable address in a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_1BFB                        * scan for \")\", else do syntax error/warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy the variable address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform RAMBASE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"ram_base(a3),a0         * get start of EhBASIC RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_AYFC                        * convert d0 to signed longword in FAC1 & return"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform PI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_PI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$C90FDAA2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* pi mantissa (32 bit)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8200"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* pi exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* perform TWOPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_TWOPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$C90FDAA2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* 2pi mantissa (32 bit)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.w"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$8300"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"comment",
        "value":"* 2pi exponent and sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get ASCII string equivalent into FAC1 as integer32 or float"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* entry is with a5 pointing to the first character of the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* exit with a5 pointing to the first character after the string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d0 is character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d1 is mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d2 is partial and table mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d3 is mantissa exponent (decimal & binary)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* d4 is decimal exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get FAC1 from string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* this routine now handles hex and binary values from strings"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* starting with \"$\" and \"%\" respectively"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2887"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* save registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$00,d1                 * clear temp accumulator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* set mantissa decimal exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear decimal exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear sign byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* set float data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"expneg"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* clear exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_GBYT                        * get first byte back"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_28FE                        * go get floating if 1st character numeric"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',d0                 * or is it -ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_289A                        * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set sign byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_289C                        * now go scan & check for hex/bin/int"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_289A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* first character wasn't numeric or -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'+',d0                 * compare with '+'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_289D                        * branch if not '+' (go check for '.'/hex/binary"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* /integer)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_289C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was \"+\" or \"-\" to start, so get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_28FE                        * branch if numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_289D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'.',d0                 * else compare with '.'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2904                        * branch if '.'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* code here for hex/binary/integer numbers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'$',d0                 * compare with '$'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CHEX                        * branch if '$'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'%',d0                 * else compare with '%'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_CBIN                        * branch if '%'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2Y01                        * not #.$%& so return 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_28FD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2902                        * exit loop if not a digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_28FE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1x10                           * multiply d1 by 10 and add character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_28FD                        * loop for more if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_28FF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* overflowed mantissa, count 10s exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment mantissa decimal exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_28FF                        * loop while numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* done overflow, now flush fraction or do E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'.',d0                 * else compare with '.'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2901                        * branch if not '.'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2900"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* flush remaining fraction digits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_2900                        * loop while numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2901"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* done number, only (possible) exponent remains"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'E',d0                 * else compare with 'E'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2Y01                        * if not 'E' all done, go evaluate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* process exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X04                        * branch if digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'-',d0                 * or is it -ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X01                        * branch if so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_MINUS,d0            * or is it -ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X02                        * branch if not"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2X01"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$FF"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"expneg"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X03                        * now go scan & check exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2X02"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'+',d0                 * or is it +ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X03                        * branch if so"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#TK_PLUS,d0                     * or is it +ve number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BNE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_SNER                        * wasn't - + TK_MINUS TK_PLUS or # so do error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2X03"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2Y01                        * if not digit all done, go evaluate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2X04"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"U"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#10,d4                  * multiply decimal exponent by 10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$FF,d0                 * mask character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * convert to value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d4                           * add to decimal exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#48,d4                  * compare with decimal exponent limit+10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLE.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X03                        * loop if no overflow/underflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2X05"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* exponent value has overflowed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2X05                        * loop while numeric digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2Y01                        * all done, go evaluate"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2902"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'.',d0                 * else compare with '.'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2904                        * branch if was '.'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2901                        * branch if not '.' (go check/do 'E')"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2903"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement mantissa decimal exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2904"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* was dp so get fraction part"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2901                        * exit loop if not a digit (go check/do 'E')"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"d1x10                           * multiply d1 by 10 and add character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2903                        * loop for more if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2900                        * else go flush remaining fraction part"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2Y01"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now evaluate result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"expneg(a3)                      * test exponent sign"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BPL.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2Y02                        * branch if sign positive"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4                              * negate decimal exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2Y02"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d3,d4                           * add mantissa decimal exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#32,d3                  * set up max binary exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_rtn0                        * if mantissa=0 return 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_2Y04                        * branch if already mormalised"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement bianry exponent for DBMI loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2Y03"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * shift mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"MI"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d3,LAB_2Y03                     * decrement & loop if not normalised"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* ensure not too big or small"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2Y04"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#38,d4                  * compare decimal exponent with max exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BGT"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * if greater do overflow error and warm start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#-38,d4                 * compare decimal exponent with min exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BLT.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ret0                        * if less just return zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"NEG"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d4                              * negate decimal exponent to go right way"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MUL"
    },
    {
        "type":"invalid",
        "value":"S"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#6,d4                           * 6 bytes per entry"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* save register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"LEA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_P_10(pc),a0         * point to table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"comment",
        "value":"* copy exponent for multiply"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d4.w"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC2_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* copy table mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* restore register"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* normalise input exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save input mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save input exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"FAC1_s"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC_sc"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"* set sign as sign compare"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_MULTIPLY            * go multiply input by table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ret0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#0,d1                           * clear mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_rtn0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* clear exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* $ for hex add-on"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* gets here if the first character was \"$\" for hex"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get hex number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CHEX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$40"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set integer numeric data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#32,d3                  * set up max binary exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CHXX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_ISHN                        * branch if numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * case convert, allow \"A\" to \"F\" and \"a\" to \"f\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'a',d0                 * subtract \"a\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * exit if <\"a\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$06,d0                 * compare normalised with $06 (max+1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * exit if >\"f\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$3A,d0                 * convert to nibble+\"0\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ISHN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1x16                           * multiply d1 by 16 and add the character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHXX                        * loop for more if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* overflowed mantissa, count 16s exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CHX1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment mantissa exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BVS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * do overflow error if overflowed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX1                        * loop while numeric character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"#$20,d0                 * case convert, allow \"A\" to \"F\" and \"a\" to \"f\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'a',d0                 * subtract \"a\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * exit if <\"a\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$06,d0                 * compare normalised with $06 (max+1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX1                        * loop if <=\"f\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* now return value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CHX3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"TST.l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1                              * test mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BEQ.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_rtn0                        * if mantissa=0 return 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BMI.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_exxf                        * branch if already mormalised"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* decrement bianry exponent for DBMI loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CHX2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d1                           * shift mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"DB"
    },
    {
        "type":"invalid",
        "value":"MI"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"d3,LAB_CHX2                     * decrement & loop if not normalised"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_exxf"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"E"
    },
    {
        "type":"keyword",
        "value":"OR"
    },
    {
        "type":"invalid",
        "value":"I.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$80"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* normalise exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_e"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"FAC1_m"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* save mantissa"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EM.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"register",
        "value":"sp"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"d5"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* restore registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_024"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* % for binary add-on"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* gets here if the first character was \"%\" for binary"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* get binary number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CBIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.b"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"number",
        "value":"#$40"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"Dtypef"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a3"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* set integer numeric data type"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"EQ"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#32,d3                  * set up max binary exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CBXN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * increment & scan memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * if not numeric character go return value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'2',d0                 * compare with \"2\" (max+1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * if >=\"2\" go return value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"invalid",
        "value":".s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1x02                           * multiply d1 by 2 and add character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CBXN                        * loop for more if no overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* overflowed mantissa, count 2s exponent"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CBX1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":"Q.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* increment mantissa exponent count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BVS"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_OFER                        * do overflow error if overflowed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"BSR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"LAB_IGBY                        * get next character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * if not numeric character go return value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"CMP"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'2',d0                 * compare with \"2\" (max+1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CBX1                        * loop if <\"2\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BRA.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"LAB_CHX3                        * if not numeric character go return value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* half way decent times 16 and times 2 with overflow checks"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"d1x16"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * times two"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_024                 * return if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * times four"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_024                 * return if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * times eight"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_024                 * return if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"d1x02"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * times sixteen (ten/two)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_024                 * return if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* now add in new digit"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"AND"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#$FF,d0                 * mask character"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"SUB"
    },
    {
        "type":"invalid",
        "value":".b"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"#'0',d0                 * convert to value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d0,d2                           * add to result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_024                 * return if overflow, it should never ever do"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"                                                        "
    },
    {
        "type":"comment",
        "value":"* this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy result"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* half way decent times 10 with overflow checks"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"d1x10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"MOV"
    },
    {
        "type":"invalid",
        "value":"E.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"whitespace",
        "value":"                           "
    },
    {
        "type":"comment",
        "value":"* copy value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * times two"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_025                 * return if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d2,d2                           * times four"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCS.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"RTS_025                 * return if overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"ADD"
    },
    {
        "type":"invalid",
        "value":".l"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1,d2                           * times five"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"BCC.s"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"d1x02                           * do times two and add in new digit if ok"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"RTS_025"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* token values needed for BASIC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_END"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"$80"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $80"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_FOR"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_END"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $81"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_NEXT"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_FOR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $82"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DATA"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_NEXT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $83"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_INPUT"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DATA"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $84"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DIM"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_INPUT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $85"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_READ"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DIM"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $86"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LET"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_READ"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $87"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DEC"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LET"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $88"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_GOTO"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DEC"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $89"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RUN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_GOTO"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $8A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_IF"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RUN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $8B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RESTORE"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_IF"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $8C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_GOSUB"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RESTORE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"comment",
        "value":"* $8D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RETURN"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_GOSUB"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $8E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_REM"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RETURN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $8F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_STOP"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_REM"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $90"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_ON"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_STOP"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $91"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_NULL"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_ON"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $92"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_INC"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_NULL"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $93"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_WAIT"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_INC"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $94"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LOAD"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_WAIT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $95"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SAVE"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LOAD"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $96"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DEF"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SAVE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $97"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_POKE"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DEF"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $98"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DOKE"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_POKE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $99"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LOKE"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DOKE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $9A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_CALL"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LOKE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $9B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DO"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_CALL"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $9C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LOOP"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DO"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $9D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_PRINT"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LOOP"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $9E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_CONT"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_PRINT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $9F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LIST"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_CONT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $A0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_CLEAR"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LIST"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $A1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_NEW"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_CLEAR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $A2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_WIDTH"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_NEW"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $A3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_GET"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_WIDTH"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $A4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SWAP"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_GET"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $A5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_BITSET"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SWAP"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $A6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_BITCLR"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_BITSET"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $A7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_TAB"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_BITCLR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $A8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_ELSE"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_TAB"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $A9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_TO"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_ELSE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $AA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_FN"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_TO"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $AB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SPC"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_FN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $AC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_THEN"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SPC"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $AD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_NOT"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_THEN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $AE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_STEP"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_NOT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $AF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_UNTIL"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_STEP"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $B0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_WHILE"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_UNTIL"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $B1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_PLUS"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_WHILE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $B2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_MINUS"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_PLUS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $B3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_MULT"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MINUS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $B4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DIV"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MULT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $B5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_POWER"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DIV"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $B6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_AND"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_POWER"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $B7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_EOR"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_AND"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $B8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_OR"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_EOR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $B9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RSHIFT"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_OR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $BA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LSHIFT"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RSHIFT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $BB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_GT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LSHIFT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $BC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_EQUAL"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_GT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $BD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_EQUAL"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $BE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SGN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $BF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_INT"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SGN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_ABS"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_INT"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_USR"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_ABS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_FRE"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_USR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_POS"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_FRE"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SQR"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_POS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RND"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SQR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LOG"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RND"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_EXP"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LOG"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_COS"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_EXP"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $C9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SIN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_COS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $CA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_TAN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SIN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $CB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_ATN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_TAN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $CC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_PEEK"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_ATN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $CD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_DEEK"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_PEEK"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $CE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LEEK"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DEEK"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $CF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LEN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LEEK"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $D0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_STRS"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LEN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $D1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_VAL"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_STRS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $D2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_ASC"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_VAL"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $D3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_UCASES"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_ASC"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $D4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LCASES"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_UCASES"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $D5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_CHRS"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LCASES"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $D6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_HEXS"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_CHRS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $D7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_BINS"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_HEXS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $D8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_BITTST"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_BINS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $D9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_MAX"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_BITTST"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $DA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_MIN"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MAX"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $DB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RAM"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MIN"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $DC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_PI"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RAM"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* $DD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_TWOPI"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_PI"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                     "
    },
    {
        "type":"comment",
        "value":"* $DE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_VPTR"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_TWOPI"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $DF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_SADD"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_VPTR"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $E0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_LEFTS"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_SADD"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $E1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_RIGHTS"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LEFTS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"          "
    },
    {
        "type":"comment",
        "value":"* $E2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_MIDS"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_RIGHTS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"* $E3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TK_USINGS"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"EQU"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MIDS"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"* $E4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* binary to unsigned decimal table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Bin2dec"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$3B9ACA00"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 1000000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$05F5E100"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 100000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00989680"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 10000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000F4240"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 1000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000186A0"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 100000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00002710"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 10000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000003E8"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 1000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000064"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 100"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000000A"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 0 end marker"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RSED"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$332E3232"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 858665522"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* string to value exponent table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"255"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**38"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$96769951"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"251"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**37"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$F0BDC21B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"248"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**36"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C097CE7C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"245"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**35"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9A130B96"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"241"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**34"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$F684DF57"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"238"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**33"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C5371912"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"235"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**32"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9DC5ADA8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"231"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**31"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FC6F7C40"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"228"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**30"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C9F2C9CD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"225"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**29"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A18F07D7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"222"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**28"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$813F3979"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"218"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**27"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$CECB8F28"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"215"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**26"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A56FA5BA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"212"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**25"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$84595161"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"208"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**24"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$D3C21BCF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"205"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**23"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A968163F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"202"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**22"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$87867832"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"198"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**21"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$D8D726B7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"195"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**20"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$AD78EBC6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"192"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**19"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$8AC72305"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"188"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**18"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$DE0B6B3A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"185"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**17"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$B1A2BC2F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"182"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**16"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$8E1BC9BF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"178"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**15"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$E35FA932"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"175"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**14"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$B5E620F5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"172"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**13"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9184E72A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"168"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**12"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$E8D4A510"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"165"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**11"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$BA43B740"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"162"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9502F900"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"158"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$EE6B2800"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"155"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$BEBC2000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"152"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$98968000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"148"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$F4240000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"145"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C3500000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"142"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9C400000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"138"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FA000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"135"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C8000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"132"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A0000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_P_10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"129"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$80000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"125"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$CCCCCCCD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"122"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A3D70A3D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"119"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$83126E98"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"115"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$D1B71759"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"112"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A7C5AC47"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"109"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$8637BD06"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"105"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$D6BF94D6"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"102"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                          "
    },
    {
        "type":"comment",
        "value":"* 10**-8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$ABCC7712"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"99"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-9"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$89705F41"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"95"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$DBE6FECF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"92"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-11"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$AFEBFF0C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"89"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-12"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$8CBCCC09"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"85"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-13"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$E12E1342"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"82"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-14"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$B424DC35"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"79"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-15"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$901D7CF7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"75"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-16"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$E69594BF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"72"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-17"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$B877AA32"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"69"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-18"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9392EE8F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"65"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-19"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$EC1E4A7E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"62"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-20"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$BCE50865"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"59"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-21"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$971DA050"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"55"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-22"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$F1C90081"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"52"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-23"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C16D9A01"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"49"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-24"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9ABE14CD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"45"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-25"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$F79687AE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"42"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-26"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$C6120625"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"39"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-27"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$9E74D1B8"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"35"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-28"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FD87B5F3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"32"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-29"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$CAD2F7F5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"29"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-30"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A2425FF7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"26"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-31"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$81CEB32C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"22"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-32"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$CFB11EAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"19"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-33"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$A6274BBE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"16"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-34"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$84EC3C98"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"12"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* 10**-35"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$D4AD2DC0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"9"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                    "
    },
    {
        "type":"comment",
        "value":"* 10**-36"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$AA242499"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"6"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                    "
    },
    {
        "type":"comment",
        "value":"* 10**-37"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$881CEA14"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"8"
    },
    {
        "type":"whitespace",
        "value":"                                    "
    },
    {
        "type":"comment",
        "value":"* 10**-38"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$D9C7DCED"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* table of constants for cordic SIN/COS/TAN calculations"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* constants are un normalised fractions and are atn(2^-i)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$4DBA76D4"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* SIN/COS multiply constant"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_SNCO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$20000000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^0)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$12E4051E"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^1)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$09FB385C"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^2)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$051111D5"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^3)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$028B0D44"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^4)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0145D7E2"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^5)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00A2F61F"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^6)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00517C56"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^7)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0028BE54"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^8)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00145F2F"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^9)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000A2F99"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^10)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000517CD"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^11)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00028BE7"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^12)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000145F4"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^13)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000A2FA"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^14)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000517D"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^15)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000028BF"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^16)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00001460"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^17)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000A30"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^18)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000518"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^19)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000028C"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^20)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000146"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^21)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000000A3"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^22)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000052"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^23)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000029"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^24)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000015"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^25)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000000B"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^26)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000006"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^27)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000003"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^28)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000002"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^29)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000001"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^30)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000001"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^31)/2pi"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* table of constants for cordic ATN calculation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* constants are normalised to two integer bits and are atn(2^-i)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ATNC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$1DAC6705"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0FADBAFD"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-2)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$07F56EA7"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-3)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$03FEAB77"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-4)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$01FFD55C"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00FFFAAB"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-6)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$007FFF55"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$003FFFEB"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-8)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$001FFFFD"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-9)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00100000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-10)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00080000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-11)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00040000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-12)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00020000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-13)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00010000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-14)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00008000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-15)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00004000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-16)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00002000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-17)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00001000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-18)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000800"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-19)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000400"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-20)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000200"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-21)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000100"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-22)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000080"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-23)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000040"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-24)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000020"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-25)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000010"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-26)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000008"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-27)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000004"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-28)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000002"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-29)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000001"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-30)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_1D96"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-31)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000000"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* atn(2^-32)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* constants are normalised to n integer bits and are tanh(2^-i)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"n"
    },
    {
        "type":"whitespace",
        "value":"       "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_HTHET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$2327d4f4"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-1) .549306144"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$1058aefa"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-2) .255412812"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$080ac48e"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-3)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$04015622"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-4)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$02002ab0"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$01000554"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-6)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$008000aa"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00400014"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-8)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00200002"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-9)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00100000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-10)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00080000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-11)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00040000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-12)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00020000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-13)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00010000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-14)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00008000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-15)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00004000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-16)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00002000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-17)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00001000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-18)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000800"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-19)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000400"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-20)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000200"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-21)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000100"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-22)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000080"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-23)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000040"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-24)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000020"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-25)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000010"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-26)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000008"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-27)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000004"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-28)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000002"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-29)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000001"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-30)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-31)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00000000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* atnh(2^-32)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KFCTSEED"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"comment",
        "value":"$26A3D110               * $26A3D110"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* command vector table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CTBL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_END"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* END"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_FOR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_NEXT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DATA"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_INPUT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DIM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* DIM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_READ"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LET"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DEC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_GOTO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RUN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* RUN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_IF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RESTORE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* RESTORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_GOSUB"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RETURN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_REM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* REM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_STOP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ON"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* ON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_NULL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* NULL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_INC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_WAIT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LOAD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SAVE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DEF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* DEF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_POKE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* POKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DOKE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LOKE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_CALL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LOOP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PRINT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_CONT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CONT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LIST"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LIST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_CLEAR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* CLEAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_NEW"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* NEW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_WDTH"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* WIDTH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_GET"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* GET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SWAP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BITSET"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* BITSET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BITCLR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_CTBL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* BITCLR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* function pre process routine table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FTPP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SGN(n)        process numeric expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* INT(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* ABS(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_EVEZ"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* USR(x)        process any expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_1BF7"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* FRE(x)        process any expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_1BF7"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* POS(x)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SQR(n)        process numeric expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* RND(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOG(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* EXP(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* COS(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SIN(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* TAN(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* ATN(n)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* PEEK(n)               \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DEEK(n)               \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEEK(n)               \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEN($)        process string expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* STR$(n)       process numeric expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* VAL($)        process string expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* ASC($)                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* UCASE$($)             \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LCASE$($)             \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPFN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CHR$(n)       process numeric expression in ()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BHSS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* HEX$()        bin/hex pre process"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BHSS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* BIN$()                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* BITTST()      none"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* MAX()         \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* MIN()         \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPBI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* RAMBASE       advance pointer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPBI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* PI                    \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PPBI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* TWOPI         \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* VARPTR()      none"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* SADD()                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LRMS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEFT$()       process string expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LRMS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* RIGHT$()              \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LRMS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* MID$()                \""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_EVEZ"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTPP"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* USING$(x)     process any expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* action addresses for functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FTBL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SGN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SGN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_INT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* INT()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ABS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* ABS()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_USR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* USR()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_FRE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* FRE()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_POS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* POS()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SQR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SQR()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RND"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* RND()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LOG"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LOG()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_EXP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* EXP()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_COS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* COS()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SIN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SIN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_TAN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* TAN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ATN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* ATN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PEEK"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* PEEK()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DEEK"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DEEK()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LEEK"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEEK()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LENS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_STRS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* STR$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_VAL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* VAL()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ASC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* ASC()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_UCASE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* UCASE$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LCASE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* LCASE$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_CHRS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CHR$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_HEXS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* HEX$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BINS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* BIN$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BTST"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* BITTST()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_MAX"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* MAX()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_MIN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* MIN()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RAM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* RAMBASE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_PI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* PI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_TWOPI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* TWOPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_VARPTR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* VARPTR()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SADD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SADD()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LEFT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEFT$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RIGHT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* RIGHT$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_MIDS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* MID$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_USINGS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_FTBL"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* USING$()"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* hierarchy and action addresses for operator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0079"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* +"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ADD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0079"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SUBTRACT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$007B"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_MULTIPLY"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$007B"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* /"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DIVIDE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$007F"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* ^"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_POWER"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0050"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_AND"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0046"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_EOR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0046"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_OR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0056"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* >>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RSHIFT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0056"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* <<"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LSHIFT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$007D"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* >"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_GTHAN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* used to evaluate -n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$005A"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* ="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_EQUAL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* used to evaluate NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0064"
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"* <"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LTHAN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_OPPT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* misc constants"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* This table is used in converting numbers to ASCII."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* first four entries for expansion to 9.25 digits"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A9A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FFF0BDC0"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* -1000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000186A0"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 100000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FFFFD8F0"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* -10000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$000003E8"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 1000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FFFFFF9C"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* -100"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0000000A"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* 10"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$FFFFFFFF"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* -1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_2A9B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* new keyword tables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* offsets to keyword tables"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_CHRT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"*\"   $2A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_PLUS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"+\"   $2B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \",\" $2C no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_MNUS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"-\"   $2D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \".\" $2E no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_SLAS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"/\"   $2F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"0\" $30 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"1\" $31 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"2\" $32 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"3\" $33 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"4\" $34 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"5\" $35 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"6\" $36 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"7\" $37 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"8\" $38 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"9\" $39 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \";\" $3A no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \":\" $3B no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_LESS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"<\"   $3C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_EQUL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"=\"   $3D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_MORE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \">\"   $3E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_QEST"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"?\"   $3F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"@\" $40 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCA"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"A\"   $41"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCB"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"B\"   $42"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"C\"   $43"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"D\"   $44"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"E\"   $45"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"F\"   $46"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCG"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"G\"   $47"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCH"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"H\"   $48"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"I\"   $49"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"J\" $4A no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"K\" $4B no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"L\"   $4C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"M\"   $4D"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"N\"   $4E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"O\"   $4F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"P\"   $50"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"Q\" $51 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"R\"   $52"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"S\"   $53"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"T\"   $54"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCU"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"U\"   $55"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCV"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"V\"   $56"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_ASCW"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"W\"   $57"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"X\" $58 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"Y\" $59 no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"Z\" $5A no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"[\" $5B no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"\\\" $5C no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* \"]\" $5D no keywords"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TAB_POWR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* \"^\"   $5E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* Table of Basic keywords for LIST command"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* [byte]first character,[byte]remaining length -1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* [word]offset from table start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_KEYT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'E'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_END"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* END"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'F'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_FOR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'N'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_NEXT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DATA"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'I'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_INPUT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DIM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* DIM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_READ"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LET"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DEC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'G'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_GOTO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RUN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* RUN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'I'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_IF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RESTORE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"* RESTORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'G'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_GOSUB"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RETURN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_REM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* REM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_STOP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'O'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_ON"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* ON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'N'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_NULL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* NULL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'I'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_INC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'W'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_WAIT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LOAD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SAVE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DEF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* DEF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'P'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_POKE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* POKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DOKE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LOKE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'C'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_CALL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LOOP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LOOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'P'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_PRINT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'C'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_CONT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CONT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LIST"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LIST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'C'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_CLEAR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* CLEAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'N'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_NEW"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* NEW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'W'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_WIDTH"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* WIDTH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'G'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_GET"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* GET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SWAP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'B'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_BITSET"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* BITSET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'B'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_BITCLR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* BITCLR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'T'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_TAB"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* TAB("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'E'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_ELSE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* ELSE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'T'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_TO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* TO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'F'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_FN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* FN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SPC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SPC("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'T'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_THEN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* THEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'N'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_NOT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_STEP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* STEP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'U'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_UNTIL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* UNTIL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'W'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_WHILE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* WHILE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'+'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_PLUS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* +"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'-'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_MINUS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'*'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_MULT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'/'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DIV"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* /"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'^'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_POWER"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* ^"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'A'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_AND"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'E'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_EOR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'O'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_OR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'>'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RSHIFT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* >>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'<'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LSHIFT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* <<"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'>'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_GT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* >"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'='"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_EQUAL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* ="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'<'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* <"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SGN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SGN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'I'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_INT"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* INT("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'A'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_ABS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* ABS("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'U'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_USR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* USR("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'F'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_FRE"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* FRE("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'P'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_POS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* POS("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SQR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SQR("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RND"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* RND("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LOG"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LOG("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'E'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_EXP"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* EXP("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'C'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_COS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* COS("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SIN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* SIN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'T'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_TAN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* TAN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'A'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_ATN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* ATN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'P'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_PEEK"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* PEEK("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'D'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_DEEK"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* DEEK("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LEEK"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* LEEK("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LEN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LEN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_STRS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* STR$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'V'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_VAL"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* VAL("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'A'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_ASC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* ASC("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'U'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_UCASES"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* UCASE$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LCASES"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* LCASE$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'C'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_CHRS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* CHR$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'H'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_HEXS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* HEX$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'B'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_BINS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* BIN$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'B'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_BITTST"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* BITTST("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'M'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_MAX"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* MAX("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'M'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_MIN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* MIN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RAM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* RAMBASE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'P'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_PI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* PI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'T'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_TWOPI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* TWOPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'V'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_VPTR"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* VARPTR("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'S'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_SADD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* SADD("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'L'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_LEFTS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* LEFT$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_RIGHTS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* RIGHT$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'M'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_MIDS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* MID$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'U'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"KEY_USINGS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"TAB_STAR"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* USING$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BASIC error messages"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BAER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_NF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $00 NEXT without FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_SN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $02 syntax"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_RG"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $04 RETURN without GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_OD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $06 out of data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_FC"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $08 function call"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_OV"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $0A overflow"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_OM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $0C out of memory"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_US"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $0E undefined statement"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_BS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $10 array bounds"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_DD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $12 double dimension array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_D0"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $14 divide by 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ID"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $16 illegal direct"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_TM"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $18 type mismatch"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LS"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $1A long string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_ST"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $1C string too complex"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_CN"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $1E continue error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_UF"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $20 undefined function"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_LD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $22 LOOP without DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_UV"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $24 undefined variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_UA"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $26 undimensioned array"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_WD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $28 wrong dimensions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_AD"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $2A address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_FO"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $2C format"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"LAB_NI"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"identifier",
        "value":"LAB_BAER"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* $2E not implemented"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NF"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'NEXT without FOR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SN"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Syntax'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RG"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'RETURN without GOSUB'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OD"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Out of DATA'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FC"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Function call'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OV"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Overflow'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_OM"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Out of memory'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_US"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Undefined statement'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BS"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Array bounds'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_DD"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Double dimension'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_D0"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Divide by zero'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ID"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Illegal direct'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_TM"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Type mismatch'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LS"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'String too long'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_ST"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'String too complex'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_CN"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Can'"
    },
    {
        "type":"string",
        "value":"'t continue'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UF"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Undefined function'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LD"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'LOOP without DO'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UV"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Undefined variable'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_UA"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Undimensioned array'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_WD"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Wrong dimensions'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_AD"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Address'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_FO"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Format'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_NI"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Not implemented'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* keyword table for line (un)crunching"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* [keyword,token"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* [keyword,token]]"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* end marker (#$00)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_STAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_MULT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MULT"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                                "
    },
    {
        "type":"comment",
        "value":"* *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_PLUS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_PLUS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_PLUS"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                                "
    },
    {
        "type":"comment",
        "value":"* +"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_MNUS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_MINUS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_MINUS"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* -"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_SLAS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DIV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_DIV"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"* /"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_LESS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LSHIFT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'<'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LSHIFT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* <<"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_LT"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* <"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_EQUL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_EQUAL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_EQUAL"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* ="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_MORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RSHIFT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'>'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RSHIFT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* >>"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_GT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_GT"
    },
    {
        "type":"whitespace",
        "value":"                                      "
    },
    {
        "type":"comment",
        "value":"* >"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_QEST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"TK_PRINT"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* ?"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_ABS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'BS('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_ABS"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* ABS("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ND'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_AND"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* AND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_ASC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'SC('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_ASC"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* ASC("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_ATN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'TN('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_ATN"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* ATN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_BINS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IN$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_BINS"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* BIN$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_BITCLR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ITCLR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_BITCLR"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* BITCLR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_BITSET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ITSET'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_BITSET"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* BITSET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_BITTST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ITTST('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_BITTST"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* BITTST("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_CALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ALL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_CALL"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* CALL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_CHRS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'HR$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_CHRS"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* CHR$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_CLEAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'LEAR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_CLEAR"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* CLEAR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_CONT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ONT'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_CONT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* CONT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_COS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OS('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_COS"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* COS("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ATA'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DATA"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* DATA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EC'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DEC"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* DEC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DEEK"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EEK('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DEEK"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* DEEK("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DEF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EF'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DEF"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* DEF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DIM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IM'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DIM"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* DIM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OKE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DOKE"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* DOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'O'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_DO"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* DO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_ELSE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'LSE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_ELSE"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* ELSE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_END"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ND'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_END"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* END"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_EOR"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* EOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_EXP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'XP('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_EXP"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* EXP("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OR'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_FOR"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* FOR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_FN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'N'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_FN"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* FN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_FRE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'RE('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_FRE"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* FRE("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_GET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ET'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_GET"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* GET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OTO'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_GOTO"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* GOTO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OSUB'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_GOSUB"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* GOSUB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_HEXS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EX$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_HEXS"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* HEX$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'F'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_IF"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* IF"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'NC'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_INC"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* INC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'NPUT'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_INPUT"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* INPUT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_INT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'NT('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_INT"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* INT("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LCASES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'CASE$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LCASES"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* LCASE$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LEEK"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EEK('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LEEK"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* LEEK("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LEFTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EFT$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LEFTS"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* LEFT$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EN('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LEN"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* LEN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ET'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LET"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* LET"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LIST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IST'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LIST"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* LIST"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LOAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OAD'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LOAD"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* LOAD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LOG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OG('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LOG"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* LOG("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OKE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LOKE"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* LOKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_LOOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OOP'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_LOOP"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* LOOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_MAX"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AX('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_MAX"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* MAX("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_MIDS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ID$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_MIDS"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* MID$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_MIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IN('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_MIN"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* MIN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_NEW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EW'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_NEW"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* NEW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EXT'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_NEXT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* NEXT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OT'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_NOT"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* NOT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_NULL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ULL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_NULL"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* NULL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_ON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'N'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_ON"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* ON"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'R'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_OR"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* OR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_PEEK"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EEK('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_PEEK"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* PEEK("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_PI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'I'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_PI"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* PI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_POKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OKE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_POKE"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* POKE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_POS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'OS('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_POS"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* POS("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'RINT'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_PRINT"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* PRINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AMBASE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RAM"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* RAMBASE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EAD'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_READ"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* READ"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_REM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'EM'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_REM"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* REM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RESTORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ESTORE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RESTORE"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"comment",
        "value":"* RESTORE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ETURN'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RETURN"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"* RETURN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RIGHTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IGHT$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RIGHTS"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* RIGHT$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RND"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ND('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RND"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* RND("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_RUN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'UN'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_RUN"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"comment",
        "value":"* RUN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SADD"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ADD('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SADD"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* SADD("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AVE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SAVE"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* SAVE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SGN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'GN('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SGN"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* SGN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SIN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IN('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SIN"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* SIN("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SPC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'PC('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SPC"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* SPC("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SQR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'QR('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SQR"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* SQR("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_STEP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'TEP'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_STEP"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* STEP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'TOP'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_STOP"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* STOP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_STRS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'TR$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_STRS"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"comment",
        "value":"* STR$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'WAP'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_SWAP"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* SWAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_TAB"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AB('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_TAB"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* TAB("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_TAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AN('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_TAN"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* TAN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_THEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'HEN'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_THEN"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* THEN"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_TO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'O'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_TO"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"comment",
        "value":"* TO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_TWOPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'WOPI'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_TWOPI"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* TWOPI"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCU"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_UCASES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'CASE$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_UCASES"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* UCASE$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_UNTIL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'NTIL'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_UNTIL"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* UNTIL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_USINGS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'SING$('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_USINGS"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"comment",
        "value":"* USING$("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_USR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'SR('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_USR"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* USR("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCV"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_VAL"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AL('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_VAL"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* VAL("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_VPTR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'ARPTR('"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_VPTR"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"* VARPTR("
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_ASCW"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'AIT'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_WAIT"
    },
    {
        "type":"whitespace",
        "value":"                   "
    },
    {
        "type":"comment",
        "value":"* WAIT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_WHILE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'HILE'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_WHILE"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* WHILE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_WIDTH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'IDTH'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"TK_WIDTH"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"comment",
        "value":"* WIDTH"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"TAB_POWR"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"KEY_POWER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"TK_POWER"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"comment",
        "value":"* ^"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* just messages"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_BMSG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Break'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_EMSG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"' Error'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_LMSG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"' in line '"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_IMSG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Extra ignored'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_REDO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Redo from start'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_RMSG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"string",
        "value":"'Ready'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"LAB_SMSG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"' Bytes free'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"string",
        "value":"'Enhanced 68k BASIC Version 3.54'"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0D"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$0A"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"number",
        "value":"$00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* EhBASIC keywords quick reference list                                                         *"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* glossary"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               <.>               required"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               {.|.}             one of required"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               [.]               optional"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               ...               may repeat as last"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               any             = anything"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               num             = number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               state           = statement"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               n               = positive integer"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               str             = string"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               var             = variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               nvar            = numeric variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               svar            = string variable"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               expr            = expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               nexpr           = numeric expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*               sexpr           = string expression"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* statement separator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* :             . [<state>] : [<state>]                                         * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* number bases"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* %             . %<binary num>                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* $             . $<hex num>                                                    * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* commands"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* END           . END                                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* FOR           . FOR <nvar>=<nexpr> TO <nexpr> [STEP <nexpr>]          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* NEXT  . NEXT [<nvar>[,<nvar>]...]                                     * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DATA  . DATA [{num|[\"]str[\"]}[,{num|[\"]str[\"]}]...]           * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* INPUT . INPUT [<\">str<\">;] <var>[,<var>[,<var>]...]           * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DIM           . DIM <var>(<nexpr>[,<nexpr>[,<nexpr>]])                        * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* READ  . READ <var>[,<var>[,<var>]...]                         * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LET           . [LET] <var>=<expr>                                            * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DEC           . DEC <nvar>[,<nvar>[,<nvar>]...]                               * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* GOTO  . GOTO <n>                                                              * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* RUN           . RUN [<n>]                                                             * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* IF            . IF <expr>{GOTO<n>|THEN<{n|comm}>}[ELSE <{n|comm}>]    * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* RESTORE       . RESTORE [<n>]                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* GOSUB . GOSUB <n>                                                             * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* RETURN        . RETURN                                                                * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* REM           . REM [<any>]                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* STOP  . STOP                                                          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ON            . ON <nexpr>{GOTO|GOSUB}<n>[,<n>[,<n>]...]              * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* NULL  . NULL <nexpr>                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* INC           . INC <nvar>[,<nvar>[,<nvar>]...]                               * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* WAIT  . WAIT <nexpr>,<nexpr>[,<nexpr>]                                * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LOAD  . LOAD [<sexpr>]                                                        * done for sim"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SAVE  . SAVE [<sexpr>][,[<n>][-<n>]]                          * done for sim"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DEF           . DEF FN<var>(<var>)=<expr>                                     * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* POKE  . POKE <nexpr>,<nexpr>                                          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DOKE  . DOKE <nexpr>,<nexpr>                                          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LOKE  . LOKE <nexpr>,<nexpr>                                          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* CALL  . CALL <nexpr>                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DO            . DO                                                                    * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LOOP  . LOOP [{WHILE|UNTIL}<nexpr>]                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* PRINT . PRINT [{;|,}][<expr>][{;|,}[<expr>]...]                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* CONT  . CONT                                                          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LIST  . LIST [<n>][-<n>]                                              * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* CLEAR . CLEAR                                                         * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* NEW           . NEW                                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* WIDTH . WIDTH [<n>][,<n>]                                             * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* GET           . GET <var>                                                             * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SWAP  . SWAP <var>,<var>                                              * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BITSET        . BITSET <nexpr>,<nexpr>                                        * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BITCLR        . BITCLR <nexpr>,<nexpr>                                        * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* sub commands (may not start a statement)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* TAB           . TAB(<nexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ELSE  . IF <expr>{GOTO<n>|THEN<{n|comm}>}[ELSE <{n|comm}>]    * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* TO            . FOR <nvar>=<nexpr> TO <nexpr> [STEP <nexpr>]          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* FN            . FN <var>(<expr>)                                              * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SPC           . SPC(<nexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* THEN  . IF <nexpr> {THEN <{n|comm}>|GOTO <n>}                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* NOT           . NOT <nexpr>                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* STEP  . FOR <nvar>=<nexpr> TO <nexpr> [STEP <nexpr>]          * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* UNTIL . LOOP [{WHILE|UNTIL}<nexpr>]                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* WHILE . LOOP [{WHILE|UNTIL}<nexpr>]                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* operators"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* +             . [expr] + <expr>                                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* -             . [nexpr] - <nexpr>                                             * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* *             . <nexpr> * <nexpr>                                             * done fast hardware"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* /             . <nexpr> / <nexpr>                                             * done fast hardware"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ^             . <nexpr> ^ <nexpr>                                             * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* AND           . <nexpr> AND <nexpr>                                           * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* EOR           . <nexpr> EOR <nexpr>                                           * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* OR            . <nexpr> OR <nexpr>                                            * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* >>            . <nexpr> >> <nexpr>                                            * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* <<            . <nexpr> << <nexpr>                                            * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* compare functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* <             . <expr> < <expr>                                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* =             . <expr> = <expr>                                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* >             . <expr> > <expr>                                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* functions"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SGN           . SGN(<nexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* INT           . INT(<nexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ABS           . ABS(<nexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* USR           . USR(<expr>)                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* FRE           . FRE(<expr>)                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* POS           . POS(<expr>)                                                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SQR           . SQR(<nexpr>)                                                  * done fast shift/sub"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* RND           . RND(<nexpr>)                                                  * done 32 bit PRNG"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LOG           . LOG(<nexpr>)                                                  * done fast cordic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* EXP           . EXP(<nexpr>)                                                  * done fast cordic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* COS           . COS(<nexpr>)                                                  * done fast cordic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SIN           . SIN(<nexpr>)                                                  * done fast cordic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* TAN           . TAN(<nexpr>)                                                  * done fast cordic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ATN           . ATN(<nexpr>)                                                  * done fast cordic"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* PEEK  . PEEK(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* DEEK  . DEEK(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LEEK  . LEEK(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LEN           . LEN(<sexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* STR$  . STR$(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* VAL           . VAL(<sexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* ASC           . ASC(<sexpr>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* UCASE$        . UCASE$(<sexpr>)                                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LCASE$        . LCASE$(<sexpr>)                                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* CHR$  . CHR$(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* HEX$  . HEX$(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BIN$  . BIN$(<nexpr>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* BTST  . BTST(<nexpr>,<nexpr>)                                         * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* MAX           . MAX(<nexpr>[,<nexpr>[,<nexpr>]...])                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* MIN           . MIN(<nexpr>[,<nexpr>[,<nexpr>]...])                   * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* PI            . PI                                                                    * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* TWOPI . TWOPI                                                         * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* VARPTR        . VARPTR(<var>)                                                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* SADD  . SADD(<svar>)                                                  * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* LEFT$ . LEFT$(<sexpr>,<nexpr>)                                        * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* RIGHT$        . RIGHT$(<sexpr>,<nexpr>)                                       * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* MID$  . MID$(<sexpr>,<nexpr>[,<nexpr>])                               * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"* USING$        . USING$(<sexpr>,<nexpr>[,<nexpr>]...])                 * done"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"END"
    },
    {
        "type":"whitespace",
        "value":"     "
    },
    {
        "type":"identifier",
        "value":"code_start"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"*************************************************************************************"
    },
    {
        "type":"newline",
        "value":"\n"
    }
]
