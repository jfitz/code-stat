[
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; SEGA MEGA DRIVE/GENESIS - DEMO 3 - SPRITES SAMPLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; by Big Evil Corporation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; A small, discreet, and complete sprites sample, with a healthy"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; dose of comments and explanations for beginners."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Runs on genuine hardware, and (hopefully) all emulators."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; I recommend reading and understanding the Scroll Planes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; sample first."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; To assemble this program with ASM68K.EXE:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";    ASM68K.EXE /p sprites.asm,sprites.bin,sprites.map,sprites.lst"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; To assemble this program with SNASM68K.EXE:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";    SNASM68K.EXE /p sprites.asm,sprites.map,sprites.lst,sprites.bin"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; sprites.asm = this source file"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; sprites.bin = the binary file, fire this up in your emulator!"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; sprites.lst = listing file, shows assembled addresses alongside"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";               your source code, open in a text editor"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; sprites.map = symbol map file for linking (unused)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Start of ROM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ROM_Start:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; CPU VECTOR TABLE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"0x00FFE000"
    },
    {
        "type":"whitespace",
        "value":"                       "
    },
    {
        "type":"comment",
        "value":"; Initial stack pointer value"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_EntryPoint"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"; Start of program"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; Bus error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; Address error"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; Illegal instruction"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; Division by zero"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; CHK CPU_Exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; TRAPV CPU_Exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"CPU_Exception"
    },
    {
        "type":"whitespace",
        "value":"            "
    },
    {
        "type":"comment",
        "value":"; Privilege violation"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRACE exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Line-A emulator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Line-F emulator"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Spurious exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; IRQ level 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; IRQ level 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; IRQ level 3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_HInterrupt"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"; IRQ level 4 (horizontal retrace interrupt)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; IRQ level 5"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_VInterrupt"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"comment",
        "value":"; IRQ level 6 (vertical retrace interrupt)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; IRQ level 7"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #00 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #01 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #02 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #03 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #04 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #05 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #06 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #07 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #08 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #09 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #10 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #11 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #12 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #13 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #14 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; TRAP #15 exception"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"identifier",
        "value":"INT_Null"
    },
    {
        "type":"whitespace",
        "value":"                         "
    },
    {
        "type":"comment",
        "value":"; Unused (reserved)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; SEGA MEGA DRIVE ROM HEADER"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"SEGA MEGA DRIVE \""
    },
    {
        "type":"whitespace",
        "value":"                                 "
    },
    {
        "type":"comment",
        "value":"; Console name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"BIGEVILCORP.    \""
    },
    {
        "type":"whitespace",
        "value":"                                 "
    },
    {
        "type":"comment",
        "value":"; Copyright holder and release date"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"HELLO WORLD                                     \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; Domestic name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"HELLO WORLD                                     \""
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; International name"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"GM XXXXXXXX-XX\""
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"; Version number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"; Checksum"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"J               \""
    },
    {
        "type":"whitespace",
        "value":"                                 "
    },
    {
        "type":"comment",
        "value":"; I/O support"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ROM_Start"
    },
    {
        "type":"whitespace",
        "value":"                                          "
    },
    {
        "type":"comment",
        "value":"; Start address of ROM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ROM_End"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"                                          "
    },
    {
        "type":"comment",
        "value":"; End address of ROM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00FF0000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; Start address of RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00FF0000"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x0000FFFF"
    },
    {
        "type":"whitespace",
        "value":"                              "
    },
    {
        "type":"comment",
        "value":"; End address of RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00000000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; SRAM enabled"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00000000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00000000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; Start address of SRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00000000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; End address of SRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00000000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00000000"
    },
    {
        "type":"whitespace",
        "value":"                                         "
    },
    {
        "type":"comment",
        "value":"; Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"                                        \""
    },
    {
        "type":"whitespace",
        "value":"         "
    },
    {
        "type":"comment",
        "value":"; Notes (unused)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"  E             \""
    },
    {
        "type":"whitespace",
        "value":"                                 "
    },
    {
        "type":"comment",
        "value":"; Country codes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; INITIAL VDP REGISTER VALUES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; In this demo, we're particularly interested in register 0x5,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; which specifies the address of the Sprite Attribute Table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; (SAT) within VRAM. Here it's set to 0xF000."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VDPRegisters:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x14"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x00: H interrupt on, palettes on"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x74"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x01: V interrupt on, display on, DMA on, Genesis mode on"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x30"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x02: Pattern table for Scroll Plane A at VRAM 0xC000 (bits 3-5 = bits 13-15)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x03: Pattern table for Window Plane at VRAM 0x0000 (disabled) (bits 1-5 = bits 11-15)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x07"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x04: Pattern table for Scroll Plane B at VRAM 0xE000 (bits 0-2 = bits 11-15)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x78"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x05: Sprite Attribute Table at VRAM 0xF000 (bits 0-6 = bits 9-15)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x06: Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x07: Background colour: bits 0-3 = colour, bits 4-5 = palette"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x08: Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x09: Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x08"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x0A: Frequency of Horiz. interrupt in Rasters (number of lines travelled by the beam)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x0B: External interrupts off, V scroll per-page, H scroll per-page"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x81"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x0C: Shadows and highlights off, interlace off, H40 mode (320 x 224 screen res)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x3F"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x0D: Horiz. scroll table at VRAM 0xFC00 (bits 0-5)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x0E: Unused"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x02"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x0F: Autoincrement 2 bytes"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x01"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x10: Scroll plane size: 64x32 tiles"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x11: Window Plane X pos 0 left (pos in bits 0-4, left/right in bit 7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x12: Window Plane Y pos 0 up (pos in bits 0-4, up/down in bit 7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xFF"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x13: DMA length lo byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xFF"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x14: DMA length hi byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x15: DMA source address lo byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x16: DMA source address mid byte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x80"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"; 0x17: DMA source address hi byte, memory-to-VRAM mode (bits 6-7)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"even"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; CONSTANTS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; VDP port addresses"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_control"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00C00004"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_data"
    },
    {
        "type":"whitespace",
        "value":"                                "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00C00000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; VDP commands"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_cmd_vram_write"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x40000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_cmd_cram_write"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xC0000000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_cmd_vsram_write"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x40000010"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; VDP memory addresses"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; according to VDP registers 0x2, 0x4, 0x5, and 0xD (see table above)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vram_addr_tiles"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vram_addr_plane_a"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xC000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vram_addr_plane_b"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xE000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vram_addr_sprite_table"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xF000"
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"; NEW in this demo - the Sprite Attribute Table (SAT)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vram_addr_hscroll"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0xFC00"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Screen width and height (in pixels)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_screen_width"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0140"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_screen_height"
    },
    {
        "type":"whitespace",
        "value":"               "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00F0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The plane width and height (in tiles)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; according to VDP register 0x10 (see table above)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_plane_width"
    },
    {
        "type":"whitespace",
        "value":"                 "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x40"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_plane_height"
    },
    {
        "type":"whitespace",
        "value":"                "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x20"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The size of the sprite plane (512x512 pixels)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; With only a 320x240 display size, a lot of this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; is off screen, which is useful for hiding sprites"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; when not needed (saves needing to adjust the linked"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; list in the attribute table)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_sprite_plane_width"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0200"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_sprite_plane_height"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0200"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The sprite border (invisible area left + top) size"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The sprite plane is 512x512 pixels, but is offset by"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; -128 pixels in both X and Y directions. To see a sprite"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; on screen at 0,0 we need to offset its position by"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; this border."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_sprite_border_x"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x80"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"vdp_sprite_border_y"
    },
    {
        "type":"whitespace",
        "value":"             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x80"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Hardware version address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"hardware_ver_address"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00A10001"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; TMSS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"tmss_address"
    },
    {
        "type":"whitespace",
        "value":"                    "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00A14000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"tmss_signature"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"'SEGA'"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The size of a word and longword"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_word"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_long"
    },
    {
        "type":"whitespace",
        "value":"                               "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The size of one palette (in bytes, words, and longwords)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_palette_b"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x20"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_palette_w"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"size_palette_b"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"size_word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_palette_l"
    },
    {
        "type":"whitespace",
        "value":"                  "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"size_palette_b"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"size_long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The size of one graphics tile (in bytes, words, and longwords)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_tile_b"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x20"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_tile_w"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"size_tile_b"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"size_word"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"size_tile_l"
    },
    {
        "type":"whitespace",
        "value":"                             "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"size_tile_b"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"size_long"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Sprite initial draw positions (in pixels)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_1_start_pos_x"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vdp_sprite_border_x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_1_start_pos_y"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vdp_sprite_border_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_2_start_pos_x"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vdp_sprite_border_x"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x0040"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_2_start_pos_y"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vdp_sprite_border_y"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x0020"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Speed (in pixels per frame) to move our sprites"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_1_move_speed_x"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_1_move_speed_y"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_2_move_speed_x"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_2_move_speed_y"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; VRAM WRITE MACROS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Set the VRAM (video RAM) address to write to next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"SetVRAMWrite:"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"macro"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"vdp_cmd_vram_write"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"&"
    },
    {
        "type":"number",
        "value":"$3FFF"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"16"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":">"
    },
    {
        "type":"group",
        "value":">"
    },
    {
        "type":"number",
        "value":"14"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_control"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"endm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Set the CRAM (colour RAM) address to write to next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"SetCRAMWrite:"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"macro"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"vdp_cmd_cram_write"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"&"
    },
    {
        "type":"number",
        "value":"$3FFF"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"16"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":">"
    },
    {
        "type":"group",
        "value":">"
    },
    {
        "type":"number",
        "value":"14"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_control"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"endm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Set the VSRAM (vertical scroll RAM) address to write to next"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"SetVSRAMWrite:"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"macro"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.l"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"vdp_cmd_vsram_write"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"&"
    },
    {
        "type":"number",
        "value":"$3FFF"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"16"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"addr"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":">"
    },
    {
        "type":"group",
        "value":">"
    },
    {
        "type":"number",
        "value":"14"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_control"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"endm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; SPRITE ATTRIBUTE MACRO"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; A macro to help build an entry in the Sprite Attribute"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Table, since manipulating structures and bit twiddling isn't"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; the focus of this demo, and would make the code harder to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; read."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Proper game implementations would make use of a local SAT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; table in RAM and use DMA to transfer the table to VRAM each"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; frame (which also allows us to use RAM like a \"stream\" to write"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; this data more efficiently) but this is the best method for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; teaching the basics first."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Each sprite attribute entry is in the following format:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";   Y coordinate      1 word - the Y coordinate on the sprite plane"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";   Dimensions bits   1 byte - bits describing the layout (1x1 tiles up to 4x4 tiles)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";   Linked list next  1 byte - the index of the next sprite to draw, or 0 if end of list"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";   Prio/palette/flip 1 byte - the priority (bit 15), palette (bits 14-13),"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";                              v/h flip (bits 12 and 11), and top 3 bits of the tile ID"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";   Tile ID bottom    1 byte - the bottom 8 bits of the tile ID"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";   X coordinate      1 word - the X coordinate on the sprite plane"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Writes a sprite attribute structure to 4 registers, ready to write to VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"BuildSpriteStructure:"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"preprocessor",
        "value":"macro"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"x_pos"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"      "
    },
    {
        "type":"comment",
        "value":"; X pos on sprite plane"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"y_pos"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                  "
    },
    {
        "type":"comment",
        "value":"; Y pos on sprite plane"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"dimension_bits"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                 "
    },
    {
        "type":"comment",
        "value":"; Sprite tile dimensions (4 bits)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"next_id"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                "
    },
    {
        "type":"comment",
        "value":"; Next sprite index in linked list"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"priority_bit"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                   "
    },
    {
        "type":"comment",
        "value":"; Draw priority"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"palette_id"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                             "
    },
    {
        "type":"comment",
        "value":"; Palette index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"flip_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                 "
    },
    {
        "type":"comment",
        "value":"; Flip horizontally"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"flip_y"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                 "
    },
    {
        "type":"comment",
        "value":"; Flip vertically"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"tile_id"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                "
    },
    {
        "type":"comment",
        "value":"; First tile index"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"reg1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                   "
    },
    {
        "type":"comment",
        "value":"; Output: reg1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"reg2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                   "
    },
    {
        "type":"comment",
        "value":"; Output: reg2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"reg3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":"                                                   "
    },
    {
        "type":"comment",
        "value":"; Output: reg3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"reg4"
    },
    {
        "type":"whitespace",
        "value":"                                                    "
    },
    {
        "type":"comment",
        "value":"; Output: reg4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#y_pos"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"\\reg1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#(\\dimension_bits<<8|\\next_id), \\reg2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"priority_bit"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"14"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"palette_id"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"13"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"flip_x"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"11"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"flip_y"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"group",
        "value":"<"
    },
    {
        "type":"number",
        "value":"10"
    },
    {
        "type":"operator",
        "value":"|"
    },
    {
        "type":"invalid operator",
        "value":"\\"
    },
    {
        "type":"identifier",
        "value":"tile_id"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"\\reg3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#x_pos, \\reg4"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"preprocessor",
        "value":"endm"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; MEMORY MAP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; We need to store the current sprite positions in RAM and update"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; them each frame. There are a few ways to create a memory map,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; but the cleanest, simplest, and easiest to maintain method"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; uses the assembler's \"RS\" keywords. RSSET begins a new table of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; offsets starting from any other offset (here we're starting at"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; 0x00FF0000, the start of RAM), and allows us to add named entries"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; of any size for the \"variables\". We can then read/write these"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; variables using the offsets' labels (see INT_VInterrupt for use"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; cases)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"RSSET"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00FF0000"
    },
    {
        "type":"whitespace",
        "value":"                        "
    },
    {
        "type":"comment",
        "value":"; Start a new offset table from beginning of RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ram_sprite_1_pos_x"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"invalid",
        "value":"rs.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"; 1 table entry of word size for sprite 1's X pos"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ram_sprite_1_pos_y"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"invalid",
        "value":"rs.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"; 1 table entry of word size for sprite 1's Y pos"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ram_sprite_2_pos_x"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"invalid",
        "value":"rs.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"; 1 table entry of word size for sprite 2's X pos"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ram_sprite_2_pos_y"
    },
    {
        "type":"whitespace",
        "value":"              "
    },
    {
        "type":"invalid",
        "value":"rs.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"whitespace",
        "value":"  "
    },
    {
        "type":"comment",
        "value":"; 1 table entry of word size for sprite 2's Y pos"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; !! Be careful when adding any table entries of BYTE size, since"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; you'll need to start worrying about alignment. More of this in a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; future demo."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; PALETTE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; In this demo we'll be using one palette per sprite,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; so we've added a palette count to upload the correct number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; of entries."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Palettes:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Palette for sprite 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Palette1:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0020"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0EEE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00AC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x02EA"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00EE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0008"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x000C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x000A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Palette for sprite 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"Palette2:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0004"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0226"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0040"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0446"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0262"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0662"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x004A"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0468"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0882"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x006C"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0202"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x04A0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0AC2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x06AE"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"dc.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x02EC"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Number of palettes to write to CRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"palette_count"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; TILE IDs"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The indices of the first tile in each sprite. We only need"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; to tell the sprite table where to find the starting tile of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; each sprite, so we don't bother keeping track of every tile"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; index."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Note we still leave the first tile blank (planes A and B are"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; filled with tile 0) so we'll be uploading our sprite tiles"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; from index 1."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; See bottom of the file for the sprite tiles themselves."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"tile_id_blank"
    },
    {
        "type":"whitespace",
        "value":"           "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x00"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; The blank tile at index 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"tile_id_sprite_1"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x01"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 1 index (4 tiles)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"tile_id_sprite_2"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x05"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 2 index (12 tiles)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Total number of tiles in the sprites to upload to VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"tile_count"
    },
    {
        "type":"whitespace",
        "value":"                      "
    },
    {
        "type":"directive",
        "value":"equ"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x11"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Total tiles = 16"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; CODE ENTRY POINT"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"CPU_EntryPoint:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Initialise the Mega Drive"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the TMSS signature (if a model 1+ Mega Drive)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"js"
    },
    {
        "type":"invalid",
        "value":"r"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"VDP_WriteTMSS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Load the initial VDP registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"js"
    },
    {
        "type":"invalid",
        "value":"r"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"VDP_LoadRegisters"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Clear VRAM (video memory)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Setup the VDP to write to VRAM address 0x0000 (start of VRAM)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write 0's across all of VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"0x00010000"
    },
    {
        "type":"operator",
        "value":"/"
    },
    {
        "type":"identifier",
        "value":"size_word"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"-"
    },
    {
        "type":"number",
        "value":"1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0    ; Loop counter = 64kb, in words (-1 for DBRA loop)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"@ClrVramLp:"
    },
    {
        "type":"whitespace",
        "value":"                                                             "
    },
    {
        "type":"comment",
        "value":"; Start of loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data                                   ; Write a 0x0000 (word size) to VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"dbra"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"d0, @ClrVramLp                                   ; Decrement d0 and loop until finished (when d0 reaches -1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the palettes to CRAM (colour memory)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Setup the VDP to write to CRAM address 0x0000 (first palette)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetCRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the palettes to CRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; This time we're writing multiple palettes, so multiply the word count"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; by the palette count (and don't forget the -1 for the loop counter)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"lea"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"Palettes"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"a0                             ; Move palette address to a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#(palette_count*size_palette_w)-1, d0    ; Loop counter = 8 words in palette (-1 for DBRA loop)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"@PalLp:"
    },
    {
        "type":"whitespace",
        "value":"                                                 "
    },
    {
        "type":"comment",
        "value":"; Start of loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data                  ; Write palette entry, post-increment address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"dbra"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0, @PalLp                                 ; Decrement d0 and loop until finished (when d0 reaches -1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the sprite tiles to VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Setup the VDP to write to VRAM address 0x0020 (the address of the first sprite tile, index 1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; We need to leave the first tile blank (we cleared VRAM, so it should be all 0's) for"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; planes A and B to display, so skip the first tile (offset address by size_tile_b)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vram_addr_tiles"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"size_tile_b"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the sprite tiles to VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"lea"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"sprite_tiles"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"a0                                         ; Move the address of the first graphics tile into a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#(tile_count*size_tile_l)-1, d0          ; Loop counter = 8 longwords per tile * num tiles (-1 for DBRA loop)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"@CharLp:"
    },
    {
        "type":"whitespace",
        "value":"                                                                        "
    },
    {
        "type":"comment",
        "value":"; Start of loop"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data                                          ; Write tile line (4 bytes per line), and post-increment address"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"dbra"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0, @CharLp                                                        ; Decrement d0 and loop until finished (when d0 reaches -1)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Set up the Sprite Attribute Table (SAT)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; The Sprite Attribute Table is a table of sprites to draw."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Each entry in the table describes the first tile ID, the number"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; of tiles to draw (and their layout), the X and Y position"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; (on the 512x512 sprite plane), the palette to draw with, a"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; priority flag, and X/Y flipping flags."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprites can be layed out in these tile dimensions:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 1x1 (1 tile)  - 0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 1x2 (2 tiles) - 0001"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 1x3 (3 tiles) - 0010"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 1x4 (4 tiles) - 0011"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 2x1 (2 tiles) - 0100"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 2x2 (4 tiles) - 0101"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 2x3 (6 tiles) - 0110"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 2x4 (8 tiles) - 0111"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 3x1 (3 tiles) - 1000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 3x2 (6 tiles) - 1001"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 3x3 (9 tiles) - 1010"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 3x4 (12 tiles)- 1011"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 4x1 (4 tiles) - 1100"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 4x2 (8 tiles) - 1101"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 4x3 (12 tiles)- 1110"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; 4x4 (16 tiles)- 1111"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; The tiles are layed out in COLUMN MAJOR, rather than planes A and B"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; which are row major. Tiles within a sprite cannot be reused (since it"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; only accepts a starting tile and a count/layout) so the whole sprite"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; needs uploading to VRAM in one consecutive chunk, even if some tiles"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; are duplicates."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; The X/Y flipping flags take the layout into account, you don't need"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; to re-adjust the layout, position, or tile IDs to flip the entire"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; sprite as a whole."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; There are 64 entries in the table, but the number of them drawn,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; and the order in which they're processed, is determined by a linked"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; list. Each sprite entry has an index to the NEXT sprite to be drawn."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; If this index is 0, the list ends, and the VDP won't draw any more"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; sprites this frame."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Start writing to the sprite attribute table in VRAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vram_addr_sprite_table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Set up sprite 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write all values into registers first to make it easier. We"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; write to VRAM one word at a time (auto-increment is set to 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; in VDP register 0xF), so we'll assign each word to a register."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Since bit twiddling and manipulating structures isn't the focus of"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; this sample, we have a macro to simplify this part."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Position:   sprite_1_start_pos_x,sprite_1_start_pos_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Dimensions: 2x2 tiles (8 tiles total) = 0101 in binary (see table above)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Next link:  sprite index 1 is next to be processed"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Priority:   0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Palette id: 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Flip X:     0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Flip Y:     0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Tile id:    tile_id_sprite_1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"Bui"
    },
    {
        "type":"keyword",
        "value":"ldS"
    },
    {
        "type":"invalid",
        "value":"pri"
    },
    {
        "type":"keyword",
        "value":"teSt"
    },
    {
        "type":"invalid",
        "value":"ructure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"sprite_1_start_pos_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"sprite_1_start_pos_y"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"invalid operator",
        "value":"%"
    },
    {
        "type":"number",
        "value":"0101"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"tile_id_sprite_1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the entire sprite attribute structure to the sprite table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1, vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d3, vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Set up sprite 2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Position:   sprite_2_start_pos_x,sprite_2_start_pos_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Dimensions: 4x3 tiles (16 tiles total) = 1110 in binary (see table above)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Next link:  sprite index 0 (end of linked list)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Priority:   0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Palette id: 1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Flip X:     0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Flip Y:     0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Tile id:    tile_id_sprite_2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"Bui"
    },
    {
        "type":"keyword",
        "value":"ldS"
    },
    {
        "type":"invalid",
        "value":"pri"
    },
    {
        "type":"keyword",
        "value":"teSt"
    },
    {
        "type":"invalid",
        "value":"ructure"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"sprite_2_start_pos_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"sprite_2_start_pos_y"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"invalid operator",
        "value":"%"
    },
    {
        "type":"number",
        "value":"1110"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"0x0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"tile_id_sprite_2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write the entire sprite attribute structure to the sprite table"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1, vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d3, vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Intitialise variables in RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#sprite_1_start_pos_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"ram_sprite_1_pos_x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#sprite_1_start_pos_y, ram_sprite_1_pos_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#sprite_2_start_pos_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"ram_sprite_2_pos_x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#sprite_2_start_pos_y, ram_sprite_2_pos_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Initialise status register and set interrupt level."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; This begins firing vertical and horizontal interrupts."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Since the vinterrupt does something meaningful in this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; demo, we start this AFTER setting up the VDP to draw and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; intialising the variables in RAM."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"identifier",
        "value":"0x2300"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"sr"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Finished!"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Loop forever"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; This loops forever, effectively ending our main routine,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; but the VDP will continue to run of its own accord and"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; will still fire vertical and horizontal interrupts (which is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; where our update code is), so the demo continues to run."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; For a game, it would be better to use this loop for processing"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; input and game code, and wait here until next vblank before"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; looping again. We only use vinterrupt for updates in this demo"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; for simplicity (because we don't yet have any timing code)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"@"
    },
    {
        "type":"keyword",
        "value":"In"
    },
    {
        "type":"keyword",
        "value":"finit"
    },
    {
        "type":"invalid",
        "value":"eLp:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"bra"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"@InfiniteLp"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; INTERRUPT ROUTINES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Vertical interrupt - run once per frame (50hz in PAL, 60hz in NTSC)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"INT_VInterrupt:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Fetch current sprite coordinates from RAM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ram_sprite_1_pos_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"ram_sprite_1_pos_y, d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"ram_sprite_2_pos_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"ram_sprite_2_pos_y, d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Animate them (x/y coords are 9 bits, so this"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; wraps around the whole 512x512 sprite plane)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"add"
    },
    {
        "type":"invalid",
        "value":"i.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#sprite_1_move_speed_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"addi.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#sprite_1_move_speed_y, d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"add"
    },
    {
        "type":"invalid",
        "value":"i.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#sprite_2_move_speed_x"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d2"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"addi.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#sprite_2_move_speed_y, d3"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Store updated values back in RAM for next frame"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"ram_sprite_1_pos_x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1, ram_sprite_1_pos_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"ram_sprite_2_pos_x"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d3, ram_sprite_2_pos_y"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Write updated coordinates to the Sprite Attribute Table in VRAM."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Each entry is 8 bytes in size, so sprite 1 is at table+0x0000,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; and sprite 2 is at table+0x0008."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; The Y coord is the 1st word in the structure, and the X coord is"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; the 4th. As already noted, there are cleaner ways to do this,"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; like storing the tables in RAM and copying them via DMA every"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; frame, but that's beyond the focus of this sample."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 1's Y coordinate is at table+0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vram_addr_sprite_table"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x0000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d1"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 1's X coordinate is at table+0x0006"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vram_addr_sprite_table"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x0006"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d0"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 2's Y coordinate is at table+0x0008"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vram_addr_sprite_table"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x0008"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d3"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 2's X coordinate is at table+0x000E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"SetVRAMWrite"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vram_addr_sprite_table"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"identifier",
        "value":"0x000E"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"d2"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"vdp_data"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"rte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Horizontal interrupt - run once per N scanlines (N = specified in VDP register 0xA)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"INT_HInterrupt:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Doesn't do anything in this demo"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"rte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; NULL interrupt - for interrupts we don't care about"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"INT_Null:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"rte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; Exception interrupt - called if an error has occured"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"CPU_Exception:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Just halt the CPU if an error occurred"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"stop"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"identifier",
        "value":"0x2700"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"rte"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; UTILITY FUNCTIONS"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VDP_WriteTMSS:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Poke the TMSS to show \"LICENSED BY SEGA...\" message and allow us to"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; access the VDP (or it will lock up on first access)."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"hardware_ver_address"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0                 ; Move Megadrive hardware version to d0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"andi.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#0x0F, d0                                                ; The version is stored in last four bits, so mask it with 0F"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"beq"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"@SkipTMSS"
    },
    {
        "type":"whitespace",
        "value":"                                                "
    },
    {
        "type":"comment",
        "value":"; If version is equal to 0, skip TMSS signature"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.l"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"#tmss_signature"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"tmss_address    ; Move the string \"SEGA\" to 0xA14000"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"label",
        "value":"@SkipTMSS:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Check VDP"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"identifier",
        "value":"vdp_control"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d0                                  ; Read VDP status register (hangs if no access)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"rts"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"VDP_LoadRegisters:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Set VDP registers"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"lea"
    },
    {
        "type":"whitespace",
        "value":"    "
    },
    {
        "type":"identifier",
        "value":"VDPRegisters"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"a0         ; Load address of register table into a0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"#0x18-1, d0                      ; 24 registers to write (-1 for loop counter)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"identifier",
        "value":"0x8000"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1                      ; 'Set register 0' command to d1"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"@CopyRegLp:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"mov"
    },
    {
        "type":"invalid",
        "value":"e.b"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"group",
        "value":"("
    },
    {
        "type":"identifier",
        "value":"a0"
    },
    {
        "type":"group",
        "value":")"
    },
    {
        "type":"operator",
        "value":"+"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1                        ; Move register value from table to lower byte of d1 (and post-increment the table address for next time)"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"move.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1, vdp_control          ; Write command and value to VDP control port"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"keyword",
        "value":"add"
    },
    {
        "type":"invalid",
        "value":"i.w"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"operator",
        "value":"#"
    },
    {
        "type":"identifier",
        "value":"0x0100"
    },
    {
        "type":"group",
        "value":","
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"comment",
        "value":"d1                      ; Increment register #"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"identifier",
        "value":"dbra"
    },
    {
        "type":"whitespace",
        "value":"   "
    },
    {
        "type":"comment",
        "value":"d0, @CopyRegLp           ; Decrement d0, and jump back to top of loop if d0 is still >= 0"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"invalid",
        "value":"rts"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; SPRITE TILES"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The sprite graphics tiles. Too big to paste in here, so we'll"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; include them from external files at the bottom of the ROM."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; If your tile data is in binary format rather than text, use"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; INCBIN instead of INCLUDE."
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":";=============================================================="
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"sprite_tiles:"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 1 - a red Fuzzl, 2x2 tiles"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"include"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"sprite1.asm\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"comment",
        "value":"; Sprite 2 - a bouncy mushroom, 4x3 tiles"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"whitespace",
        "value":"        "
    },
    {
        "type":"directive",
        "value":"include"
    },
    {
        "type":"whitespace",
        "value":" "
    },
    {
        "type":"string",
        "value":"\"sprite2.asm\""
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"comment",
        "value":"; The end of ROM"
    },
    {
        "type":"newline",
        "value":"\r\n"
    },
    {
        "type":"label",
        "value":"ROM_End:"
    },
    {
        "type":"newline",
        "value":"\n"
    }
]
