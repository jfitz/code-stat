[
    {
        "TYPE":"OPERATOR",
        "INVALID":"#",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"#",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"#",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"#",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"#",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"#",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"@",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR3",
        "FIRST":"(",
        "SECOND":"^"
    },
    {
        "TYPE":"OPERATOR3",
        "FIRST":"(",
        "SECOND":"^"
    },
    {
        "TYPE":"OPERATOR3",
        "FIRST":"(",
        "SECOND":"^"
    },
    {
        "TYPE":"OPERATOR3",
        "FIRST":"(",
        "SECOND":"^"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":">",
        "SECOND":"#"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":">",
        "SECOND":"#"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":">",
        "SECOND":"#"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":">",
        "SECOND":"#"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":">",
        "SECOND":"#"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":">",
        "SECOND":"#endif"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":"^",
        "SECOND":")"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":"^",
        "SECOND":")"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":"^",
        "SECOND":")"
    },
    {
        "TYPE":"OPERATOR4",
        "FIRST":"^",
        "SECOND":")"
    },
    {
        "TYPE":"LENGTH",
        "LONG":"  JKParseOptionValidFlags               = (JKParseOptionComments | JKParseOptionUnicodeNewlines | JKParseOptionLooseUnicode | JKParseOptionPermitTextAfterValidJSON),",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"  JKSerializeOptionValidFlags           = (JKSerializeOptionPretty | JKSerializeOptionEscapeUnicode | JKSerializeOptionEscapeForwardSlashes),",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"// As a general rule of thumb, if you use a method that doesn't accept a JKParseOptionFlags argument, it defaults to JKParseOptionStrict",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (id)parseUTF8String:(const unsigned char *)string length:(size_t)length                         JK_DEPRECATED_ATTRIBUTE; // Deprecated in JSONKit v1.4.  Use objectWithUTF8String:length:        instead.",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (id)parseUTF8String:(const unsigned char *)string length:(size_t)length error:(NSError **)error JK_DEPRECATED_ATTRIBUTE; // Deprecated in JSONKit v1.4.  Use objectWithUTF8String:length:error:  instead.",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (id)parseJSONData:(NSData *)jsonData                                                            JK_DEPRECATED_ATTRIBUTE; // Deprecated in JSONKit v1.4.  Use objectWithData:                     instead.",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (id)parseJSONData:(NSData *)jsonData error:(NSError **)error                                    JK_DEPRECATED_ATTRIBUTE; // Deprecated in JSONKit v1.4.  Use objectWithData:error:               instead.",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"// Convenience methods for those that need to serialize the receiving NSString (i.e., instead of having to serialize a NSArray with a single NSString, you can \"serialize to JSON\" just the NSString).",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"// Normally, a string that is serialized to JSON has quotation marks surrounding it, which you may or may not want when serializing a single string, and can be controlled with includeQuotes:",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSString *)JSONStringWithOptions:(JKSerializeOptionFlags)serializeOptions includeQuotes:(BOOL)includeQuotes error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSData *)JSONDataWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingDelegate:(id)delegate selector:(SEL)selector error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSString *)JSONStringWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingDelegate:(id)delegate selector:(SEL)selector error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSData *)JSONDataWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingDelegate:(id)delegate selector:(SEL)selector error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSString *)JSONStringWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingDelegate:(id)delegate selector:(SEL)selector error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSData *)JSONDataWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingBlock:(id(^)(id object))block error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSString *)JSONStringWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingBlock:(id(^)(id object))block error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSData *)JSONDataWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingBlock:(id(^)(id object))block error:(NSError **)error;",
        "WIDTH":132
    },
    {
        "TYPE":"LENGTH",
        "LONG":"- (NSString *)JSONStringWithOptions:(JKSerializeOptionFlags)serializeOptions serializeUnsupportedClassesUsingBlock:(id(^)(id object))block error:(NSError **)error;",
        "WIDTH":132
    }
]
