[
    {
        "TYPE":"TOKEN",
        "INVALID":"program cylinder",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"! Calculate the surface area of a cylinder.",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"! Declare variables and constants.",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"! constants=pi",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"! variables=radius squared and height",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" imp",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" int",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" cha",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" rea",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" rea",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" int",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   Prompt the user for radius and height",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   and read them.",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   w",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   r",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   If radius and height could not be read from input,",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   then cycle through the loop.",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   e",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   Compute area.  The ** means \"raise to a power.\"",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   a",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   Write the input variables (radius, height)",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!   and output (area) to the screen.",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   w",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   y",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   y",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"   e",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":" end",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"end program cylinder",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "REPEATED":"=",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "REPEATED":"=",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "REPEATED":"=",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "REPEATED":"=",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "REPEATED":"=",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"!",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"&",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR2",
        "FIRST":"/",
        "SECOND":"="
    },
    {
        "TYPE":"OPERATOR2",
        "FIRST":"=",
        "SECOND":"="
    },
    {
        "TYPE":"OPERATOR2",
        "FIRST":"=",
        "SECOND":"="
    },
    {
        "TYPE":"OPERATOR2",
        "FIRST":"=",
        "SECOND":"="
    },
    {
        "TYPE":"OPERATOR2",
        "FIRST":"=",
        "SECOND":"="
    },
    {
        "TYPE":"OPERATOR2",
        "FIRST":"=",
        "SECOND":"="
    },
    {
        "TYPE":"OPERAND_2",
        "FIRST":"all",
        "SECOND":"variables"
    },
    {
        "TYPE":"OPERAND_2",
        "FIRST":"explicitly",
        "SECOND":"declared"
    }
]
