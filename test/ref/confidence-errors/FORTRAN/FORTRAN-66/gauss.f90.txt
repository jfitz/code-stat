[
    {
        "TYPE":"TOKEN",
        "INVALID":"function gauss_sparse(num_iter, tol, b, A, x, actual_iter) result(tol_max)",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  This function solves a system of equations (Ax = b) by using the Gauss-Seidel Method",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  im",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"licit",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"none",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  re",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"l",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol_max",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  Input: its value cannot be modified from within the function",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  in",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"eger",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"intent",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"in",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"num_iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  re",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"l",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"intent",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"in",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  re",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"l",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"intent",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"in",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"dimension",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"b",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  Input/Output: its input value is used within the function, and can be modified",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  re",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"l",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"intent",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"inout",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"x",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  Output: its value is modified from within the function, only if the argument is required",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  in",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"eger",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"optional",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"intent",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"out",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"actual_iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  Locals",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  in",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"eger",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"n",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  re",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"l",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"xk",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  Initialize values",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  n ",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"size",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"b",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"ize",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"of",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"array",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"obtained",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"using",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"size",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"intrinsic",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"function",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  to",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"_max",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  it",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"r",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!  Compute solution until convergence",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  co",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"vergence_loop",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"do",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"while",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol_max",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"and",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"num_iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"it",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol_max",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"eset",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"the",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tolerance",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"value",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!     Compute solution for the k-th iteration",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"iteration_loop",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"do",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"n",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!        Compute the current x-value",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"xk",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"b",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"dot_product",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"x",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"dot_product",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!        Compute the error of the solution",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"!        dot_product(a,v)=a'b",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"tol_max",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"max",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"abs",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"x",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"xk",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"abs",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"xk",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"abs",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"x",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"i",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"xk",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"enddo",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"iteration_loop",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  en",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"do",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"convergence_loop",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"  if",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"present",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"actual_iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"actual_iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"iter",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"TOKEN",
        "INVALID":"end function gauss_sparse",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"::",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"!",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":".",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":">",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":".",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":".",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"<",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":";",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":".",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":"!",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":":",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"OPERATOR",
        "INVALID":".",
        "FIRST":"",
        "SECOND":""
    },
    {
        "TYPE":"KEYWORDS",
        "MESSAGE":"No keywords found"
    },
    {
        "TYPE":"LENGTH",
        "LONG":"!  This function solves a system of equations (Ax = b) by using the Gauss-Seidel Method",
        "WIDTH":80
    },
    {
        "TYPE":"LENGTH",
        "LONG":"!  Input/Output: its input value is used within the function, and can be modified",
        "WIDTH":80
    },
    {
        "TYPE":"LENGTH",
        "LONG":"!  Output: its value is modified from within the function, only if the argument is required",
        "WIDTH":80
    },
    {
        "TYPE":"LENGTH",
        "LONG":"   convergence_loop: do while (tol_max >= tol .and. iter < num_iter); iter = iter + 1",
        "WIDTH":80
    },
    {
        "TYPE":"LENGTH",
        "LONG":"         xk = (b(i) - dot_product(A(i,:i-1),x(:i-1)) - dot_product(A(i,i+1:n),x(i+1:n))) / A(i, i)",
        "WIDTH":80
    },
    {
        "TYPE":"LENGTH",
        "LONG":"         tol_max = max((abs(x(i) - xk)/(1. + abs(xk))) ** 2, abs(A(i, i) * (x(i) - xk)), tol_max)",
        "WIDTH":80
    }
]
